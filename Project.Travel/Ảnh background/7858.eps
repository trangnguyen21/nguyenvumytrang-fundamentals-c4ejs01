%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1805.m10.i307.n005.F.c06.1023148042 Geodesy contouring land. Topographical line map. Geographic mountain contours vector background.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Max
%%CreationDate: 5/24/2018
%%BoundingBox: 0 0 600 450
%%HiResBoundingBox: 0 0 600 450
%%CropBox: 0 0 600 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-05-24T13:04:41+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-05-24T13:04:41+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-05-24T13:04:41+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYqpXVpa3cDQXUKTwP9qKRQyn5g4qlc2k30ETRWkiXtiwo2m35LrTw&#xA;Sch3A9nV/agxVBQC3hnS2t5bjQrt9orKcCW0kPXjGCWjp/kQujeIxVDNZz20g0+WC2RJ2/d2E456&#xA;dcMN6QMQzW8vf0yrD+UH4mxVFGzuTbz21jo0mn3V2hgkv5JIGWNGqCyssskrcQSUXiBWn2cVW38M&#xA;Z1hrKFQI5f0bahR0At5J7p0/5ErT6cVTOQ/W9eQD/efS0Z5G7fWJl4oK+KQlifZxiqAju508vXOo&#xA;QHjeavKXsif5rgiG1Yj/ACYgjN4UOKqmu/UrTTLXSqiOy4f6QOvGxtFDTVHdWAWI/wCvirFPq9xq&#xA;L3WpXqlZ76KcQx1r6bSFbGBe43M0i7bNwVsVWsy3TkyUWO6Ylz3CXLKzHbwi1mQ/R7Yq7y9B+lNe&#xA;tllWoet3cKdwV5cpVNNvgvI/ucjviqveagk2oXV2i8455PUiiXq8begeP/PZbSAD/jOuKokerZlp&#xA;iwlntPWld06S/UbeQzuAf2jfXrD6MVVHLafHNHEAxsPXmgIHUWemxW3wkUO0spGKqNjbRnVEtAQF&#xA;9eOJT4JbSuG+hl0hVPzGKq1uDdm1U15XQt5lWnbULt72eM/KG2APtiqewWseuM13egyadzZbKzJP&#xA;pSIpp60q9JOZFUDVXjQ0qcVVZfL9tB++0hV066TdREOMElP2ZolorA9K05DscVRWm6gl/bvzjMVx&#xA;Exiu7V6ExyAbqfEEGqnuCDiqCNpd6OfU05GuNN6yacPtxD+a2r2/4qO38tPslVM7O9tb23W4tZBJ&#xA;E1QGFQQQaFWBoVZTsQdweuKoa+0iOeb63bSGz1AAKLqMA8gOiSodpE9juP2Sp3xVTttXkjnSz1SM&#xA;Wt254wyg1t5z/wAVOejf5DfF4chviqZ4qlLaRcWTNLorrCpJaTT5a/VnJ3PClTCx8UBXxUnfFURZ&#xA;atFcTG1mje0vlHJrWWlSo6tGwJWRd+qnbvQ7Yqr39jBfWklrOD6cgHxKaMrA1V0PZlYBlPY4qo6L&#xA;dz3WmxSXFDcoXhuCuymWB2ikKjwLoSMVRuKuxV2KuxV2KqdzbW11A8FzEk0LijxyKGUj3BxVJrux&#xA;uLKB4XjbVNEcUmtJayzxL4oWqZlHXi3xj9knZcVVLS0uTbxz6RqpktJVrEt0pu0C/wCS/OKb/g5G&#xA;xVSjsWtdW09JZfXnme5u7ianENMI1iBC1PFVjbgo8O5NSVVHi/8AgS7uR/vTeWM95Kymp9W4iaQ0&#xA;K9QvLivsBiqNIin1sFiq2WkQh0GwQTTKw5HsPThG3s5xVjepXNzq09xcQ8kjf0I7diKcVkkC2goe&#xA;8kzfWHH++1QMN8VXauVhnmtbABRbCC0t4+3+hRc4KH2uruBfoxVKbiGMxyRw/YKvHbn/ACWjuIoD&#xA;/wAD9UOKqnl65SPSNf1kP6P1hRBbMdvSuLgVlA26CR0b2xV2jmR5Xu0hq9uVFrbN0+tSOY4IWp+z&#xA;G/Ln4JFE2KpokdtGVUyFrWI8Gnbq1rprGe7uD/xmuiI28RviqlPIYog12pVogpu0/klmZtUvoj4j&#xA;0okX6cVUIILhRPIxpciykso2G1Lh5FtVf5m6e4+g4qjr6RkkuJLT92Q95JY07SWsMemxrtv/AHsr&#xA;HFU8X15ZP0RpchtLOwRIbi7UKzqQgKQxBgyhgnFmZgaAgAVNVVbumvNIdbt7l7nTKhbtJgpeEE0E&#xA;yuoX4Af7wN0HxAihBVRGoWExnGoWBVL9FCsrGkc8YJPpSUr0qeDdVPiCQVVbTtSt7+AyRVV42Mc8&#xA;L0EkUi/aRwK0I+4jcVBBxVQvNKf6w19p0gtr9qepUVhnAFAsyDqabBx8Q9x8JVXWGrJcSta3EZtN&#xA;QjHKS1c1JUbc4m6SJ/lDp+0AdsVRdxbW9zA8FxGs0Mgo8bgMpHuDiqWC21XTP95C2oWI/wCPSVx9&#xA;YjHhFK5pIP8AJlNf8vtiqNsNTs74OIHPqxGk0DqUljJ7OjUYV7dj2xVZq+mrfWvFCI7uE+rZXFN4&#xA;pgDxb5dmHdajviqppl6L3T7e748DPGrtGeqsR8Sn3U7YqhdJ/d32q2x243CzxL/xXNEhr9MqyYqm&#xA;eKuxV2KuxV2KuxV2KpPe2d3p876jpUfqK5L3+nLQCavWWKtAsw+5+h3oQq1fXSXdjaaxptblbST1&#xA;xGgPJ4+LRTR8ftc1DE8DvyWhxVRgL2FmDbp+kfL0yc4hEOcsMTivFVH97FxPwhfiA2Absqx/y5Om&#xA;oXk+kPILiGA/WZoww/0lYIbeC35EH+7l4eqR3qoO1QVU4skQ2Pl6Tl6r6hdC6vJCKGSZrSaYkjtx&#xA;dFAX9kADtiqW3TcbiIUrOl3PxQjY8tURxv8AP0e/hiqUXLRx6P6kTcXEUJReuw/RQVq/6oU/TirV&#xA;xC1noCjlF6U1xO0Ar8MkkjBJGlWi8VWht/8AnpXbFUy022ngtba3gLpdDikTNu63t7HszeMlpYrU&#xA;/wA1cVV0ez9IOqVsfTjkWJfiYafbtwsoUB6teTDmP5lqp7YquuLdmure1nYGYSKNQk/YNxcut3Ol&#xA;f+KrW3Kiv7Lriq2watxatMDGt4bSecMKFSDealvTvyoDirrcj/Q2n+AullLKT+zM0kupXO/j+6U4&#xA;qn+n3C6b5civLlG9eZRPLEu7vcXTcvTWvcyScF+jtirm0zW7u1c3d/6M0ynlZxxxSWqgj+7bmnqy&#xA;DsxDrXtxxVD+UtWmkjl0e+Bj1LTj6bKzci8S04sGO7UVlqepqrEDkBiqYX+mzGf6/pzJDqCgK/Ov&#xA;pzoP91y03/1X6r7iqlVV07U4b1XAVoLmEgXNpLQSxsenIAkEHswJB7HFV9/p1pfRCO4QngeUUikp&#xA;JG/TkjrRlb3BxVAi61XTfhvUa/sh9m9gSs6D/i6FB8X+tEP9gOuKpjaXlpeQLPazJPC2wkjYMKjq&#xA;KjuMVQetWUjw/XrNf9yVmpe3K7GQD4mgbxSSlPY0YbgYqjra4hubeK4hbnDMiyRsO6sKg/ccVS/R&#xA;WEMt/px2e2uHlQHvFdMZlYf5PNnQf6uKu1OO4tbyPVbaNplVPRvreMFneEEsjoo3Z4mJovcM1Kmg&#xA;xVNMVdirsVdirsVdirsVdiqT36tpNy+qQ1+oyGuqQDoo6fWVHig/vPFd+q7qrSRo1z6yEfoW8est&#xA;DtbzSn+8H/FUrH4v5WPLoWIVYl5k0zUND80NrejKOXFZpbZjxSWORykydqBZGViTsDJU0C4qj11a&#xA;GW3FzYh2ga5+twWxFJYLyIl7qzZezTR+oU/yi2+6jFV+vQJLNc3NvMojkSPUYLgbj0XRI5XX/Jge&#xA;GC4Pj9OKsae6EbCsZCKyl7Q1OySqRCPEmSKG3H/GJjiqdXukJ+iIEeziht5ZbdL/AFIMjfXIndUD&#xA;RhCWAYN6z8gNwev2sVVIS90gEhMU11yjdq0KPeKLq9kJpt6FtwijbsfhxVEwTJye/khPpQqNQa2A&#xA;4lmcejp1soI6iNeRT9mQqcVde2cip9QdxJcmL07uVa/FearKI3de49GISEDshGKqWqSG5uL70/sT&#xA;/WorYgkcSiQ6etAOn76WSnjTFXarSaC9KfB6x1GaMDbj9WhXTFpTtV+WKslv1E2saZa0pHEJrxgO&#xA;hMKrEin6bjkP9XFXXN1e3d9JYWEggW3Cm9vOIcqzjksUat8PPjRiWBABGxrsqxrzJYavY6hb6jFM&#xA;Z7hOK212UAd2BP7iZUCoWYMQnELz3TZ/TfFWT6FrdprFkLiH4ZFoJ4CatGxFaHxBG6nuMVVNQ0qK&#xA;7ZJ0dra9hFILuKnNQdyprUOh7q2300OKoZdZls2EWtIttvRL5K/VX8KsamFj/K+3ZWbFU2BBFRuD&#xA;0OKpRq1p9TL6xYxkXMVHu4ox/vRCv21ZR9qRU3Q9ailaE4qmsUscsSSxMHjkUMjqagqwqCD74qlO&#xA;lTpp9y2iznhRnfTXbZZYCS3pof5oa8ePXiA3jRVFajp0k8kd3aSi31CEFY5SOSMhNTHKoK8kPzqD&#xA;uO9VVKHW0SVLbU4jYXTkKnI8oJGOwEU9ApJ7K3Fv8nFUzxV2KuxV2KuxV2KuxV2KuxVJbKGO0ml0&#xA;G5UPYTozaerCqmEiklsf+MdfhH8hH8pxVL5UdbZorpWuZtGZorpGqz3GnXCleRG5f4AC38zxkDFW&#xA;PahZPZ3LzQSM7MIUmliIZp4ieVlcqejSFl4gn/dqjosjEqoyLUHgSC6jRXjikEhgjPIKLnZ446/a&#xA;t7sfHB4SgIfBVUj1G1jg1H6tbs0tqwWW0kiO7wOoWJkO/wARR1gir+2WbvirIEGl/odoOcn6Vkt5&#xA;F0205SPbtJNGUSa0Q1QxsJKin92pI+GhxVRtpbaZJvWPG0b1vrPX4LUt9du9h2dZoIaeGKpry9Ax&#xA;yXylChbWNViHxOJG/d2dvQfaK8aLTq0Y8cVQryXi3QSqrqXqvI7bMqX9zFTc9CllafaP7VV74qsi&#xA;ktokSWKNmtYkiuI4q1c2tsxFilSP727uSZR3I2O+Kq8Fs4MNo59Sb1bTT+Yrxdrc/XL2Qez7of8A&#xA;KGKsgi+PzHck/wC6LSAKfeWSUsP+Sa4qh9MvYbXy+dVmqwui15RRV3+sPWGMDu3FkjUfIYqtnsvM&#xA;N1Zu9y1tIZV+PSWQ+iVP+6zPUvz/AMvjSv7OKsOP1rSNQa+sXdZQ3G4SdaSrzJPp3Sg0fk32ZA3G&#xA;Q7q3qV9ZVm+i+ZbDU1RKiC8YNW2c7tw2YxttzCnrtVejBTtiqbMqspVgCpFCDuCDiqTT6bJpdLrR&#xA;0IhQ1udLSgjkTuYVO0ci9RxordDvRgqmlpd215bJc20glgkFUcfqIO4I7g9MVSxI7zRqpDC13pAJ&#xA;KRxbz24JqVVP92RD9lV+JegDClFUUG0fW7IrWO7tuVGXuki77jZo5FPyYHFUP9X1rT/95X/SVoP+&#xA;PeduNwo8EmPwyewkofF8VV7bUdO1NZbR0pLxpc2FynGQIdjyjb7SHpyFVPY4qj8VdirsVdirsVdi&#xA;rsVdirsVQmqaeL219NX9G4jYS2twBUxyr9lqbVHZh3Ukd8VSmS7mlRNWjhKalphaDVLNPiZoiA0i&#xA;L05bcZYjSpG23I4qlut6fHBbpPbFJdJnDNbyFqRxLcAc4C46W8+xVv8AdT8T9mgVVKrNYLqKWzmc&#xA;xuGMQmkHFo5ZWI4ToD/c3Lgh1/YmDcTuhCqUB5TMtrdxyevC728kYIEnqVPwBqAVYyuIWG3OQlfh&#xA;jGKs08uXeo/VZI7AwXJAEjW8jtCqmarLPCQsn7ib7YSnwHkoO1AqlGjWHp6/LpM0iypbtC87dBwg&#xA;X1JW70DTLBUeG2KoxbqWc/XSgkld47z0GNA9zcUj0+3f2hiCySeDUfFUNwgVXVi1zEQyykABpojN&#xA;xZfAPqF5X/JMa02xVWWSb1fUaSN5xJJKZ2oITcRjhPdPU/7z2a/uowftN70bFU50S2ht4Tqlzyt7&#xA;O2hdLQXBo6wk+pNcTV6PMy8jXoAOhLDFW457i20S/wBVZCl7qDGS3hfZg0gWG0iNdwx+Co7MTiqt&#xA;NapFLomkx7w29ZWXs0dpGETb2lkjb6MVVbq91C4v3sNNMcZgCteXkqmRUZxVYkQFOTlfiNW+EEbG&#xA;uKpfqularcRUvIIb8xqRHdWlLe5UMKMoimMkMgb9pXkCnuuKsSltfTkaOlSlHkQqylQmyvJFKHaM&#xA;LSimQFR+xOg2xVM9P1/VrX0xFK08TD93DLymDgbkxkGWZh/lRS3FP5RirJ9L8zWN8Y43/wBHnlJE&#xA;SsytHIy/aEUq/CxHddnHdRiqrcaKvrvd6fMbG8kPKRkHKKVqdZoTQN0+0Crf5WKtW+rTRXEdnqkQ&#xA;trmU8beZDygmahPFGNCr0FeDfQWocVVb7R7W6k+sKXtr0CiXkB4SgDoG6q6/5Lgr7Yqs0++uRctp&#xA;2ocfrqJ6kUyAqk8QIBdVJPFlJAdamlQe+Kqup6Xb6hEquWiniPO2uo6CWF/5kbf5EHZhsQRiqMxV&#xA;2KuxV2KuxV2KuxV2KuxV2KpVqtvPbzrq9khkuIV4XduvWe3FTxH/ABZGSWj+lf2qhVD2MlrbyraA&#xA;pNouqhpNPbZow0gLyW5HTg4q6f7JdqLirHNa0ZNP1RQzUt5I2WOeT4lMLARlZt/jWL4Ueu5iIavK&#xA;EHFUk1qOUuJrjlHIB9WvHdjWkRKRzSOOJLQMPSkkHxNGylaF9lU80e5j4LJeSvZ+mxE15Hxje1mk&#xA;J5swIZPQuGU8gwKpMGHgVVWXYtI9W1NtNmM9ouh3cQuQ5kEl36okk+M1Dv8AvVrTp9ntQKosyyNG&#xA;JbchZj6l1EadLi9lNjp5NeyRAg/IYqh+UfILaEQqCBZsSKRrRrWzcE9Vjt4Z7nie5BxVHeX7CPUL&#xA;ivplNPhETNC1fsIoNnbMDvSOMieRT+248CMVTqdP0rqjWzb6dp7K069pbnZ0Rv8AJiHFyO7Ff5SM&#xA;VbodS1ck/wC8OlvRR/vy6K1r/qwq23+WfFMVdp7C71W81ImlvADZWpPT90xNw49jJRP9hXFVCw1C&#xA;30/y/wDpW6qDesbortzZrluUUe5AqqFUqTQAVJAFcVSOPzPqmozjhKYIC6xkQ8kjUu3EB5jb3TVq&#xA;di4h9gR8RVRWpaNrciq06yXCRHlCySQ3Lo1Pt8XhtJFp/wAVTBsVSKeAIskpIlgZws8hpx5jos6z&#xA;BeMnT4bocunGcHFVsvLlKH3kPBbjnUmtf3ayiajbkfAtx/zznrTFU80XzNcWoEd2zT2a8qu3JpIl&#xA;Q0dgzgPIsZ/vEcerH+1yHxYqyu8s7PULN7e4QTW8wFRX6VZWG4IO6sNwdxiqF0me5R5tOvHMlza8&#xA;THOaAzQPX05DT9ocSr+4rsCMVa1+JhY/XohW504/WoqbkhAfUQf8ZIiyfM17YqmKOkiK6EMjgMrD&#xA;oQdwcVbxV2KuxV2KuxV2KuxV2KuxV2KuxVj2o2cNl6sFxUaHfPyZ1PFrO5ZuQlVv2UaT4uX7D79D&#xA;8Kq26FzfWEtncIsmtaWVmRKALcLQqGUHolxHzjYfsksN6VKrEdWX0XQRP6sEix3FncuC3qRKF9My&#xA;A1ZiojQSDqxijHWTFVXRL36tNJ6Ui28lswMLzv8Au0EgA+r3Div7uVQtJKf3i+puJFDKsg1aS7vr&#xA;uxt5LdLRHoqws8byNFzR55Dw5KkSxRsoPLdmXYd1UntLi5fTIJIzS6aMSQsRQFrazit41I2pS8uu&#xA;WKqq2UEkkluu1t6sduVO49GW5Gnpv729m6j/AIyHxxVlfljidDtpf93Thprr2uJGLTqf9WQstO1K&#xA;Yq7yyUOh2zg1lkDSXXiLh2LTgjsRKWFO3TFWvK7KdCtd/wDSKE3qn7S3TMXuAw7N6rNXFVDQlivP&#xA;K6WAfjcJb/VL1SKPHccOMvNT35Hl79RscVS/VFbXtEjs7Z4oNas+MkmnzCnxiNo3RkNCYyHbiR8L&#xA;eNK4qk66prdtZPo99YzWdgytG8n1f1DCrVNFn9SON232YKaGlee5xVlI816beaRe3mkzJcz2kMkn&#xA;osGDAoDuy7MVqOq9e2KoS80jWJgl6s1veTcBxuLVTazFCK0Vme4imQ1+GOQcffviqQTWTNbK0UYj&#xA;4RTSQrEnFGWE8biFImL+hMveIM0MlDVevFVDes1vCzI372JGeEgmhkt4rhouBYljwe1KqTu0MoRq&#xA;8cVZ35b4foeERV+rh5ha+H1cTP6HGn7PpcePtirr4cdd0uRP7xluIn/4xFVc7f68af5nFUzIBFDu&#xA;D1GKpb5aP/Ov6eu/wW8aAnckIoUE/OmKplirsVdirsVdirsVdirsVdirsVdiq2SOOWNo5FDxuCro&#xA;wBVlIoQQeoOKsbksbi2uYbFJeNzCGfQbyQlqqBWS0mPVhxHzK/F9pOWKpZfQR3iGKKNomlld7eBm&#xA;CvBfAc7i0LivETD97E3QOOY/YxVKLG1M17A1pcLZ6qF/0C5K8YpAa1t5o/8AfUvFuK9YnDJ+ygKr&#xA;JNMjur6C609bKy0qZ6R6n6BK3HF6gkRCNR+8FeD+qw77kUxVDXETJKIIov38Et6IIa0BnS6i1CCJ&#xA;a95Yl5eG3hiqxzDIQIazRXPqtbiMiNri3llM49BjQLdWkvLjGaGnv9lVUs9bnsZJblWje3Z/9KJr&#xA;FC8hG7HlvZzn9uOYBGNKMCTiqP8Ar1sLsz2NyNMvrggy6dfLwinb+ZCDQuQKepEzDxDbYq3cNJHc&#xA;tdy291pN69BNc2y/W7aYqoA9RUDMQoFObxo1BSoGKqEkq3bG7C219JGOLX+l3Qt7mg/ZaN2C0BP2&#xA;XmI9sVQt/qETxBbqT65EnxFNSso5+JPhJAY4x/wJxVQj1HgnO09WJQOXqwzXyxRrWn93LBc2qdO5&#xA;AxVBahePLIl/DMsOqRAvbanxRWdF6pc+izwzwkDeWI/u/wBpVFcVTXy15ptUikiW3m9LZmsbdGne&#xA;1lJpJGFQFjCT8UbgU3I+GgGKrLzVTb2lxcTlVkt/rFzcRkikdxdKY7a2YioDCJ+UtD8P2jscVYjY&#xA;R3WsajBZxM45uiKa/HGiszoxG/F4VdqH7Lrtir2KCGKCGOCFQkUShI0HQKooAPkMVS+L/SfMM0g3&#xA;TT4BbqR/v24IllU+4RIiP9bFUXqN4tlp9zeOKpbRPMw8RGpY/qxVbpNo1npdnaMatbwRxMfEogX+&#xA;GKorFXYq7FXYq7FXYq7FXYq7FXYq7FXYqhtQsIb62MMhZCCHilQ0eORTVXQ77g/Qeh2xVjF/Fczt&#xA;Ml1EV1OFB9djg2+t20bVjubbqRNA9GVeqn4dwyNiqW30EV1E8ssirQC4mmhHwgOQVv4eJBMEhUGZ&#xA;AaowDghlDFVHx6jc1EepM1tqOnj4dURRIY0b/lpRQvOGTj/eKOBpU+ky7Kp3baOLuzu/rsyTm+mS&#xA;6Se15RhCkUaRvG3JyGHpBgQf7VUpv9H1CAy+rELiGU8ppoYhLHIR0e4s6q3qD/flu3InfjQUxVLR&#xA;JI1ZUcsYhwacSvIYu4RrpF+sxKOrLdQsvicVagb0o1iQ+nFc7RxJ6MSzV3ASJzJp9wWpVjE0be2K&#xA;oy0kMU3oW3OCYCv1exY2kwHcjT7znAVH86Ma9sVRM0Gh3DiTUry8dwKF7u1WHbw5/Voh9xxVda6d&#xA;5CSSsN7CZgKHjesCRWm6JIq/hiqIl8maFdfvbeSRHB2mDrcMD7NcCYr/ALEjFUk1TyBrLB2s72KZ&#xA;3YMfWDoeQ6O7EzNNIP2S7UB6AYqw++8s+ctNufrB00yxqSAojjvI+G1CY/3o7E1IruT3xVTe51LV&#xA;fQhRGeWF6R6fGhRVJNapDEFUFSdyBWh5daYq9I8keUjo1ubm7AOoTLx4ilIkNCUFKirEAtTb5/aZ&#xA;VkOoXqWVlLdOpf0x8MS/adyeKItf2nYhR74qp6TZPaWYSZvUupWaa6kHRpZDyelf2R9lfBQBiqH1&#xA;lvrM1rpSbm5cS3P+TbwMGav/ABkbjHTwJ8MVTTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgtW0&#xA;43sCtE4hvbdvUs7mleEgFNxtVGHwuvcffirGSgISeOloHnYKG+IWWoOaSwydOVvck7+5DD7SlVV2&#xA;nm3eKG0uS1jJBI0Wl3YPx20u3Kzdj8J4mnAN8MicepFcVRFmb+zvJoreFYr6P97caap4213GT8Vx&#xA;acto5Kn4krTkaN1WTFW4otEvdXee6gjuYtTp9Su5V/ewywoEktamjxMvAuAKHlz6EbqrtW0X6pF9&#xA;cadLiC3pwa7d47iIEgcYr2P97v8AyuGLdK4qkME9nNLLFbzj1pWKXFs/owzOx34sDysbpz4EK4Xq&#xA;1cVV1UspszHVUHOSyMLTIoH7TadOfXjVeim2kZSdxiqMsdQuIoy0F3LHAh4l0rqVordxICFvIiO6&#xA;uQq+OKptBqGo3EHNYbPV7UGhmtJQCxHhFJyQU95sVUJE8tE8r7RDby0PxPZiTiPH1YFlRf8Ag8VV&#xA;bS20O5YjStUlSUfswXbS8fb0ZWljWnhwxVFfVNeg/ub+O6Ub8LqEB29vUhMar/yKOKtHWLq2oNSs&#xA;JYR+1Pb1uoR9KKso+bRAe+Kq41vRjbfWhfW5tq8fWEqceR241r19sVQkRl1a+huSjx6XaEvAsilG&#xA;nnpQScWoRHGCeNR8TfF+yCVU4xVKtDpcm51Y7/XnAtm6/wCixVWGh8Hq0o/18VV9YvZrWzpbANeX&#xA;DrBaK249WTYMR3VBV29gcVR2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKJ7WBtcltpUD2+q2bm&#xA;4iPQm3ZYyT7slwAT/kjFUrhAisIr68AubR0NhrwkowJtnaH6ywpQ8WUiQ/ymv7GKq15aywNb2Ukx&#xA;EfMNomqNV2hnoQsExJq6stVDE/Gvwk8qFlVC6iS6guLtYHjlVguuadGf3iyJQpcwkDeWMKGRgPjT&#xA;3CgKoyO4OradLpdzNGNRMSz21wlDHMqsGhuoxvVeYUsv7J26EEqqhstJ8xWRN9ahLyKsFyo2lhkF&#xA;C0fOlSp2ND8LrQ0IOKpTfeW7y1j9M87uyQ8o2jQSmIjoxtmPIU8bV0PgmKoAtdqv1wEXsUX7v69D&#xA;JIZoqDdGnQfWY6HcxzxyL/M4xVF291BezJI0a3ty68onVlstRZF7xzRMsF0PExyKmKprZ316ZfQs&#xA;79bidRVrDUozb3NBsaOip8P+V6TV8TiqtdzwzAJrOiO6r/uxYkvYq/5IQNN98QxVQhXydK/pWt4t&#xA;tIf+Pa3upLVh84UeOlPdcVR/6M1GMBrPVZSB9mO5SOeOnzURSn/kZiqgbhrW5+sappiK46alar66&#xA;gdPjHETJ9zKO7YqmsN5aT2wuoZ45bZhyE6MGQqOp5A0piqU3t+mro2m6XKJY5fgvr6I1jiiP21SR&#xA;djKw+EAH4a8j0AKqdRxpHGscahEQBUUCgAGwAGKpXUXnmGnWHS4t/D6xcD/iUcI+6TFU1xV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KpbqR9PVNKm7PLLbt4UkhaT/iUIGKqUBFhrE1nIP8ARNTLT2pP&#xA;2ROF/fQ/7MD1V8fj8MVQ8ltFpyNp14ol8v3PwQMxP+jsx2ic9RGT/dt+yfh/lxVRaK8hvYraWYxa&#xA;lGvHTdUcVju4x8RguAKDmNyRsT9tP2lCqXyegkjw3MclksD/AFikXxS6fO5PKeFqUktJamp40XcM&#xA;KEhFUwFxcyXcT84rXWmQCCYEmz1CEfEFDDka03A3dNyOaV5KplHr9r9Ru7iZGgn0+NpL2zanqxhV&#xA;LVoDRlYKeLDY/fiqAutO1i6ZbySxt4L6gpLbXLx3Cr1CmT0uEtP5HHCuKpFfIBKYr22MU0rAkmJE&#xA;aWTsz2/I21y+1eUEglHYDFV8d8xtzHdejfWMbgcLtmkjR+wFy6+vbSD+W5WtdhJiqb2dxIkqW9nf&#xA;S2lyw+DTNVUy8gNz6U3Lm/8ArLLIB4Yqjpr6cJ6Wq6U7RftSQAXkP/AgLNX/AJ5Yqgz/AIDDVkis&#xA;7KUnrLGLOWpNf2xE9a4qq20WlS0/ROtOrH7Kpcrdo29KcZjNtXb4CMVUZrS2tpWl1rS7eeN2DS6j&#xA;bRckZh0eeA83Wn81XA6kjFWQwTQTQpLbuskLgGOSMhlK9ipGxGKoPUdYt7Q+hH/pGoSD/R7FCPUc&#xA;9q9eCeLtsMVX6TYvZ2gSZxJdSs011KNg0rmrUrvxH2V8FAGKozFXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYqgtZtJrrTpI7egukKzWxbYetCwkjqf5SygH2xVY6Wmt6QjKWRZgskUgoJIZUNQRWtHjcd&#xA;D3FDirtNujfWk1tfRr9agJt7+GnwMeP2lB6pIp5D2NDuDiqBFtHaFdFv+U+mXPw6fcOzF0cfEIXe&#xA;vIMtKxPWu1PtAFlVjWztNDpupzN9dQs+kaugCyNQVKkgcRKF+2tOMi70+0FVQaaXJKZ7AJFb3q/v&#xA;ZNPbkLK5UMCLiClXgbl1Me6PuQ3wsVUKZpnmW2vWMGo244W11cULhZDQW13xHGWCb7Kyrsx2PGQC&#xA;qqY6Hqswtf0ZKxgmIeDT5ZSGZZEU1t5exlh7f78T4hXfFWtL8v8Aly/0NBcWv73h6WoPI7CczRjj&#xA;KJ5QVZzyG5JoevQ4qx6ay1m1Rb7TLW81HS+FYROI1uRCQWH1eWF2nKttSKWLjTqMVQ2mazbXXOxt&#xA;XV0qVl0i5hXYrXY2hPAkcTvbOp7+kcVT6w1tYlYw3rWQjNJYrstd2aE70Mx9O4tz7T8adkxVPotY&#xA;vljVrjT3dGHIXFm6XEJB6UqY5T/yL+nFVlzqGg3IIurOWRafEZ7C4K0G25eKmKoJj5RiIa2vRo79&#xA;V9KQ2iVJ6mGQCFj/AKyHFVBbezhDz3SevYTmsmp6ZLLChNQS1zBA4FfGReVR9riuKsi02z0u2tl/&#xA;RsMENtIAyfV1RUYHcEcNj1xVVu7u1tLd7i6lWGBBV5HIUD78VVcVdiqjc3tla8frNxHBzrw9R1St&#xA;OtORHjiqn+ldL9WGH65B6twKwR+onKQeKCtW+jFVSO+spZ2gjuInnSvOJXUuOJoaqDXY4qtt9R0+&#xA;5WR7a6hnWEkTNHIrhCOoYqTT6cVWjVdLNutyLyA27nik3qJwJHYNWlcVVfrdrWIeslZwTAOQ+MAV&#xA;PDf4voxVYNS04tIouoS0QJlAkWqhdiW32p74qua9s0NHnjU0VqF1Gzminr3PTFXLe2b3L2qzxtdR&#xA;gM8AdTIqnoStagYq769ZceX1iPjz9LlzWnqfydfte2KuN5Zr6vKeMehT16uvwV6c9/hr74qut7m2&#xA;uE9S3lSaOtOcbBhUdqiuKqmKpOSNJ1Op+HTdSk6/sw3b/qWf/k57viq7V0ayuE1mFSRCvp6hGoqX&#xA;tqk8qDctCSXHtyHUjFUdd2tpqNk0Ev7y3nUEMh37Mjow6FSAysOh3xVLYI31KyuNK1FiL+zKg3CU&#xA;Vz+1BdR7UBPGvSgcMNwMVWcLrU9ODfDFrumSFQ+6p9YRRXxPpTowNP5W/mGKu1O2t9b0SO/t4BJc&#xA;rE0lvFIoq3IfvbaQfyyU9Nx2O/UDFUnVIOMjTu8tmVgF1MSRIbWbeyvQ3USwsCjPWtF5n7IxVHW1&#xA;1PY3zzXRHqrJHa6vQUWQPRbW9UduWyP269o8VRenXT2GkX1rQNJooeOIGtGiWMSQe5/dsFJ/mBxV&#xA;J9b8jaZqmli91LUHjuxD6k2oSCMKCVqSahSqLU0UOAMVYdPqevaFNF+kYxrGnLUWt7Kk8M6r8RpB&#xA;cMI5l6DoWAHSuKprperaHcFZNM1C40u4kNRG6GWNmG7ENblGf/jJcK2KsjtNX80RxerGbfWLVf8A&#xA;d1uySk0/mki9M19kt2xVG2fm+KWUwTWki3CiskcREjKPH0G9K6p/zxxVekPlfU7p/qzLb6mBVmi5&#xA;Wt4oHQutI5Svs444qgn0+50eSR5LmeGwlJM17ZrGvEncvcW5SSNSf2pYVXxYADliqcWOiaHEYrq3&#xA;t45pQOUV4/76U8v2hM5Zjy8a74qmWKuxViv5k+Xf035Zmit7GO81KN4TaFlQyIDcRmbg7/ZrGp5U&#xA;O4xViPmTyPqR1LV7TT9DRzqUlm2j6rEYo47FIOIccaq0fHiSOA+KuKro/wAr9Yu7/XNVe4+pXbXO&#xA;qnTIVjRXkF4rLHJJcKxbgQ2y0+HriqXt5J8yXtjdrYaJ+hvT0mCxuLYvEn124iuElkIKE7MiMObd&#xA;a/PFVW68neadT09beDSodNgfUvWtont7VBHCbZ0JmiiJVwrkKCakjemKoePyh52WPR7q00xoB5ag&#xA;thBaXEqtLNO05luTCVYpQ9PiI+HYYqix+WGrzW+tatLVL5v0klhpyRxo8guiwRpJg55gq/wq3TFV&#xA;S98lebvWm9T1dRL22mIkzLBEV9C5DyRAJxB9NRWp64qn/k3RLvTdbuo9Q0EPem6urgeZCYWLxzsS&#xA;lCSZakfCVHT6cVYovkDzp+kpJjGw0z9LjUxahk5GUXfHnTl9n6uxb6KYqtm8oefW/TF5LYCRvMlt&#xA;dLPbpIvqQyCYSQerybj9j4F4k7dcVegeRfJn+Gre8Z7kXFxqEizTKkS28UZC0CpEpYDrua74qyjF&#xA;VK6tYLq2ktrhBJDMpSRD3BxVBaPcXH7/AE68YyXVkVHqt1lhevpSn3PEq3+UrdsVU9LB0+9k0c/7&#xA;zcDPpvtEGCyQ/wDPJmXj/kso/ZxVvVV+rX9hqS7UkFnc/wCVFcsFTbxWfhTwBbxxVcg9DzHIo2W+&#xA;tRJT/Ltn4s3zKzoPoGKqNpdRafba2zf3Gn3E0x+UkKXb/wDDTNiqhZ6XFC+madcAPXSpLW5iPSRY&#xA;vQTf2HNv+CxVDwQi5j09bsmT63Fc6Nft3kaEP8ZPsYJKf6xxVfYtLdSW/wBYNZdT06S2vTSi/WLR&#xA;uBA+Zmk+7FVa2rqUGgpMK272wvpYzSjPEsXpqw8A0vP5qMVW3GoyXtqbmaeOz0aZvTgBjE890CSA&#xA;VUhl4yAVVQjsw326YqwfWvJ9nHK9zp9ybNHNXivbWe0hkWvKjTFRElacQtE98VS1P0jZXXG+je1v&#xA;kXkJGYRkrtvHOtVjhFQB6VWY7Yqn0evX7p6GoJFfW8bAGG9QHixGyqXPqRN/L6sjSHtHiqZx3dje&#xA;x+k0nARsAbPU+U8CyHtHdNSe3kP7Ilo38seKpgupalpZCzyNBEKKIdSYtCf+MWoIGp7Cdebe2Krl&#xA;njtHMtv6+jLN8ckUsBubI8tzIrQsY4yf9dQepUnFWUYq7FUDqeqiwKcreWcOjsBCpdyyMgChfcOT&#xA;17Yqg4fMxlukg/Rl6geRI/VeNQg9RVZWPxV4/FQ7bEYqpw+bYpOQOnXo4SGHkIeSM6v6bcWB6Bu7&#xA;U/Xirc3mh41hb9F3hLsyyxiNWZQoHTizKa8h38cVbHmaX9HyXR0y75xcA8QjoS78fsg0YqOR3p2x&#xA;VuXzP6YUHTbx3MaSSKkYPHmSpWpK1Kld6Yqug8zJLbSzfo+7R45An1Zo/wB8VO3qcAfs1BGKrW80&#xA;cTCDpl8fWRXFIgaB3VN/i2ILmoO9B8sVWjzYgVmfTb1Aq82/dctjzoAFJJaiA/SMVdeeaHhCrHpt&#xA;3JKyxyBfTIXjJyO7Co5BU3A6HFVsXm4SwRzR6beFZo/Vh/d1BXiSORFeNafTtTFUVonmK31aa6hS&#xA;3mtprT0/WjnCqwMqlgOKsx6D+mKprirsVS1uP+JE9P7Qs3+sfIyr6P6pcVa1Sn6T0cr/AHn1iQN4&#xA;+n9Wl5fRz4fhiq/zCqHRLws3HhGXU/5afEn/AAwGKrXpJ5khp1trOXn/ANHEsfD/AKh2xVKoj9cj&#xA;itwanVb6a6m71tLWQAN7rIEhX5PiqZxSLJrl9cuQILCFLcOduLv+/mr7cDEcVQOneoY9EWnCS5nu&#xA;dRljI3WOZJXI3/le6QYqssumkOu/q6pfyAjvFILtwfkarirdgpiOlyoCBHe39jSm4gMk3Ef8Fbx4&#xA;qgbe6ksFA9MT3Oj2F/Fao1af6I8QQmneSJo6ke4xVXeC79SSJJr2/vrcAX18lwtvbxyFAxRIWPok&#xA;8WBoYyKU5NXFUot/il+ovBvzqlo9IUZyCR6TRswtbhl5FHib0pKH7LV4qtR6ZGWiFpzlEiuLQfDC&#xA;7hT+9gUEBIZ46EvCR6UlDVQeRVVv6pwSKVXCxsTFbz1aGImtDDybk1rIG2MEoaFjsACSAqiLKbUr&#xA;GU29pzjZF5SWBQEhK0YtZ8h8I/ntJCpP+68VRVncaSY2nW1l03ixE11pju0CSdT6sKBWVh1b1oKD&#xA;xxVmGKuxVJvMZuONskWqJpwkfiQwBeQll48TXl8J+1Tsd9sVS28N3/oskfme3t2hhoeZjZZm4MFl&#xA;cFgP92q1AKVpiqtK+qNKqL5jt4+TVCiOEPwMjqOPLl3+GviPnVVbMdTDH6x5ghjQlZ4ZFRUQQsZA&#xA;OT14nmrDjU78ajcE4qp3I1NoUiPmaCLlIeJVY91SX7POtainBt96U61xVETPqCw8U8wQQiOkTSuI&#xA;XJZIyXrWnFviDHr/AFVWctTMNyE8woTb0m+GGJ5ViCColQKW+LrsoOKrWvrueS2t4Ndt4maAqw4h&#xA;ubK3AvyNCHIIJWuxHfriqo66g08MkXmKJeQEbpSJg/GdlqoNV5VdYm23I8dsVU7mS9L8Y/NMCQyo&#xA;Xi5Lb+oYxyq/IcQR8J3AFKYqqqdU/SCxt5hirNE3o2qxw7l0YRyA05E1+KnQ0O1K4qmOn2GqwXbS&#xA;XV99Zg9MqIygVuZavMkU7ClPuxVMsVdiqWaPWe4vtRO/rzGCD2htSYwPesvqOD4NiqzSgb68l1h/&#xA;7shrfTh2ECt8cn/PZ1B/1Qvviq/XT6iWlgv27y5jUj/iuJvWlr7FIynzYYqgJbuUR6tqMBH1i5lT&#xA;TtOPX4oyYVJHgtxJIT/kiuKr9M+qWa31+xKafpsQsrdjU0gslPqt06+pyU/6gxVSa1n/AEPaabOt&#xA;LvWJi+oL14pJWe5Q/wCTwHog+4xVffX0i3eo6hEAz2UaafYA9GurhlLD5F2hX5g4qt5W+myMwrJZ&#xA;+XbDh1qzyuoPH/XEcS/P1MVX2NnJHdaVZTMGk0+F769dehuZg0fL5OZJz9GKpOoNxCJnFPrEcLt4&#xA;8dZv1qp90iiVcVTC3t4L5bW0uVSWCXUNRlngccllEM8yIGU7MFJU0PgPDFUDrmk2elamskcAj0e6&#xA;iYXcEI4LGIyGkdAv2WT4ZlK/Z4PT4nxVUa3upJWt3cJeSTehLNSijULeMTWt2AKACaFQJB8l8aqo&#xA;954Gt7XW1iC2uoCOLV7RgGUiWkYd16c4nIRz/JWteK0VXnTIPrJ0a4LG1dDcaTOGImt2QhZEjk+0&#xA;vDmpT/JJX7K4qsCXk0L30aAa/pbmC6CDiLpEAfgR4SxsHT+Rj1+1VVkeKuxVJdfERurQtprahIiT&#xA;vHQkCPjwNaUIqTSnfwr0xVJhaGOVx/hlFiiX046OzOYpE4suy0HhSp3JNepxVE3CQmzti2gF+EhW&#xA;SBg0jRJETItNty3qGlPh6rXtiqxrhrnT7a4k0F5llgPGIPI7BHR/hZyoNftDcftAg7nFVSCISWgi&#xA;utACKsq+nFzLc2ZzIzEcdviNaEkeJA3xVq1iQT24fy8YkMvwScy8ilowrux40C0Cj4n38KjFUXYS&#xA;TzXNvDJpD2cCgqHLkjgYySCFAFOTUo3saVrxVRn+GdBrUWUdaEA77V7jfY++Kqv6D0n0li+qoY0Y&#xA;uqkV3LFz18SxxVZJ5d0SSNY3s4yioY1G+yMSSOvfkcVVI9F0uN4nS2QNAawnf4fl/DwxVG4q7FXY&#xA;qx+3nmtvI1s8DgXTWMSQOOhuJo1WM/7KRxiqd2ttDa2sNrAvGGBFiiXwVAFUfcMVSGW+kkS61qFQ&#xA;zEfUdEDbh2kcKZP9WSXj/sEDd8VUrgiy4Q2/76LQoFSEP1l1C5X0oVY/zcZPi/4yA4qjLiyWCy0v&#xA;Q0Yyeo6fWJD9po7f97LI3/GRwqt/r4q6e9ijvtS1VwZItLh+qwov2mlcCaVV8S/7lB/lDFVG2thB&#xA;PZWdw68dPifUtTm6KbiYvQ7/ALJYzP7cVxVTgie4t9OglBE2q3J1O8UijLFEVlRW/wBQ+hEfbFV1&#xA;07Sabr16rcZLp3sraTuoj/0ZfunaRvpxVp41W/nQLSMapawimwWOK1ikQD29Q/jiq3Q2UT6PczHj&#xA;9etrqeDb4fVvJUumSv8AMF6ewbFV3mCV7ia8CdLaD6jBUGhvNQ4ov/ItGTfwc+GKrPgnvSsIos99&#xA;FHAQQaQ6aAZZSD0/eo0RPuvjiq52WTyZdcNl1FrgWh8Rf3Li3YfP1lIxVM9RIk1nSYF2kjae6b/j&#xA;GkRhYf8AB3CfdirrGj67qkqbIiW1u47eqivKx/4CdMVTPFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FUJq94bLS7q6Xd4omaJf5npRFFe7NQDFUvubQQ22i6Ou6rJCHp2js09UN8vUjjH04qravLJd&#xA;zLo1uxV51530qkgxWxNDQjo8pBRP9kw+ziqHu5raLUC7Lw07QLYzsqDb1XRlVVA7xwhvh/y1xVRs&#xA;LOdryytbinrxBtU1Om4+sTlkhjr+0q/HxP8AxWuKoo3US6nqepTk/VtLgEHTdTxFxOR4goYh81xV&#xA;CWdrOf0Xps4pNVtU1RQagSl/UVNv+Xh+S+0eKrGX65pbEmreYrsID42lOg8A9pCzf6zHFU0tv3+v&#xA;3s3VLSKK1T2d6zS/erRfdiqFs7P675T+rxOBPNG59Rh9m55FiSB/LN1xVL555LthParwfUliuIIX&#xA;IHHULBw0lu7dmdI+B8ODYquhZJ9OGmxHjDODN5fuGBX0poviW3k68ZIHWgU9UBXfi2KrLU3cEs13&#xA;qsfBrBJdUlt0IYma5aWOCPkuzNFBHwpvVmFOgxVSs7GSSYaRI1JljisLp1JqLeGCOe5ZDWoM8lyq&#xA;MfDfqBiqfXKi61q1s1FLfT0F3MBsC78ooE8CBSRvYhcVU7e4iF1qusztS2tgbeN+oEVsC0zD39Us&#xA;p/1BiqHaK6h8vw2prFqWsScZSD8UclzWWeh8YYg/H/VAxVkOKuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KpOXGsagqpvpmny8nf9me5jPwqp7pCwqT/PQfsnFVJNQhZ7vX5KtaQIbbTlXcyqWHNkHc&#xA;zShUTx4gj7WKo/R7Ga2t2luiGv7pvWvHG45kUCL/AJEagIvyr1JxVJ1Hr20Ibrq2rO0jdjHbM7x9&#xA;ezQ2aL9OKphosiNb3erSkKt5K8ysegt4h6cRB8GjT1P9kcVQEEcs2naXYuCJtUla/vV7rFz+syKe&#xA;tRzeOH/VOKumkml0/Vr6Nis2oziws5B1SMSfVEYewlaSUexxVMZIY013ToEAWGC0uWijGwBVoI1K&#xA;j/JRmH04qtjuVsdant7k8Y9TdZbOYiimVYljeEn+bjEHWv2t6fZxVZOW0W6kuuukXT87of8ALNMx&#xA;3mH/ABW5/vP5T8XQsQqhtcsYrd5bgsY9OvWQ3ciUrbXK09G8SvgVUP26Mdg1VUuMl1LFe2hiRL24&#xA;Yy20ZqsQ1S0IcqrH7CzhI5U70LHrXFUdcLcTH1LmBrabU7+0S3t5ChcRWvGdg/psy7+lKftHanyx&#xA;V1hT9Nx31fiu7q/t6eAiCRf9iIxVG2NxHAms6jKf3a3EjsfBLaJYyN/eNj9OKod7WSLy7p+nSilx&#xA;ePBHcrT7bO3rXVf9ZFkriqNkAn8xwrSq2Ns0pB6c7l+EbD3CwyD6cVTPFXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqlF9PPqF0+l2cjQxR0/SN4hoyA0IhjP+/HU7kfYX3K4qtvo1leHQLECCARhr1ov&#xA;h9K2rxWNKdGmoVHgoY9aYqvuYo5tVsdPjULbWSfW5Y1FFBX93bpTpSvNx7oMVTbFWNcJLfylpN5U&#xA;LLYJbXMr05BQU4XD0/yY5XbFVwZJfJNnAg4Jcw2ljIu9UE7x20i/6y8yPniqtfXRtr3WL2lWsNPR&#xA;oUp0/vpGK/63BR/scVX3dg9jothHCjTDTGgZ40BLOkQCuQAKswUlwOpI8cVRF5bJqdvb3un3SpPF&#xA;+8s7tKSIQw+JGAPxRuPtCvgRQgYqtiu7fUll0vUrcQ3fGstozcgygj97DIOPJQ1KMKMppUKcVWW0&#xA;1xp8iadqUhuLeU+nZ30gFXr0hn7ep/K3R/8AW6qqHAaQwsbiMS+X7gelCzbi3L/D6MoPWFuiH9n7&#xA;J2piqX6P9Vtxd6bqxEtpdXLR29xPurPbkQJE7n/dnpwxupO7NypuMVTGdLGwuuFmHvdadCtrDPNJ&#xA;N6St+25dn9OPb4m6t0FTQYq7TbZYtRgtEcyx6RbFbmdtudzcFWLGnRuKs7D/ACxiqHf955O1Cah4&#xA;6iLmSMDYmO6dhFQfzGN1NPHFUzv/AN5rOlw/77M91/yLj9H/ALGcVasWVtV1a4cgCJobfkf5Y4RN&#xA;91bg4qmeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpfquoTRGOysgH1K6r6AbdY0WnOeQD9hK9P2mo&#xA;u1ahVXsbO306yWBGPCMFpJZDVnZiWeR2/mZiWJxVCeXkZ7Fr+QUn1JzdPXqEcAQofDhCEU+9cVbt&#xA;N/MGpMeogtUB/wAkGVh+LnFUzxVK/LyI+gW9rIodbdGspVbcN9XY27V8a+mcVY5BC+mrd6HcyGO0&#xA;LqYLo/EYZGattc0P7LyKOZ7SqSdn2VTRpLm8mM0UaR6xbxejqelyGiXEBJpwY9RUkxP03KtQ14qr&#xA;dJ11bS3MFyHeytaR/WmB9a3AG0d5HuykD/doqrD4iR1KqPk0x43a/wBFkSOSb95Jbk1tbjlvyPGv&#xA;B2/34n+yDYq1zsNbha3mR7W/tSGMZIW4t5KECSNtwQd6MKqwqDXcYq1HclydH1xEaWcFYZaEQ3KD&#xA;wr9iQDcpX3WorRVTkkk0qFrbVG+t6LIPT+uS/G0St8PC6r9pO3qf8H/MVUt0W6h0uO90nVyG02O5&#xA;kS3u5zzjCtSQRTs1QG4urBm2bl49VUfFqelxQmz8sQW9xPIdhahRaxk9XmkiHEU/lHxN2HcKuvrH&#xA;6rpUWkrKZbrVZhFc3B2eT1KvcybfZ/cowWn2fhA7YqidR43d7baTEPgjaO6vCvRIon5RJ85JEG38&#xA;qtiqo59TzHEF/wCPWzkMn/RzKnD/AKh2xVAyTMmh+YL5ftM144IIG9vH6HX/AJ44qyDFXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYqgNS1YWzrbW0f1rUpRWG0VuO1ac5GofTjHdj8gCdsVb0zTfqnqzTSevfX&#xA;JDXNwRQGn2UQVPGNK/Cv0mpJJVUfMBMtommpX1NScWxoaEQkEztXtSINQ/zUxVNAAAABQDYAYqlV&#xA;45sNZivn/wB5LyNLO4ftHIjs0DHwV2lZCfEriqa4qlVs31LW7i1c0g1D/SbQnp6qqFniH0Ksg7mr&#xA;eGKqms6Y13Gs0AT67AGEQkFY5EcUkgl61jkA38DQ9sVSKOFHtUkWGa5srZipiVm/SOnSgfEispLy&#xA;KK/ZBJp05qQAqvlR5Yo78TNqVvGCsOrWQVL+AA/EJI1HCZQftIF6/wC6ycVU7KW9sZo2snheK6+K&#xA;39M8bG7rUkJ9r6tcdTQVR+vWvFVOCtlrUYmgeSz1K0PEPQLcW7kVKSIahlbupqrDcdjiq0XcN0P0&#xA;TrsCR3MuydfQnI+INA53DileNea9RUfFirUkl7pKMt2Wv9HoQ07DnPAn/Fw/3bGB+19oD7XLdsVS&#xA;3TluNOv7hdOX61bqEkNsrAmWzdf3EsDEhS0W8JBPxIq71pVVOG1+JhxtbO8nuDskTW00C195Zkjj&#xA;AH+t8q4qtit3tPW1rV5la4hhcsI6+jbwj43WOtC1eI5Od2oNgNsVWWLrpekvqOoAi8u2E90qjk5l&#xA;koEgQdWKjjEg70xVX06N7O1uNQ1IrHcz1uLsg1WJEX4Yw3cRoNz3NT3xVASRTL5RaOZSk2oNSSJu&#xA;qtqFxvGa/wApn44q/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:1ca03239-8f22-da45-ae2b-e1069302ecd5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1ca03239-8f22-da45-ae2b-e1069302ecd5</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:faa7a6d9-5959-f046-9059-a23e27005991</stRef:instanceID>
            <stRef:documentID>xmp.did:faa7a6d9-5959-f046-9059-a23e27005991</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:faa7a6d9-5959-f046-9059-a23e27005991</stEvt:instanceID>
                  <stEvt:when>2018-05-23T23:28:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1ca03239-8f22-da45-ae2b-e1069302ecd5</stEvt:instanceID>
                  <stEvt:when>2018-05-24T13:04:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
600 450 li
600 0 li
cp
clp
600 450 mo
0 450 li
0 0 li
600 0 li
600 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
gsave
600 450 mo
0 450 li
0 0 li
600 0 li
600 450 li
cp
clp
471.871 139.019 mo
470.432 139.019 469.141 139.436 468.338 140.668 cv
465.763 144.621 468.126 147.698 471.483 151.312 cv
471.725 151.571 471.974 151.832 472.226 152.096 cv
473.615 153.551 475.052 155.055 475.798 156.926 cv
475.997 157.427 476.176 157.93 476.354 158.428 cv
477.073 160.45 477.753 162.361 479.697 163.565 cv
481.794 164.864 486.01 165.547 488.111 163.708 cv
488.44 164.085 li
488.111 163.708 li
489.305 162.665 489.898 161.007 490.283 159.679 cv
490.458 159.077 490.704 158.442 490.942 157.829 cv
491.369 156.729 491.811 155.591 491.876 154.572 cv
491.986 152.851 491.901 151.455 491.624 150.421 cv
491.174 148.743 490.214 147.004 488.989 145.651 cv
487.709 144.237 485.824 143.503 484.001 142.794 cv
483.579 142.63 483.161 142.468 482.752 142.298 cv
482.359 142.135 481.969 141.967 481.578 141.799 cv
480.481 141.327 479.348 140.839 478.187 140.476 cv
477.392 140.22 li
475.779 139.695 473.705 139.019 471.871 139.019 cv
cp
484.501 165.853 mo
482.519 165.853 480.49 165.232 479.171 164.416 cv
476.928 163.027 476.157 160.859 475.411 158.763 cv
475.238 158.277 475.063 157.785 474.868 157.296 cv
474.194 155.605 472.826 154.172 471.503 152.787 cv
471.247 152.519 470.995 152.255 470.751 151.992 cv
468.026 149.06 464.294 145.043 467.5 140.123 cv
469.744 136.679 474.725 138.3 477.701 139.27 cv
478.485 139.522 li
479.696 139.9 480.854 140.398 481.973 140.88 cv
482.36 141.047 482.747 141.213 483.135 141.374 cv
483.537 141.541 483.949 141.701 484.363 141.862 cv
486.295 142.614 488.292 143.391 489.731 144.98 cv
491.058 146.447 492.1 148.335 492.59 150.162 cv
492.9 151.316 492.993 152.78 492.874 154.636 cv
492.799 155.809 492.329 157.02 491.875 158.19 cv
491.634 158.811 491.406 159.397 491.244 159.958 cv
490.821 161.416 490.158 163.247 488.77 164.461 cv
487.628 165.459 486.079 165.853 484.501 165.853 cv
cp
.4 .4 .4 rgb
f
450.709 122.88 mo
445.627 122.88 440.764 124.02 436.823 126.267 cv
431.894 129.078 428.824 132.889 429.005 135.977 cv
429.164 138.693 431.959 140.499 434.275 141.535 cv
434.78 141.761 435.324 141.978 435.893 142.18 cv
436.161 142.275 436.436 142.367 436.718 142.456 cv
439.94 143.48 442.745 143.837 445.457 144.183 cv
448.263 144.541 450.913 144.879 453.733 145.879 cv
457.447 147.197 460.709 149.435 463.998 152.923 cv
465.469 154.483 466.918 156.191 468.319 157.844 cv
472.364 162.616 476.513 167.511 481.361 169.231 cv
483.981 170.161 486.729 170.122 489.761 169.114 cv
493.815 167.767 497.345 163.186 498.753 157.444 cv
500.06 152.109 499.199 147.214 496.451 144.35 cv
494.229 142.033 490.747 140.272 487.381 138.569 cv
485.172 137.452 482.908 136.307 480.876 134.964 cv
475.272 131.26 470.134 127.99 463.986 125.485 cv
463.544 125.305 463.094 125.133 462.639 124.97 cv
462.607 124.97 li
462.5 124.917 li
458.655 123.554 454.617 122.88 450.709 122.88 cv
cp
485.238 170.902 mo
483.793 170.902 482.396 170.659 481.027 170.173 cv
475.925 168.363 471.688 163.364 467.589 158.529 cv
466.163 156.848 464.723 155.15 463.271 153.609 cv
460.094 150.241 456.957 148.084 453.399 146.821 cv
450.681 145.857 448.082 145.526 445.33 145.175 cv
442.574 144.824 439.725 144.46 436.417 143.41 cv
436.123 143.317 435.837 143.221 435.559 143.122 cv
434.965 142.912 434.396 142.685 433.867 142.447 cv
431.298 141.298 428.195 139.253 428.007 136.035 cv
427.805 132.571 431.07 128.396 436.327 125.398 cv
443.545 121.282 453.724 120.746 462.891 123.999 cv
462.893 123.999 li
463.39 124.175 463.881 124.362 464.364 124.56 cv
470.596 127.099 475.778 130.396 481.427 134.13 cv
483.411 135.441 485.649 136.573 487.813 137.667 cv
491.273 139.417 494.832 141.217 497.173 143.658 cv
500.159 146.77 501.113 152.013 499.724 157.682 cv
498.236 163.75 494.449 168.61 490.076 170.063 cv
488.394 170.623 486.789 170.902 485.238 170.902 cv
cp
f
434.788 131.512 mo
434.003 132.051 433.582 132.596 433.5 133.178 cv
433.122 135.851 434.813 137.064 436.955 138.6 cv
437.177 138.759 li
439.146 140.175 440.937 140.605 442.979 140.157 cv
443.508 140.044 li
444.597 139.815 446.241 139.468 447.021 139.001 cv
447.737 138.571 448.312 137.005 448.49 136.031 cv
448.707 134.851 448.25 134.053 447.721 133.129 cv
447.404 132.577 447.077 132.006 446.861 131.311 cv
446.666 130.679 446.709 130.128 446.743 129.686 cv
446.803 128.925 446.823 128.669 445.827 128.313 cv
443.343 127.422 440.917 128.417 438.875 129.508 cv
438.49 129.714 438.002 129.925 437.472 130.154 cv
436.582 130.538 435.573 130.974 434.788 131.512 cv
434.788 131.512 li
cp
441.49 141.325 mo
439.823 141.325 438.233 140.751 436.593 139.571 cv
436.372 139.412 li
434.246 137.887 432.047 136.31 432.51 133.039 cv
432.633 132.163 433.193 131.394 434.222 130.688 cv
434.222 130.688 li
435.088 130.094 436.144 129.638 437.076 129.236 cv
437.577 129.02 438.04 128.821 438.404 128.626 cv
440.639 127.432 443.31 126.35 446.164 127.372 cv
447.88 127.985 447.806 128.93 447.74 129.764 cv
447.71 130.158 447.678 130.566 447.816 131.015 cv
447.999 131.604 448.299 132.126 448.588 132.631 cv
449.163 133.634 449.757 134.671 449.475 136.212 cv
449.297 137.177 448.663 139.181 447.534 139.858 cv
446.611 140.412 444.937 140.765 443.714 141.023 cv
443.194 141.134 li
442.614 141.261 442.048 141.325 441.49 141.325 cv
cp
f
452.322 117.795 mo
446.331 117.795 440.546 119.173 435.864 121.895 cv
429.509 125.591 425.711 130.745 425.951 135.344 cv
426.142 138.974 428.726 142.008 433.425 144.119 cv
433.425 144.119 li
434.318 144.52 435.298 144.89 436.336 145.219 cv
439.992 146.378 443.078 146.76 446.063 147.13 cv
451.971 147.862 457.073 148.494 463.336 155.231 cv
464.814 156.821 466.235 158.523 467.739 160.325 cv
474.668 168.622 481.836 177.202 493.743 173.132 cv
499.057 171.316 503.635 165.5 505.409 158.314 cv
507.084 151.528 505.903 145.171 502.25 141.309 cv
499.54 138.443 495.646 136.463 491.88 134.548 cv
489.678 133.429 487.4 132.271 485.442 130.965 cv
479.447 126.968 473.939 123.437 467.242 120.703 cv
462.478 118.758 457.327 117.795 452.322 117.795 cv
cp
487.894 175.166 mo
478.829 175.167 472.592 167.696 466.972 160.965 cv
465.477 159.174 464.064 157.483 462.604 155.912 cv
456.589 149.442 451.89 148.86 445.94 148.123 cv
443.052 147.765 439.777 147.359 436.033 146.172 cv
434.959 145.832 433.943 145.448 433.015 145.031 cv
433.015 145.031 li
426.618 142.158 425.1 138.206 424.953 135.396 cv
424.688 130.345 428.579 124.975 435.362 121.031 cv
444.213 115.884 456.876 115.392 467.62 119.777 cv
474.403 122.546 479.956 126.105 485.997 130.133 cv
487.906 131.406 490.057 132.5 492.334 133.657 cv
496.175 135.61 500.147 137.63 502.977 140.621 cv
506.864 144.732 508.137 151.436 506.38 158.554 cv
504.526 166.062 499.693 172.155 494.067 174.078 cv
491.868 174.83 489.816 175.166 487.894 175.166 cv
cp
f
430.982 101.476 mo
429.712 101.476 428.375 101.785 426.909 102.597 cv
420.701 106.051 417.997 113.35 416.171 120.035 cv
415.92 120.951 415.646 121.887 415.372 122.822 cv
414.987 124.136 414.59 125.494 414.273 126.755 cv
414.07 127.56 413.856 128.333 413.649 129.083 cv
412.86 131.948 412.178 134.423 412.463 137.102 cv
412.507 137.513 412.536 137.941 412.566 138.38 cv
412.72 140.595 412.877 142.886 414.89 144.829 cv
415.813 145.722 416.961 146.532 418.298 147.239 cv
422.949 149.696 428.113 150.74 432.669 151.66 cv
434.594 152.049 436.412 152.416 438.126 152.867 cv
439.329 153.183 440.696 153.398 442.145 153.627 cv
443.659 153.867 445.226 154.114 446.591 154.488 cv
447.585 154.758 li
450.734 155.608 453.99 156.487 457.269 158.507 cv
459.901 160.131 462.451 162.236 464.918 164.272 cv
466.314 165.425 467.758 166.617 469.218 167.725 cv
472.805 170.445 477.138 173.446 482.091 175.071 cv
486.071 176.365 490.439 177.293 495.385 175.354 cv
500.411 173.384 504.972 168.167 507.896 161.038 cv
509.594 156.895 511.047 152.477 510.197 148.246 cv
509.308 143.824 507.041 139.943 503.267 136.38 cv
500.306 133.584 496.379 131.508 492.581 129.5 cv
490.532 128.417 488.413 127.296 486.521 126.094 cv
480.748 122.417 475.006 118.898 468.242 116.265 cv
463.641 114.474 459.261 112.364 455.025 110.324 cv
449.515 107.669 444.31 105.162 440.16 104.215 cv
438.954 103.94 437.762 103.452 436.608 102.979 cv
434.745 102.214 432.944 101.476 430.982 101.476 cv
cp
489.55 177.47 mo
486.784 177.47 484.212 176.812 481.78 176.022 cv
476.686 174.35 472.266 171.292 468.614 168.521 cv
467.137 167.401 465.686 166.203 464.281 165.043 cv
461.729 162.937 459.317 160.946 456.743 159.359 cv
453.59 157.415 450.404 156.555 447.325 155.724 cv
446.327 155.453 li
445.015 155.094 443.477 154.851 441.988 154.615 cv
440.58 154.393 439.123 154.162 437.872 153.833 cv
436.186 153.391 434.381 153.026 432.471 152.64 cv
427.849 151.707 422.609 150.648 417.831 148.123 cv
416.41 147.373 415.187 146.506 414.194 145.548 cv
411.906 143.338 411.727 140.741 411.569 138.449 cv
411.54 138.022 411.511 137.607 411.469 137.208 cv
411.163 134.34 411.869 131.781 412.686 128.817 cv
412.891 128.073 413.103 127.308 413.304 126.511 cv
413.625 125.231 414.025 123.864 414.413 122.541 cv
414.685 121.612 414.957 120.681 415.206 119.771 cv
417.088 112.886 419.892 105.357 426.424 101.723 cv
430.576 99.4243 433.983 100.821 436.988 102.053 cv
438.155 102.532 439.257 102.984 440.383 103.241 cv
444.642 104.212 449.896 106.743 455.459 109.423 cv
459.678 111.455 464.039 113.556 468.605 115.333 cv
475.453 118 481.241 121.546 487.058 125.25 cv
488.915 126.431 490.923 127.493 493.049 128.616 cv
496.905 130.656 500.894 132.764 503.952 135.652 cv
507.883 139.362 510.246 143.417 511.178 148.049 cv
512.08 152.541 510.578 157.128 508.821 161.417 cv
505.793 168.797 501.029 174.216 495.75 176.285 cv
495.75 176.285 li
493.573 177.138 491.513 177.47 489.55 177.47 cv
cp
f
421.861 82.2065 mo
420.663 82.2065 419.373 82.5288 417.959 83.2954 cv
409.384 87.9624 407.069 100.304 405.537 108.471 cv
405.358 109.422 li
404.737 112.644 403.55 116.163 402.596 118.99 cv
401.77 121.433 400.657 123.587 399.581 125.67 cv
398.252 128.244 396.996 130.675 396.423 133.372 cv
396.281 134.038 396.093 134.747 395.897 135.485 cv
395.032 138.743 394.051 142.436 396.27 145.51 cv
397.268 146.892 398.598 148.15 400.224 149.251 cv
405.726 152.976 412.81 154.7 419.059 156.22 cv
421.365 156.781 423.544 157.312 425.55 157.913 cv
427.455 158.484 430.015 158.64 432.49 158.792 cv
433.981 158.883 435.392 158.969 436.608 159.143 cv
437.754 159.306 438.912 159.438 440.079 159.571 cv
443.724 159.988 447.492 160.418 451.218 161.828 cv
454.843 163.198 458.334 165.301 461.71 167.334 cv
463.199 168.232 464.739 169.159 466.282 170.021 cv
471.059 172.686 476.246 175.375 481.815 176.99 cv
482.146 177.084 li
487.088 178.501 491.757 179.839 497.032 177.576 cv
497.032 177.576 li
505.166 174.086 509.96 164.073 511.645 159.93 cv
511.775 159.607 li
513.772 154.688 515.838 149.602 514.259 144.697 cv
512.544 139.373 509.029 135.549 504.279 131.446 cv
501.018 128.627 496.946 126.413 493.009 124.271 cv
491.199 123.287 489.329 122.269 487.601 121.223 cv
481.174 117.32 475.592 114.229 469.239 111.827 cv
458.925 107.926 449.999 101.344 442.828 96.0557 cv
439.473 93.5815 436.576 91.4453 434.221 90.1064 cv
432.841 89.3223 431.544 88.1294 430.17 86.8667 cv
427.668 84.5654 425.103 82.2065 421.861 82.2065 cv
cp
491.127 179.78 mo
487.921 179.78 484.864 178.904 481.869 178.045 cv
481.538 177.95 li
475.872 176.307 470.623 173.588 465.796 170.894 cv
464.237 170.024 462.689 169.092 461.193 168.191 cv
457.702 166.088 454.404 164.102 450.864 162.763 cv
447.255 161.398 443.549 160.975 439.965 160.565 cv
438.79 160.431 437.622 160.297 436.468 160.133 cv
435.29 159.965 433.9 159.88 432.429 159.79 cv
429.896 159.635 427.278 159.475 425.263 158.871 cv
423.282 158.277 421.116 157.75 418.822 157.192 cv
412.491 155.651 405.314 153.905 399.663 150.079 cv
397.939 148.913 396.525 147.572 395.459 146.095 cv
392.963 142.637 394.054 138.529 394.931 135.228 cv
395.122 134.507 395.306 133.815 395.444 133.164 cv
396.046 130.335 397.332 127.847 398.692 125.211 cv
399.751 123.161 400.847 121.041 401.648 118.67 cv
402.593 115.872 403.768 112.388 404.376 109.235 cv
404.555 108.286 li
406.121 99.9336 408.489 87.311 417.481 82.417 cv
423.351 79.2358 427.333 82.8984 430.847 86.1309 cv
432.178 87.354 433.434 88.5093 434.715 89.2373 cv
437.122 90.605 440.041 92.7578 443.421 95.2505 cv
450.544 100.503 459.407 107.04 469.593 110.891 cv
476.018 113.32 481.646 116.437 488.119 120.368 cv
489.827 121.402 491.604 122.369 493.486 123.393 cv
497.47 125.56 501.59 127.8 504.934 130.689 cv
509.811 134.902 513.425 138.844 515.21 144.39 cv
516.901 149.642 514.767 154.899 512.702 159.983 cv
512.57 160.307 li
510.84 164.564 505.9 174.858 497.427 178.495 cv
495.252 179.428 493.159 179.78 491.127 179.78 cv
cp
f
423.516 163.738 mo
424.651 163.738 425.717 163.749 426.648 163.805 cv
428.473 163.916 430.356 163.954 432.179 163.991 cv
436.443 164.078 440.854 164.167 445.189 165.17 cv
449.793 166.234 454.225 168.243 458.511 170.186 cv
460.092 170.902 461.727 171.643 463.356 172.332 cv
469.331 174.854 475.217 177.255 481.543 178.909 cv
482.27 179.097 482.992 179.294 483.71 179.491 cv
488.744 180.87 493.497 182.17 498.684 179.796 cv
507.484 175.766 512.93 164.925 515.393 158.822 cv
515.61 158.281 515.834 157.739 516.058 157.195 cv
518.238 151.892 520.493 146.409 518.32 141.13 cv
515.75 134.888 510.757 130.888 505.471 126.652 cv
505.291 126.508 li
501.529 123.495 497.069 121.026 492.755 118.638 cv
491.377 117.875 490.01 117.119 488.679 116.352 cv
481.462 112.179 475.946 109.498 470.234 107.388 cv
454.713 101.652 442.225 89.4224 433.961 81.3301 cv
431.783 79.1968 429.901 77.3545 428.336 75.9937 cv
426.91 74.7539 425.552 72.9595 424.115 71.0601 cv
420.102 65.7563 415.954 60.2715 409.01 63.9937 cv
398.595 69.5879 396.365 85.688 394.89 96.3418 cv
394.77 97.21 394.655 98.0415 394.541 98.8276 cv
393.909 103.122 392.275 107.7 390.923 111.208 cv
389.54 114.787 387.448 117.839 385.426 120.791 cv
383.439 123.689 381.563 126.426 380.369 129.558 cv
380.053 130.388 379.67 131.276 379.269 132.207 cv
377.42 136.495 375.119 141.831 377.62 146.166 cv
378.697 148.034 380.216 149.747 382.133 151.257 cv
388.422 156.21 397.367 158.621 405.259 160.747 cv
408.012 161.489 410.612 162.189 412.969 162.958 cv
415.452 163.759 419.192 163.749 422.493 163.74 cv
422.839 163.739 423.181 163.738 423.516 163.738 cv
cp
492.595 182.12 mo
489.524 182.12 486.536 181.302 483.446 180.456 cv
482.732 180.26 482.015 180.063 481.292 179.876 cv
474.899 178.206 468.977 175.79 462.968 173.252 cv
461.325 172.559 459.685 171.815 458.098 171.096 cv
453.661 169.085 449.471 167.187 444.965 166.145 cv
440.729 165.165 436.372 165.077 432.158 164.991 cv
430.326 164.954 428.432 164.916 426.588 164.803 cv
425.411 164.731 423.992 164.736 422.496 164.74 cv
419.119 164.751 415.297 164.759 412.66 163.91 cv
410.326 163.148 407.738 162.451 404.999 161.712 cv
397.014 159.562 387.964 157.123 381.514 152.042 cv
379.496 150.454 377.895 148.645 376.753 146.666 cv
374.002 141.895 376.413 136.304 378.351 131.811 cv
378.746 130.895 379.123 130.02 379.436 129.202 cv
380.672 125.959 382.58 123.174 384.601 120.226 cv
386.591 117.321 388.649 114.318 389.989 110.848 cv
391.323 107.389 392.934 102.879 393.551 98.6831 cv
393.665 97.8999 393.779 97.0703 393.899 96.2046 cv
395.402 85.3506 397.674 68.9473 408.537 63.1123 cv
416.238 58.9883 421.047 65.3467 424.912 70.4565 cv
426.317 72.3135 427.645 74.0674 428.992 75.2388 cv
430.58 76.6191 432.471 78.4712 434.661 80.6152 cv
442.863 88.6484 455.26 100.788 470.58 106.45 cv
477.874 109.144 484.352 112.694 489.179 115.486 cv
490.504 116.249 491.866 117.003 493.239 117.763 cv
497.59 120.171 502.089 122.661 505.916 125.728 cv
506.096 125.872 li
511.485 130.19 516.576 134.269 519.244 140.749 cv
521.574 146.409 519.24 152.085 516.982 157.576 cv
516.76 158.117 516.537 158.657 516.32 159.196 cv
513.802 165.437 508.216 176.53 499.1 180.705 cv
499.1 180.705 li
496.853 181.734 494.705 182.12 492.595 182.12 cv
cp
f
431.51 168.081 mo
434.069 168.081 436.638 168.19 439.179 168.524 cv
444.742 169.254 450.09 171.107 455.263 172.898 cv
456.978 173.493 458.698 174.088 460.438 174.65 cv
460.623 174.71 li
467.309 176.889 474.221 179.142 481.274 180.83 cv
482.479 181.116 483.661 181.439 484.832 181.76 cv
490.08 183.195 495.038 184.552 500.337 182.015 cv
510.109 177.29 516.313 164.761 519.142 157.713 cv
519.484 156.858 519.844 156 520.204 155.142 cv
522.64 149.335 525.158 143.331 522.379 137.552 cv
519.328 131.207 513.974 127.25 508.306 123.059 cv
507.639 122.566 506.969 122.071 506.3 121.569 cv
501.206 117.752 495.416 114.58 489.816 111.512 cv
483.199 107.878 477.139 105.087 471.229 102.948 cv
450.462 95.4316 435.23 77.1357 426.131 66.2046 cv
424.738 64.5322 423.536 63.0879 422.484 61.8906 cv
421.051 60.2573 419.662 57.9634 418.192 55.5347 cv
413.795 48.2695 408.813 40.0371 400.062 44.6909 cv
387.695 51.2754 385.555 71.2417 384.139 84.4541 cv
383.996 85.7925 383.859 87.0615 383.721 88.2407 cv
383.227 92.4224 381.765 97.3867 379.252 103.418 cv
377.342 108.001 374.27 111.837 371.3 115.547 cv
368.745 118.736 366.104 122.034 364.32 125.71 cv
363.853 126.673 363.306 127.705 362.73 128.789 cv
359.809 134.3 356.171 141.159 358.957 146.809 cv
360.116 149.159 361.823 151.329 364.032 153.258 cv
371.131 159.457 381.971 162.568 391.535 165.313 cv
394.702 166.222 397.694 167.081 400.382 168.002 cv
403.419 169.037 408.414 168.8 412.433 168.609 cv
413.994 168.535 415.451 168.454 416.701 168.471 cv
419.196 168.474 421.758 168.378 424.241 168.278 cv
426.635 168.18 429.068 168.081 431.51 168.081 cv
cp
494.003 184.443 mo
490.853 184.443 487.763 183.598 484.567 182.724 cv
483.408 182.407 482.235 182.086 481.043 181.802 cv
473.949 180.105 467.018 177.846 460.313 175.661 cv
460.129 175.602 li
458.384 175.038 456.656 174.44 454.936 173.843 cv
449.574 171.986 444.511 170.232 439.048 169.515 cv
434.171 168.875 429.144 169.08 424.282 169.277 cv
421.788 169.378 419.23 169.483 416.695 169.471 cv
415.489 169.464 414.029 169.534 412.479 169.608 cv
408.168 169.812 403.277 170.045 400.059 168.948 cv
397.394 168.035 394.414 167.18 391.259 166.274 cv
381.595 163.5 370.641 160.357 363.374 154.011 cv
361.065 151.995 359.277 149.721 358.061 147.251 cv
355.048 141.142 358.818 134.033 361.847 128.321 cv
362.416 127.248 362.958 126.227 363.42 125.274 cv
365.254 121.497 367.931 118.154 370.519 114.922 cv
373.446 111.267 376.473 107.486 378.328 103.033 cv
380.805 97.0884 382.244 92.2114 382.729 88.124 cv
382.866 86.9478 383.002 85.6821 383.145 84.3472 cv
384.583 70.9253 386.757 50.6421 399.592 43.8081 cv
409.179 38.7114 414.65 47.7515 419.048 55.0171 cv
420.494 57.4067 421.86 59.6636 423.236 61.2305 cv
424.296 62.438 425.502 63.8867 426.899 65.5649 cv
435.935 76.4185 451.057 94.5835 471.569 102.007 cv
477.528 104.165 483.635 106.976 490.239 110.604 cv
495.927 113.719 501.749 116.909 506.899 120.77 cv
507.567 121.27 508.235 121.764 508.9 122.255 cv
514.671 126.521 520.122 130.55 523.279 137.119 cv
526.254 143.303 523.647 149.518 521.126 155.529 cv
520.769 156.382 520.41 157.235 520.069 158.085 cv
517.188 165.268 510.848 178.044 500.771 182.916 cv
500.769 182.917 li
498.447 184.028 496.21 184.443 494.003 184.443 cv
cp
f
429.288 171.773 mo
430.59 171.773 431.888 171.806 433.179 171.882 cv
439.803 172.272 446.153 173.968 452.295 175.607 cv
454.031 176.071 455.772 176.536 457.528 176.976 cv
459.582 177.489 461.633 178.011 463.685 178.534 cv
469.33 179.971 475.168 181.457 481.008 182.75 cv
482.644 183.113 484.242 183.558 485.789 183.988 cv
491.305 185.522 496.514 186.973 501.991 184.233 cv
512.179 179.141 518.979 166.397 522.889 156.604 cv
523.337 155.482 523.817 154.359 524.298 153.235 cv
527.142 146.582 529.828 140.297 526.437 133.968 cv
522.846 127.268 516.902 123.208 510.611 118.909 cv
509.512 118.158 508.407 117.403 507.309 116.629 cv
496.546 109.047 484.741 102.95 472.225 98.5083 cv
446.065 89.2266 427.637 63.2588 418.78 50.7798 cv
418.004 49.6865 417.294 48.6865 416.651 47.7979 cv
415.222 45.8218 413.814 43.103 412.325 40.2246 cv
408.886 33.5806 404.987 26.0503 399.236 24.251 cv
396.713 23.4604 394.055 23.8325 391.113 25.3882 cv
376.753 32.9868 374.705 56.8623 373.35 72.6611 cv
373.197 74.4404 373.054 76.1172 372.902 77.6582 cv
372.411 82.6411 370.621 88.6855 367.582 95.6235 cv
365.157 101.16 361.113 105.738 357.202 110.165 cv
353.979 113.813 350.646 117.584 348.274 121.848 cv
347.675 122.927 346.984 124.084 346.259 125.301 cv
342.233 132.051 337.224 140.451 340.289 147.443 cv
345.945 160.334 363.602 165.627 377.789 169.88 cv
381.378 170.956 384.768 171.972 387.794 173.046 cv
391.377 174.317 397.462 173.829 402.352 173.435 cv
403.967 173.305 405.492 173.183 406.76 173.138 cv
409.929 173.024 413.196 172.752 416.356 172.49 cv
420.606 172.136 424.967 171.773 429.288 171.773 cv
cp
495.378 186.782 mo
492.101 186.782 488.865 185.882 485.521 184.952 cv
483.987 184.525 482.401 184.083 480.791 183.727 cv
474.937 182.43 469.091 180.942 463.438 179.503 cv
461.388 178.981 459.338 178.459 457.286 177.945 cv
455.524 177.504 453.778 177.039 452.037 176.574 cv
445.663 174.872 439.643 173.265 433.12 172.88 cv
427.617 172.556 421.935 173.029 416.439 173.486 cv
413.268 173.75 409.988 174.023 406.795 174.137 cv
405.55 174.181 404.035 174.303 402.432 174.432 cv
397.447 174.833 391.245 175.332 387.46 173.988 cv
387.46 173.988 li
384.457 172.923 381.078 171.91 377.502 170.838 cv
363.117 166.526 345.216 161.159 339.373 147.844 cv
336.101 140.381 341.257 131.736 345.399 124.789 cv
346.12 123.582 346.805 122.433 347.401 121.361 cv
349.825 117.003 353.194 113.19 356.453 109.502 cv
360.313 105.133 364.304 100.616 366.666 95.2222 cv
369.663 88.3804 371.426 82.438 371.906 77.5605 cv
372.058 76.0234 372.201 74.3501 372.354 72.5757 cv
373.728 56.5605 375.804 32.3579 390.646 24.5044 cv
393.79 22.8418 396.781 22.4351 399.535 23.2964 cv
405.685 25.2202 409.684 32.9478 413.213 39.7651 cv
414.686 42.6094 416.076 45.2959 417.462 47.2119 cv
418.106 48.1025 418.817 49.105 419.596 50.2007 cv
428.393 62.5967 446.698 88.3896 472.559 97.5659 cv
485.162 102.038 497.047 108.177 507.885 115.812 cv
508.979 116.583 510.08 117.335 511.176 118.083 cv
517.57 122.453 523.611 126.58 527.317 133.495 cv
530.937 140.249 528.029 147.05 525.217 153.628 cv
524.74 154.745 524.263 155.861 523.817 156.975 cv
519.843 166.93 512.907 179.894 502.438 185.128 cv
500.028 186.333 497.692 186.782 495.378 186.782 cv
cp
f
395.887 1.58643 mo
394.407 1.58643 392.858 1.79346 391.229 2.24561 cv
380.248 5.2915 376.221 18.9004 374.147 28.8721 cv
372.053 39.1299 370.583 49.835 369.287 59.2798 cv
368.998 61.3862 368.719 63.4185 368.445 65.353 cv
367.378 72.8999 365.007 81.042 363.103 87.584 cv
360.828 95.3931 355.777 101.756 350.893 107.91 cv
347.084 112.703 344.522 116.621 342.585 120.613 cv
342.176 121.456 341.747 122.325 341.308 123.217 cv
340.324 125.21 339.309 127.271 338.32 129.424 cv
334.771 137.135 331.608 145.225 335.23 151.935 cv
339.124 159.147 347.547 163.747 355.137 167.492 cv
363.11 171.416 371.82 174.472 380.242 177.428 cv
381.896 178.008 383.528 178.581 385.132 179.152 cv
388.235 180.248 390.542 181.106 392.611 181.936 cv
396.964 183.681 403.062 184.23 408.441 184.714 cv
410.622 184.911 412.682 185.096 414.491 185.348 cv
419.261 186.01 424.197 186.401 428.97 186.781 cv
434.203 187.196 439.614 187.626 444.988 188.416 cv
453.756 189.704 461.983 191.366 470.694 193.125 cv
472.93 193.576 li
476.604 194.317 479.873 195.054 482.925 195.831 cv
488.774 197.319 494.254 199.203 499.553 201.025 cv
501.365 201.644 503.147 202.347 504.871 203.028 cv
508.308 204.385 511.555 205.667 514.909 206.273 cv
517.54 206.494 519.864 205.882 522.617 204.212 cv
522.784 204.148 li
532.214 202.362 537.202 192.076 541.603 183 cv
542.623 180.895 543.588 178.906 544.593 177.035 cv
547.114 172.33 549.497 167.686 550.95 162.61 cv
551.311 161.351 551.69 160.092 552.071 158.833 cv
554.42 151.052 556.849 143.006 554.276 135.193 cv
553.887 134.01 553.541 133.048 553.187 132.165 cv
550.385 125.201 545.859 119.033 538.053 111.542 cv
534.375 108.012 529.782 105.532 525.341 103.133 cv
524.212 102.523 523.083 101.914 521.968 101.288 cv
520.953 100.717 519.896 100.15 518.828 99.5767 cv
515.607 97.8472 512.276 96.0591 509.569 93.918 cv
506.887 91.7959 504.913 89.3413 503.005 86.9673 cv
502.175 85.9346 501.316 84.8667 500.426 83.8638 cv
498.003 81.1348 495.054 79.0947 490.864 77.248 cv
472.745 69.2632 457.217 56.2231 444.418 44.521 cv
439.557 40.0771 435.229 35.6519 431.409 31.7476 cv
428.764 29.043 426.266 26.4883 424.069 24.4287 cv
421.821 22.3213 419.643 19.6235 417.336 16.7681 cv
411.538 9.58984 405.073 1.58643 395.887 1.58643 cv
cp
515.938 207.314 mo
515.558 207.314 515.171 207.297 514.777 207.264 cv
511.279 206.634 507.988 205.334 504.503 203.958 cv
502.791 203.281 501.02 202.582 499.229 201.971 cv
493.948 200.155 488.488 198.278 482.679 196.8 cv
479.644 196.027 476.39 195.294 472.732 194.557 cv
470.496 194.105 li
461.799 192.349 453.584 190.689 444.844 189.405 cv
439.501 188.62 434.107 188.192 428.891 187.777 cv
424.104 187.397 419.152 187.004 414.354 186.338 cv
412.568 186.09 410.521 185.906 408.352 185.71 cv
402.903 185.22 396.729 184.664 392.239 182.864 cv
390.184 182.04 387.889 181.186 384.798 180.095 cv
383.194 179.523 381.563 178.951 379.911 178.372 cv
371.461 175.406 362.723 172.339 354.694 168.389 cv
346.966 164.575 338.384 159.881 334.35 152.409 cv
330.509 145.294 333.757 136.946 337.412 129.006 cv
338.405 126.842 339.425 124.774 340.411 122.775 cv
340.85 121.885 341.277 121.018 341.685 120.177 cv
343.656 116.116 346.254 112.141 350.109 107.288 cv
354.934 101.21 359.923 94.9248 362.142 87.3047 cv
364.038 80.793 366.398 72.689 367.455 65.2134 cv
367.729 63.2798 368.007 61.249 368.296 59.144 cv
369.595 49.6841 371.066 38.9614 373.168 28.6704 cv
375.295 18.4409 379.454 4.47412 390.962 1.28174 cv
403.349 -2.15479 411.189 7.56641 418.114 16.1396 cv
420.398 18.9678 422.556 21.6392 424.753 23.6992 cv
426.965 25.7734 429.471 28.3359 432.124 31.0483 cv
435.935 34.9434 440.252 39.3584 445.092 43.7827 cv
457.832 55.4307 473.28 68.4063 491.267 76.333 cv
495.595 78.2402 498.65 80.3579 501.174 83.1997 cv
502.08 84.2207 502.947 85.2983 503.785 86.3408 cv
505.658 88.6714 507.596 91.0815 510.19 93.1338 cv
512.828 95.2197 516.119 96.9868 519.302 98.6958 cv
520.376 99.2725 521.438 99.8428 522.458 100.416 cv
523.568 101.04 524.691 101.646 525.815 102.253 cv
530.316 104.684 534.97 107.197 538.746 110.821 cv
544.003 115.866 550.501 122.809 554.114 131.792 cv
554.477 132.696 554.83 133.677 555.226 134.881 cv
557.897 142.994 555.422 151.193 553.028 159.122 cv
552.649 160.376 552.271 161.631 551.911 162.886 cv
550.432 168.057 548.021 172.752 545.474 177.507 cv
544.479 179.361 543.519 181.341 542.502 183.437 cv
538.013 192.696 532.925 203.188 523.059 205.113 cv
520.541 206.628 518.347 207.314 515.938 207.314 cv
cp
f
394.25 -21.0811 mo
393.308 -21.0811 392.348 -21.0293 391.366 -20.9214 cv
378.301 -19.4829 373.969 -4.56543 371.453 9.8374 cv
371.192 11.3345 li
368.703 25.5938 366.129 40.3384 363.989 53.04 cv
363.085 58.4014 361.897 63.9341 360.749 69.2852 cv
360.02 72.688 359.264 76.2065 358.61 79.561 cv
356.796 88.8701 351.581 96.4873 345.939 104.114 cv
342.056 109.359 339.096 114.355 336.89 119.386 cv
335.544 122.455 333.969 126.108 332.497 129.933 cv
332.357 130.293 li
329.05 138.855 325.3 148.56 330.174 156.437 cv
334.536 163.487 343.801 167.94 351.975 171.87 cv
352.804 172.268 353.618 172.66 354.411 173.046 cv
363.555 177.489 373.318 181.285 382.76 184.955 cv
384.814 185.753 386.854 186.546 388.864 187.337 cv
392.231 188.647 394.951 189.755 397.422 190.823 cv
402.581 193.055 408.794 194.455 414.801 195.808 cv
417.424 196.399 419.901 196.957 422.196 197.565 cv
429.604 199.527 436.991 200.982 444.813 202.523 cv
448.716 203.292 452.753 204.087 456.786 204.95 cv
463.969 206.487 471.17 207.563 478.133 208.604 cv
481.47 209.102 484.919 209.618 488.337 210.179 cv
492.66 210.889 496.261 211.624 499.67 212.493 cv
505.902 214.082 511.539 216.363 518.086 219.301 cv
520.053 220.177 521.998 221.139 523.879 222.069 cv
527.579 223.9 531.075 225.629 534.765 226.778 cv
538.107 227.204 540.423 226.153 543.254 224.187 cv
543.369 224.106 li
543.51 224.098 li
555.87 223.374 561.314 210.067 566.117 198.328 cv
567.685 194.498 569.165 190.879 570.827 187.756 cv
571.46 186.567 li
574.596 180.683 577.557 175.125 579.021 168.597 cv
579.399 166.916 li
581.659 156.894 583.996 146.531 582.134 136.434 cv
581.896 135.149 581.677 133.955 581.427 132.787 cv
579.196 122.36 574.956 113.507 568.826 106.472 cv
564.498 101.504 558.534 98.5073 552.767 95.6084 cv
550.924 94.6821 549.019 93.7241 547.189 92.7148 cv
546.046 92.083 544.848 91.4521 543.627 90.8096 cv
538.969 88.3574 534.152 85.8218 530.677 82.4331 cv
527.265 79.1079 525.384 75.0386 523.563 71.1035 cv
522.832 69.5215 522.075 67.8848 521.241 66.3584 cv
518.828 61.9448 515.322 58.8447 509.52 55.9932 cv
492.976 47.8618 477.55 36.2959 463.938 26.0918 cv
461.452 24.2275 459.004 22.3916 456.592 20.6069 cv
451.814 17.0732 447.409 13.5342 443.149 10.1118 cv
439.012 6.7876 435.104 3.64795 431.473 1.02832 cv
428.584 -1.05615 425.771 -3.51416 422.793 -6.11572 cv
414.361 -13.4824 405.664 -21.0811 394.25 -21.0811 cv
cp
536.175 227.86 mo
535.656 227.86 535.117 227.825 534.552 227.752 cv
530.702 226.561 527.173 224.814 523.436 222.965 cv
521.563 222.04 519.628 221.082 517.678 220.213 cv
511.177 217.297 505.586 215.033 499.424 213.462 cv
496.043 212.601 492.469 211.871 488.175 211.166 cv
484.765 210.605 481.318 210.091 477.985 209.593 cv
471.007 208.55 463.79 207.471 456.577 205.928 cv
452.552 205.066 448.519 204.272 444.619 203.504 cv
436.781 201.96 429.379 200.502 421.94 198.532 cv
419.664 197.929 417.195 197.373 414.581 196.784 cv
408.529 195.42 402.271 194.01 397.025 191.741 cv
394.566 190.678 391.857 189.574 388.5 188.268 cv
386.488 187.477 384.451 186.685 382.397 185.887 cv
372.938 182.209 363.154 178.407 353.974 173.945 cv
353.182 173.559 352.369 173.168 351.542 172.771 cv
343.244 168.782 333.84 164.262 329.324 156.963 cv
324.188 148.663 328.033 138.712 331.425 129.933 cv
331.563 129.573 li
333.043 125.73 334.623 122.064 335.974 118.984 cv
338.21 113.884 341.207 108.825 345.135 103.519 cv
350.706 95.9883 355.854 88.4741 357.628 79.3696 cv
358.284 76.0059 359.04 72.4824 359.771 69.0752 cv
360.918 63.7349 362.103 58.2134 363.003 52.874 cv
365.144 40.1694 367.718 25.4233 370.207 11.1626 cv
370.469 9.66553 li
373.048 -5.10303 377.534 -20.4048 391.257 -21.9155 cv
404.551 -23.377 414.594 -14.6084 423.451 -6.86865 cv
426.411 -4.28271 429.206 -1.83984 432.059 .217773 cv
435.71 2.85205 439.628 6 443.775 9.33252 cv
448.028 12.7485 452.425 16.2813 457.186 19.8032 cv
459.601 21.5889 462.051 23.4263 464.539 25.2915 cv
478.114 35.4697 493.501 47.0059 509.961 55.0957 cv
515.963 58.0454 519.599 61.27 522.118 65.8789 cv
522.969 67.4346 523.732 69.0864 524.472 70.6841 cv
526.253 74.5366 528.095 78.5205 531.374 81.7173 cv
534.746 85.0044 539.498 87.5059 544.093 89.9248 cv
545.319 90.5708 546.524 91.2046 547.673 91.8394 cv
549.484 92.8394 551.382 93.793 553.216 94.7148 cv
559.069 97.6572 565.123 100.7 569.58 105.814 cv
575.823 112.979 580.138 121.983 582.405 132.578 cv
582.656 133.755 582.878 134.958 583.104 136.185 cv
585.017 146.551 582.657 157.015 580.375 167.135 cv
579.997 168.816 li
578.503 175.476 575.511 181.091 572.343 187.037 cv
571.71 188.226 li
570.071 191.305 568.601 194.9 567.043 198.707 cv
562.146 210.676 556.599 224.237 543.709 225.087 cv
541.248 226.784 539.034 227.86 536.175 227.86 cv
cp
f
554.552 247.262 mo
558.3 247.85 560.556 246.728 563.896 244.159 cv
564.034 244.054 li
564.208 244.056 li
564.305 244.057 564.401 244.058 564.498 244.058 cv
579.848 244.058 585.85 227.511 591.148 212.901 cv
593.074 207.593 594.893 202.579 597.062 198.478 cv
597.571 197.515 598.079 196.567 598.581 195.63 cv
602.219 188.84 605.654 182.426 607.094 174.574 cv
609.098 163.652 611.009 150.729 610.002 137.687 cv
609.855 135.717 li
609.799 134.948 609.743 134.185 609.684 133.426 cv
608.965 124.366 607.14 111.191 599.609 101.409 cv
594.598 94.8984 587.146 91.3423 579.938 87.9038 cv
577.441 86.7119 574.859 85.48 572.407 84.1406 cv
571.077 83.4126 569.675 82.6836 568.242 81.9385 cv
562.492 78.9473 555.976 75.5571 551.801 70.9604 cv
547.724 66.4722 545.976 60.8345 544.285 55.3823 cv
543.614 53.2153 542.919 50.9746 542.095 48.8901 cv
539.679 42.7803 535.648 38.6807 528.181 34.7402 cv
515.296 27.939 503.029 19.5654 491.166 11.4678 cv
483.452 6.20215 476.166 1.22852 468.762 -3.31543 cv
463.761 -6.38477 458.93 -9.54932 454.259 -12.6094 cv
448.888 -16.1279 443.814 -19.4517 438.865 -22.3877 cv
435.677 -24.2798 432.563 -26.3276 429.268 -28.4961 cv
417.758 -36.0684 405.855 -43.8989 391.521 -44.1011 cv
391.428 -44.1025 391.335 -44.103 391.243 -44.103 cv
374.068 -44.103 370.618 -21.4131 368.759 -9.19238 cv
366.97 2.83398 364.568 15.0039 362.246 26.7729 cv
361.311 31.5171 360.39 36.1821 359.532 40.7236 cv
359.062 43.2583 358.571 45.8076 358.079 48.3604 cv
356.603 56.0298 355.075 63.9609 354.113 71.5498 cv
352.821 81.7383 347.93 90.4199 340.982 100.321 cv
336.938 106.083 333.735 111.92 331.191 118.164 cv
329.464 122.448 327.984 126.467 326.67 130.449 cv
326.066 132.257 li
322.896 141.708 319.304 152.419 325.121 160.946 cv
329.806 167.812 339.542 172.188 348.132 176.047 cv
350.099 176.931 351.956 177.766 353.688 178.602 cv
364.031 183.581 374.887 188.115 385.385 192.501 cv
387.803 193.511 390.208 194.516 392.594 195.52 cv
395.947 196.921 399.188 198.331 402.229 199.709 cv
407.603 202.17 413.583 204.17 419.366 206.104 cv
423.067 207.343 426.564 208.512 429.893 209.788 cv
441.771 214.337 453.961 217.587 466.866 221.029 cv
468.576 221.485 li
476.997 223.731 485.553 224.683 493.825 225.602 cv
497.072 225.963 500.429 226.336 503.746 226.783 cv
508.617 227.438 512.643 228.192 516.415 229.155 cv
524.055 231.104 530.636 234.354 536.609 237.575 cv
538.703 238.699 540.783 239.907 542.795 241.076 cv
546.593 243.282 550.52 245.563 554.552 247.262 cv
cp
556.392 248.415 mo
555.745 248.415 555.064 248.357 554.333 248.239 cv
554.22 248.207 li
550.108 246.481 546.135 244.173 542.292 241.94 cv
540.288 240.776 538.216 239.572 536.136 238.456 cv
530.217 235.265 523.702 232.047 516.167 230.124 cv
512.435 229.172 508.445 228.425 503.613 227.773 cv
500.307 227.328 496.956 226.956 493.715 226.596 cv
485.405 225.672 476.813 224.717 468.318 222.451 cv
466.608 221.995 li
453.677 218.547 441.463 215.29 429.535 210.721 cv
426.227 209.454 422.74 208.288 419.049 207.053 cv
413.241 205.11 407.235 203.102 401.813 200.62 cv
398.785 199.246 395.552 197.84 392.207 196.442 cv
389.82 195.438 387.416 194.433 384.999 193.423 cv
374.489 189.033 363.622 184.493 353.253 179.502 cv
351.534 178.673 349.683 177.841 347.722 176.959 cv
339.011 173.045 329.139 168.609 324.295 161.51 cv
318.198 152.572 321.874 141.61 325.118 131.939 cv
325.721 130.135 li
327.042 126.133 328.528 122.094 330.265 117.788 cv
332.839 111.472 336.076 105.571 340.164 99.7471 cv
347.025 89.9673 351.854 81.4082 353.121 71.4238 cv
354.088 63.8032 355.618 55.8564 357.098 48.1714 cv
357.589 45.6206 358.079 43.0737 358.55 40.5396 cv
359.407 35.9937 360.329 31.3262 361.266 26.5796 cv
363.586 14.8218 365.984 2.66357 367.771 -9.34131 cv
369.686 -21.9297 373.24 -45.3184 391.534 -45.1011 cv
406.161 -44.8945 418.188 -36.9829 429.817 -29.3315 cv
433.104 -27.1699 436.207 -25.1279 439.375 -23.248 cv
444.344 -20.3003 449.426 -16.9707 454.807 -13.4458 cv
459.472 -10.3896 464.296 -7.22949 469.285 -4.16797 cv
476.71 .388672 484.006 5.36914 491.729 10.6416 cv
503.569 18.7241 515.813 27.0811 528.647 33.8555 cv
536.347 37.9189 540.513 42.1685 543.024 48.5225 cv
543.863 50.6421 544.563 52.9014 545.241 55.0864 cv
546.898 60.4341 548.613 65.9639 552.541 70.2886 cv
556.596 74.7524 563.028 78.0986 568.704 81.0513 cv
570.143 81.7998 571.551 82.5322 572.888 83.2632 cv
575.314 84.5894 577.884 85.8154 580.369 87.001 cv
587.683 90.4907 595.244 94.0991 600.402 100.799 cv
608.094 110.792 609.952 124.16 610.68 133.347 cv
610.74 134.107 610.796 134.874 610.853 135.645 cv
610.998 137.61 li
612.015 150.766 610.093 163.77 608.078 174.755 cv
606.61 182.761 603.138 189.241 599.462 196.103 cv
598.961 197.038 598.454 197.984 597.946 198.946 cv
595.809 202.985 594.002 207.967 592.089 213.242 cv
586.678 228.161 580.548 245.057 564.505 245.058 cv
564.459 245.058 564.414 245.058 564.368 245.058 cv
561.544 247.214 559.337 248.415 556.392 248.415 cv
cp
f
574.371 267.758 mo
578.825 268.556 581.189 266.92 584.542 264.13 cv
584.694 264.003 li
584.892 264.015 li
603.757 265.124 610.427 245.012 616.322 227.264 cv
618.554 220.546 620.662 214.202 623.298 209.199 cv
624.053 207.766 624.809 206.365 625.555 204.984 cv
629.766 197.183 633.743 189.815 635.169 180.547 cv
637.489 165.467 637.834 150.396 637.874 138.952 cv
637.885 137.316 637.912 135.692 637.947 134.079 cv
638.247 120.504 637.54 106.539 630.399 96.3525 cv
624.724 88.2554 615.74 84.1338 607.054 80.1475 cv
603.918 78.709 600.677 77.2212 597.627 75.5659 cv
596.097 74.7349 594.48 73.9009 592.826 73.0464 cv
585.781 69.4092 577.797 65.2866 572.934 59.4951 cv
568.213 53.8521 566.602 46.6636 565.044 39.7119 cv
564.426 36.9507 563.786 34.0957 562.963 31.4414 cv
560.539 23.623 556.021 18.5894 546.846 13.4883 cv
536.336 7.64453 526.054 .85498 516.111 -5.71143 cv
504.686 -13.2568 492.871 -21.0591 480.929 -27.2446 cv
475.352 -30.1328 469.789 -33.1738 464.409 -36.1143 cv
458.15 -39.5361 452.237 -42.7681 446.248 -45.8135 cv
443.804 -47.0562 441.354 -48.3325 438.894 -49.6152 cv
424.019 -57.3667 408.637 -65.3818 391.688 -67.2861 cv
371.519 -69.5576 367.973 -42.666 366.064 -28.2217 cv
364.29 -14.6152 361.318 -.849121 358.444 12.4634 cv
357.31 17.7168 356.137 23.1484 355.077 28.4033 cv
352.695 40.3086 350.484 51.9551 349.614 63.5454 cv
348.632 76.2515 342.503 86.9077 336.025 96.5313 cv
331.767 102.857 328.321 109.534 325.492 116.944 cv
323.819 121.353 322.254 126.072 320.84 130.969 cv
320.544 131.993 320.232 133.034 319.917 134.088 cv
316.814 144.471 313.297 156.239 320.07 165.46 cv
325.178 172.413 335.703 176.806 344.99 180.683 cv
347.863 181.882 350.577 183.015 352.963 184.156 cv
364.571 189.702 376.586 194.999 388.206 200.121 cv
390.918 201.316 393.624 202.509 396.319 203.703 cv
399.849 205.259 403.454 206.906 407.033 208.596 cv
414.084 211.941 421.444 215.087 428.563 218.13 cv
431.603 219.43 434.612 220.717 437.56 222.001 cv
452.056 228.322 466.058 233.562 480.362 238.019 cv
489.744 240.905 499.371 241.683 508.681 242.436 cv
512.111 242.712 515.658 242.999 519.159 243.387 cv
524.563 243.985 529.013 244.758 533.16 245.817 cv
541.786 248.021 549.104 252.125 555.126 255.85 cv
557.318 257.201 559.505 258.637 561.619 260.024 cv
565.718 262.714 569.955 265.496 574.371 267.758 cv
cp
576.512 268.963 mo
575.771 268.963 574.979 268.888 574.118 268.728 cv
573.981 268.682 li
569.493 266.389 565.211 263.578 561.07 260.86 cv
558.962 259.477 556.782 258.045 554.601 256.7 cv
548.644 253.016 541.408 248.956 532.912 246.786 cv
528.811 245.738 524.406 244.975 519.05 244.381 cv
515.563 243.994 512.023 243.708 508.601 243.432 cv
499.237 242.675 489.555 241.893 480.066 238.974 cv
465.725 234.506 451.69 229.254 437.159 222.918 cv
434.215 221.634 431.207 220.349 428.17 219.05 cv
421.043 216.003 413.674 212.853 406.605 209.5 cv
403.034 207.813 399.438 206.17 395.915 204.617 cv
393.22 203.424 390.515 202.231 387.803 201.036 cv
376.176 195.911 364.154 190.611 352.531 185.059 cv
350.169 183.928 347.466 182.8 344.604 181.606 cv
335.198 177.679 324.536 173.229 319.264 166.052 cv
312.196 156.43 315.789 144.408 318.959 133.802 cv
319.273 132.75 319.584 131.712 319.879 130.691 cv
321.301 125.768 322.875 121.023 324.558 116.588 cv
327.414 109.105 330.894 102.362 335.195 95.9727 cv
341.597 86.4629 347.652 75.9434 348.617 63.4692 cv
349.491 51.8237 351.708 40.144 354.097 28.2065 cv
355.158 22.9438 356.332 17.5088 357.467 12.2524 cv
360.336 -1.04053 363.304 -14.7856 365.072 -28.3516 cv
367.026 -43.1372 370.697 -70.6499 391.799 -68.2803 cv
408.934 -66.355 424.399 -58.2959 439.355 -50.502 cv
441.813 -49.2212 444.26 -47.9463 446.701 -46.7051 cv
452.704 -43.6523 458.623 -40.417 464.889 -36.9917 cv
470.264 -34.0537 475.821 -31.0156 481.388 -28.1323 cv
493.378 -21.9229 505.215 -14.1055 516.662 -6.5459 cv
526.59 .0102539 536.855 6.78906 547.332 12.6143 cv
556.759 17.856 561.409 23.0513 563.918 31.1455 cv
564.753 33.8379 565.396 36.7129 566.02 39.4932 cv
567.552 46.3286 569.136 53.3965 573.7 58.853 cv
578.434 64.4897 586.323 68.5635 593.285 72.1577 cv
594.946 73.0156 596.568 73.853 598.104 74.687 cv
601.124 76.3267 604.351 77.8071 607.471 79.2388 cv
616.278 83.2803 625.387 87.4595 631.218 95.7783 cv
638.524 106.2 639.251 120.356 638.947 134.101 cv
638.912 135.709 638.885 137.328 638.874 138.958 cv
638.834 150.435 638.488 165.553 636.157 180.699 cv
634.705 190.138 630.688 197.58 626.435 205.459 cv
625.69 206.837 624.936 208.234 624.183 209.665 cv
621.585 214.595 619.49 220.902 617.271 227.579 cv
611.426 245.177 604.817 265.058 586.404 265.06 cv
585.952 265.06 585.497 265.048 585.03 265.023 cv
582.222 267.353 579.932 268.963 576.512 268.963 cv
cp
f
594.188 288.252 mo
599.109 289.231 601.466 287.404 605.192 284.098 cv
605.354 283.954 li
605.569 283.974 li
627.771 285.995 635.082 262.369 641.556 241.536 cv
644.072 233.439 646.448 225.792 649.533 219.92 cv
650.514 218.053 651.501 216.238 652.474 214.45 cv
657.288 205.598 661.836 197.237 663.244 186.516 cv
664.466 177.222 664.73 167.661 664.986 158.415 cv
665.202 150.634 665.425 142.589 666.217 134.743 cv
667.727 119.778 668.707 102.845 661.193 91.2993 cv
654.875 81.5923 644.338 76.9028 634.147 72.3677 cv
630.379 70.6904 626.482 68.9565 622.846 66.9912 cv
621.103 66.0498 619.258 65.103 617.365 64.1323 cv
609.037 59.8594 599.599 55.0166 594.07 48.0337 cv
588.704 41.2544 587.233 32.5229 585.813 24.0786 cv
585.246 20.7144 584.66 17.2358 583.836 14.0039 cv
581.401 4.46045 576.435 -1.43896 565.512 -7.7627 cv
556.512 -12.9736 547.594 -18.8286 538.969 -24.4912 cv
524.3 -34.1216 509.132 -44.0801 493.09 -51.1782 cv
486.139 -54.2539 479.012 -57.5615 472.119 -60.7603 cv
446.313 -72.7358 419.63 -85.1196 391.865 -90.4751 cv
386.361 -91.5361 381.602 -90.6348 377.722 -87.7905 cv
367.167 -80.0542 364.789 -59.5186 363.369 -47.2485 cv
361.622 -32.1567 358.104 -16.8867 354.7 -2.11865 cv
350.335 16.8291 345.82 36.4214 345.112 55.5479 cv
344.572 70.1416 337.708 82.5396 331.065 92.7427 cv
324.066 103.494 319.114 115.445 315.009 131.493 cv
314.646 132.912 314.252 134.362 313.852 135.834 cv
310.771 147.178 307.281 160.035 315.021 169.977 cv
320.599 177.141 332.056 181.603 342.165 185.54 cv
345.849 186.975 349.329 188.33 352.239 189.712 cv
365.388 195.956 378.848 202.141 391.864 208.123 cv
400.044 211.884 li
410.921 216.89 421.478 222.234 431.686 227.403 cv
451.75 237.562 470.701 247.157 492.143 254.553 cv
502.402 258.091 513.024 258.673 523.296 259.236 cv
532.012 259.714 541.023 260.208 549.905 262.479 cv
561.87 265.539 571.261 272.326 580.342 278.89 cv
584.771 282.091 589.352 285.401 594.188 288.252 cv
cp
596.667 289.519 mo
595.825 289.519 594.913 289.421 593.906 289.216 cv
593.752 289.156 li
588.849 286.272 584.227 282.932 579.757 279.7 cv
570.75 273.191 561.438 266.46 549.657 263.448 cv
540.87 261.201 531.908 260.71 523.241 260.235 cv
512.9 259.668 502.208 259.082 491.816 255.498 cv
470.311 248.08 451.329 238.47 431.233 228.295 cv
421.033 223.131 410.486 217.791 399.626 212.792 cv
391.446 209.031 li
378.428 203.048 364.965 196.861 351.81 190.615 cv
348.933 189.249 345.469 187.9 341.802 186.472 cv
331.572 182.488 319.979 177.973 314.231 170.591 cv
306.185 160.255 309.745 147.142 312.887 135.573 cv
313.285 134.105 313.678 132.659 314.04 131.245 cv
318.174 115.086 323.166 103.044 330.228 92.1968 cv
336.796 82.1089 343.582 69.8608 344.112 55.5107 cv
344.824 36.2896 349.35 16.6499 353.727 -2.34326 cv
357.123 -17.0845 360.635 -32.3271 362.375 -47.3638 cv
363.814 -59.7954 366.224 -80.603 377.131 -88.5972 cv
381.243 -91.6108 386.261 -92.5732 392.055 -91.4565 cv
419.939 -86.0781 446.68 -73.6685 472.54 -61.667 cv
479.429 -58.4702 486.551 -55.1646 493.494 -52.0923 cv
509.612 -44.9609 524.815 -34.98 539.518 -25.3271 cv
548.131 -19.6724 557.037 -13.8247 566.014 -8.62793 cv
575.488 -3.14209 581.937 2.51563 584.805 13.7568 cv
585.64 17.0288 586.229 20.5283 586.799 23.9126 cv
588.199 32.2324 589.647 40.835 594.854 47.4126 cv
600.248 54.2261 609.584 59.0161 617.822 63.2427 cv
619.721 64.2168 621.572 65.1665 623.32 66.1113 cv
626.925 68.0586 630.803 69.7847 634.555 71.4541 cv
644.877 76.0483 655.552 80.7988 662.031 90.7534 cv
669.723 102.572 668.738 119.708 667.211 134.844 cv
666.423 142.653 666.201 150.68 665.986 158.442 cv
665.729 167.714 665.464 177.301 664.236 186.646 cv
662.804 197.552 658.213 205.992 653.352 214.928 cv
652.382 216.711 651.396 218.522 650.418 220.385 cv
647.376 226.177 645.013 233.781 642.511 241.833 cv
635.945 262.963 628.502 286.897 605.695 284.988 cv
602.624 287.705 600.301 289.519 596.667 289.519 cv
cp
f
487.602 520.521 mo
476.105 513.611 467.098 503.799 458.387 494.31 cv
450.333 485.535 442.005 476.462 431.724 469.698 cv
425.24 465.433 418.2 461.505 411.393 457.706 cv
395.666 448.932 379.404 439.857 367.866 425.617 cv
356.823 411.989 352.948 404.637 359.207 386.522 cv
363.073 375.329 367.381 364.122 371.546 353.285 cv
375.168 343.861 378.913 334.116 382.358 324.409 cv
383.547 321.058 384.895 317.646 386.198 314.347 cv
393.563 295.705 400.518 278.098 384.703 262.909 cv
379.336 257.754 372.879 253.825 366.634 250.026 cv
361.509 246.908 356.21 243.685 351.641 239.839 cv
346.712 235.69 342.578 230.243 338.58 224.975 cv
336.665 222.451 334.855 220.066 332.988 217.854 cv
323.582 206.714 314.164 196.092 302.383 188.589 cv
299.981 187.06 297.808 185.752 295.707 184.487 cv
286.94 179.209 280.606 175.396 273.722 164.541 cv
271.773 161.469 269.413 158.49 267.13 155.609 cv
264.544 152.345 261.87 148.971 259.78 145.442 cv
257.974 142.394 256.727 139.06 255.521 135.835 cv
254.041 131.876 252.509 127.782 249.942 124.266 cv
246.567 119.643 243.045 115.286 239.64 111.072 cv
236.186 106.796 232.613 102.376 229.271 97.7637 cv
227.349 95.1118 225.601 92.4175 223.911 89.812 cv
221.267 85.7354 218.532 81.52 215.146 77.522 cv
213.456 75.5264 211.396 73.498 209.215 71.3506 cv
204.464 66.6733 199.552 61.8369 197.631 56.5352 cv
194.677 48.3853 198.329 44.4106 202.951 39.3789 cv
203.42 38.8677 203.903 38.3423 204.394 37.7969 cv
211.812 29.5537 215.25 20.7651 219.231 10.5889 cv
219.77 9.2124 220.319 7.80908 220.89 6.37598 cv
222.111 3.31104 223.375 .248047 224.64 -2.81787 cv
232.657 -22.2446 240.946 -42.3325 238.047 -63.5757 cv
237.089 -70.6035 235.188 -77.5195 233.351 -84.2085 cv
231.965 -89.252 230.532 -94.4678 229.514 -99.6909 cv
226.24 -116.488 223.711 -135.944 221.783 -159.172 cv
221.593 -161.452 221.742 -163.743 221.885 -165.958 cv
222.09 -169.117 222.284 -172.1 221.567 -174.994 cv
222.538 -175.234 li
223.292 -172.19 223.084 -168.989 222.883 -165.894 cv
222.742 -163.714 222.596 -161.461 222.779 -159.255 cv
224.705 -136.063 227.229 -116.643 230.495 -99.8823 cv
231.506 -94.6963 232.934 -89.499 234.315 -84.4731 cv
236.161 -77.7534 238.071 -70.8047 239.039 -63.7109 cv
241.973 -42.2007 233.631 -21.9858 225.564 -2.43652 cv
224.301 .625977 223.039 3.68506 221.819 6.74609 cv
221.249 8.17676 220.701 9.57861 220.163 10.9531 cv
216.146 21.2207 212.677 30.0874 205.137 38.4658 cv
204.644 39.0137 204.159 39.5415 203.688 40.0552 cv
198.952 45.21 195.824 48.6152 198.571 56.1943 cv
200.416 61.2832 205.246 66.0391 209.917 70.6382 cv
212.114 72.8018 214.19 74.8457 215.909 76.8755 cv
219.336 80.9224 222.088 85.165 224.75 89.2681 cv
226.433 91.8628 228.173 94.5459 230.08 97.1768 cv
233.407 101.768 236.971 106.178 240.418 110.443 cv
243.831 114.667 247.36 119.033 250.75 123.676 cv
253.398 127.304 254.954 131.463 256.458 135.485 cv
257.648 138.668 258.879 141.96 260.64 144.933 cv
262.696 148.403 265.348 151.75 267.914 154.988 cv
270.212 157.889 272.589 160.889 274.566 164.006 cv
281.325 174.661 287.251 178.229 296.223 183.63 cv
298.329 184.898 300.507 186.209 302.92 187.746 cv
314.82 195.324 324.295 206.007 333.752 217.209 cv
335.636 219.441 337.453 221.836 339.377 224.371 cv
343.342 229.595 347.441 234.997 352.285 239.073 cv
356.795 242.87 362.061 246.073 367.153 249.172 cv
373.444 252.999 379.949 256.957 385.396 262.188 cv
401.694 277.842 394.289 296.586 387.128 314.714 cv
385.828 318.005 384.483 321.408 383.3 324.743 cv
379.852 334.463 376.104 344.214 372.479 353.644 cv
368.317 364.473 364.014 375.672 360.152 386.849 cv
354.03 404.568 357.618 411.382 368.644 424.988 cv
380.06 439.078 396.236 448.104 411.88 456.833 cv
418.703 460.641 425.76 464.577 432.272 468.862 cv
442.657 475.694 451.028 484.813 459.124 493.633 cv
467.787 503.07 476.744 512.829 488.117 519.664 cv
487.602 520.521 li
cp
f
440.955 513.483 mo
431.209 506.596 423.773 496.962 416.582 487.646 cv
415.088 485.711 413.602 483.784 412.104 481.895 cv
406.865 475.271 400.246 468.441 391.27 460.4 cv
389.174 458.521 386.95 456.489 384.897 454.359 cv
370.304 439.227 359.982 426.35 353.626 408.94 cv
348.629 395.251 348.865 386.972 354.684 372.026 cv
357.087 365.853 359.834 359.638 362.742 353.059 cv
370.268 336.038 378.048 318.438 379.815 301.088 cv
382.189 277.777 366.772 260.925 353.075 248.847 cv
349.851 246.003 346.488 243.201 343.236 240.492 cv
338.295 236.375 333.185 232.118 328.433 227.608 cv
323.878 223.288 319.971 218.192 316.192 213.263 cv
314.771 211.409 313.302 209.492 311.83 207.66 cv
305.962 200.357 299.31 194.987 292.268 189.302 cv
286.391 184.558 279.782 177.983 272.623 169.761 cv
262.584 158.232 253.81 144.113 247.915 130.003 cv
245.892 125.163 242.293 121.419 238.813 117.8 cv
236.771 115.677 234.659 113.481 232.854 111.064 cv
228.786 105.621 225.17 99.5244 221.673 93.6289 cv
220.292 91.3032 218.919 88.9873 217.525 86.7217 cv
216.746 85.4526 li
214.208 81.314 211.811 77.4043 208.771 73.8276 cv
206.904 71.6426 205.111 69.7124 203.288 67.9282 cv
196.446 61.2305 194.614 57.5747 193.485 48.3691 cv
192.361 39.2017 194.022 30.8037 198.562 22.6953 cv
202.535 15.6001 204.715 8.2085 207.024 .383301 cv
207.397 -.881348 207.772 -2.15479 208.159 -3.4375 cv
208.584 -4.84912 209.012 -6.25879 209.44 -7.6665 cv
215.937 -29.0532 222.074 -49.2544 216.38 -70.4424 cv
215.806 -72.583 215.262 -74.7598 214.715 -76.9468 cv
213.431 -82.0884 212.103 -87.4048 210.324 -92.354 cv
209.426 -94.8672 208.403 -97.4019 207.414 -99.8525 cv
206.82 -101.325 206.227 -102.793 205.659 -104.259 cv
204.731 -106.642 203.92 -108.793 203.182 -110.836 cv
202.126 -113.753 201.01 -116.648 199.931 -119.449 cv
198.154 -124.059 196.316 -128.826 194.734 -133.739 cv
193.693 -136.973 192.684 -140.298 191.708 -143.514 cv
190.395 -147.838 189.037 -152.309 187.626 -156.465 cv
187.101 -158.014 186.709 -159.542 186.33 -161.02 cv
185.586 -163.919 184.884 -166.658 183.289 -169.102 cv
184.125 -169.648 li
185.812 -167.066 186.534 -164.25 187.298 -161.268 cv
187.673 -159.809 188.06 -158.299 188.574 -156.786 cv
189.989 -152.615 191.349 -148.136 192.664 -143.804 cv
193.639 -140.593 194.647 -137.271 195.687 -134.045 cv
197.26 -129.159 199.092 -124.406 200.864 -119.809 cv
201.945 -117.003 203.063 -114.103 204.122 -111.176 cv
204.858 -109.141 205.666 -106.997 206.591 -104.622 cv
207.158 -103.159 207.749 -101.694 208.341 -100.227 cv
209.334 -97.7666 210.361 -95.2231 211.265 -92.6914 cv
213.061 -87.6963 214.396 -82.3545 215.686 -77.189 cv
216.23 -75.0078 216.773 -72.8369 217.346 -70.7021 cv
223.114 -49.2378 216.937 -28.9033 210.396 -7.37549 cv
209.969 -5.96875 209.542 -4.56006 209.116 -3.14941 cv
208.73 -1.86816 208.355 -.59668 207.983 .666016 cv
205.658 8.54688 203.462 15.9907 199.435 23.1836 cv
195.002 31.1001 193.38 39.2983 194.478 48.2471 cv
195.584 57.2729 197.273 60.6406 203.987 67.2134 cv
205.832 69.019 207.646 70.9702 209.532 73.1792 cv
212.623 76.8154 215.04 80.7573 217.599 84.9302 cv
218.376 86.1973 li
219.773 88.4678 221.15 90.7881 222.533 93.1191 cv
226.017 98.9917 229.619 105.064 233.654 110.465 cv
235.423 112.833 237.513 115.006 239.533 117.107 cv
243.078 120.793 246.743 124.604 248.837 129.617 cv
254.692 143.631 263.407 157.654 273.377 169.104 cv
280.498 177.283 287.064 183.816 292.896 188.524 cv
299.981 194.244 306.674 199.647 312.609 207.034 cv
314.088 208.874 315.562 210.796 316.986 212.655 cv
320.741 217.553 324.623 222.617 329.12 226.884 cv
333.85 231.37 338.947 235.617 343.877 239.724 cv
347.134 242.438 350.502 245.244 353.737 248.097 cv
367.613 260.333 383.23 277.425 380.81 301.189 cv
379.026 318.697 371.213 336.371 363.657 353.463 cv
360.753 360.031 358.011 366.235 355.615 372.39 cv
349.903 387.062 349.668 395.184 354.565 408.597 cv
360.861 425.841 371.114 438.626 385.618 453.666 cv
387.648 455.772 389.854 457.79 391.938 459.656 cv
400.957 467.736 407.614 474.605 412.888 481.273 cv
414.388 483.167 415.877 485.096 417.374 487.035 cv
424.52 496.293 431.909 505.865 441.532 512.667 cv
440.955 513.483 li
cp
f
394.306 506.439 mo
385.944 499.428 379.801 489.71 373.86 480.312 cv
372.336 477.899 370.896 475.621 369.411 473.373 cv
366.205 468.506 362.021 463.851 357.976 459.348 cv
355.54 456.639 353.022 453.837 350.819 451.088 cv
348.745 448.501 347.208 446.173 346.12 443.971 cv
336.579 424.651 337.516 408.447 339.44 392.176 cv
340.848 380.272 344.294 370.815 350.161 357.528 cv
360.491 334.136 373.347 305.022 361.024 278.883 cv
354.29 264.598 342.701 253.588 331.495 242.939 cv
330.389 241.889 329.284 240.839 328.186 239.788 cv
323.397 235.206 319.214 230.258 315.169 225.472 cv
309.018 218.196 303.209 211.324 295.436 205.598 cv
289.653 201.337 286.734 196.848 283.038 191.164 cv
282.497 190.332 281.941 189.478 281.36 188.599 cv
279.158 185.271 276.43 182.202 273.792 179.233 cv
271.411 176.555 268.949 173.785 266.856 170.811 cv
262.222 164.227 258.041 157.204 253.998 150.412 cv
250.834 145.1 247.564 139.606 244.102 134.366 cv
242.452 131.869 240.886 129.249 239.371 126.715 cv
236.136 121.303 232.79 115.707 228.447 111.008 cv
220.788 102.72 212.697 90.603 203.714 73.9658 cv
202.405 71.5435 200.955 69.3325 199.42 66.9917 cv
198.397 65.4321 197.339 63.8198 196.334 62.1484 cv
190.637 52.6704 186.894 41.6758 185.508 30.3521 cv
184.813 24.667 186.83 19.5254 188.781 14.5532 cv
189.419 12.9263 190.08 11.2441 190.631 9.57324 cv
192.311 4.4873 193.246 -.948242 194.15 -6.20508 cv
194.548 -8.52197 194.96 -10.9175 195.43 -13.2466 cv
200.269 -37.2339 203.289 -57.1821 194.724 -77.3052 cv
193.368 -80.4917 192.424 -83.9775 191.511 -87.3481 cv
190.517 -91.0146 189.49 -94.8062 187.936 -98.1855 cv
186.323 -101.712 184.136 -105.17 182.021 -108.515 cv
181.824 -108.826 li
180.592 -110.765 179.358 -112.707 178.235 -114.567 cv
176.258 -117.84 174.067 -120.908 171.948 -123.875 cv
169.642 -127.104 167.258 -130.441 165.144 -134.053 cv
163.925 -136.133 162.717 -138.303 161.548 -140.4 cv
159.016 -144.947 156.397 -149.648 153.51 -153.749 cv
153.036 -154.423 li
150.582 -157.921 148.461 -160.942 145.082 -163.222 cv
145.642 -164.051 li
149.174 -161.668 151.448 -158.428 153.855 -154.998 cv
154.328 -154.324 li
157.246 -150.181 159.877 -145.456 162.422 -140.887 cv
163.588 -138.794 164.794 -136.629 166.007 -134.558 cv
168.098 -130.986 170.469 -127.667 172.761 -124.457 cv
174.892 -121.474 177.094 -118.39 179.091 -115.084 cv
180.208 -113.234 181.439 -111.297 182.629 -109.424 cv
182.866 -109.05 li
184.999 -105.677 187.204 -102.189 188.844 -98.6025 cv
190.434 -95.1484 191.472 -91.3159 192.476 -87.6094 cv
193.38 -84.2715 194.315 -80.8198 195.644 -77.6968 cv
204.322 -57.3096 201.284 -37.2085 196.411 -13.0493 cv
195.943 -10.7339 195.533 -8.34521 195.135 -6.03564 cv
194.225 -.742676 193.284 4.73047 191.581 9.88672 cv
191.021 11.5835 190.355 13.2788 189.712 14.9185 cv
187.719 19.9985 185.836 24.7969 186.5 30.231 cv
187.869 41.416 191.566 52.2749 197.192 61.6328 cv
198.187 63.2876 199.238 64.8921 200.256 66.4434 cv
201.735 68.6987 203.265 71.0308 204.594 73.4907 cv
213.537 90.0532 221.58 102.104 229.182 110.33 cv
233.595 115.105 236.968 120.747 240.229 126.202 cv
241.738 128.726 243.299 131.336 244.936 133.815 cv
248.411 139.074 251.688 144.578 254.857 149.9 cv
258.891 156.676 263.062 163.682 267.673 170.235 cv
269.734 173.163 272.177 175.912 274.54 178.569 cv
277.201 181.563 279.953 184.66 282.194 188.047 cv
282.777 188.928 283.334 189.785 283.876 190.619 cv
287.517 196.218 290.393 200.64 296.029 204.793 cv
303.896 210.589 309.743 217.505 315.933 224.827 cv
319.961 229.593 324.127 234.521 328.877 239.065 cv
329.975 240.116 331.078 241.164 332.184 242.215 cv
343.457 252.926 355.114 264.002 361.929 278.457 cv
374.446 305.009 361.488 334.354 351.075 357.933 cv
345.248 371.131 341.826 380.516 340.433 392.293 cv
338.527 408.409 337.597 424.454 347.017 443.527 cv
348.072 445.665 349.57 447.933 351.599 450.463 cv
353.785 453.189 356.182 455.855 358.719 458.679 cv
362.79 463.209 366.999 467.894 370.246 472.822 cv
371.735 475.078 373.245 477.467 374.705 479.777 cv
380.605 489.11 386.706 498.762 394.948 505.674 cv
394.306 506.439 li
cp
f
347.656 499.392 mo
340.448 492.13 335.438 482.119 330.594 472.438 cv
329.264 469.781 328.008 467.271 326.72 464.846 cv
324.565 460.789 321.446 456.872 318.43 453.084 cv
313.57 446.981 308.547 440.672 307.386 433.566 cv
303.264 408.336 317.055 387.757 330.392 367.855 cv
339.902 353.664 349.737 338.988 352.931 322.788 cv
356.465 304.855 351.499 287.558 337.303 268.351 cv
336.731 267.577 li
333.986 263.861 330.876 259.649 327.987 256.268 cv
323.41 250.911 318.749 246.085 314.241 241.419 cv
304.872 231.72 296.023 222.559 288.695 209.671 cv
282.705 199.138 274.647 190.122 267.538 182.166 cv
262.529 176.562 258.447 170.133 254.5 163.915 cv
252.632 160.974 250.702 157.933 248.687 154.997 cv
245.143 149.835 242.646 144.325 240.231 138.996 cv
237.469 132.901 234.613 126.599 230.2 120.904 cv
226.803 116.522 222.961 112.335 219.245 108.287 cv
212.936 101.413 206.413 94.3057 201.789 85.9521 cv
199.677 82.1367 198.287 77.6104 196.943 73.2334 cv
194.604 65.6147 192.185 57.7368 185.884 53.0049 cv
184.054 51.6304 182.188 50.4214 180.384 49.2524 cv
172.609 44.2158 165.895 39.8662 170.195 26.8477 cv
171.39 23.23 173.14 19.877 174.832 16.6343 cv
176.583 13.2783 178.393 9.80859 179.57 6.06885 cv
181.676 -.624023 181.902 -6.81689 182.142 -13.373 cv
182.255 -16.4922 182.373 -19.7178 182.706 -23.0522 cv
184.731 -43.3677 184.967 -64.8325 173.079 -84.168 cv
171.143 -87.3149 170.102 -90.9751 169.095 -94.5146 cv
168.167 -97.7798 167.206 -101.156 165.553 -104.015 cv
163.257 -107.984 159.671 -111.69 156.203 -115.273 cv
155.205 -116.305 154.227 -117.315 153.308 -118.305 cv
150.538 -121.286 147.417 -123.883 144.398 -126.395 cv
141.424 -128.87 138.35 -131.428 135.576 -134.376 cv
134.049 -135.998 132.524 -137.719 131.048 -139.383 cv
124.287 -147.008 117.295 -154.892 106.898 -157.412 cv
107.134 -158.384 li
117.836 -155.79 124.933 -147.787 131.796 -140.046 cv
133.267 -138.388 134.788 -136.672 136.304 -135.062 cv
139.036 -132.158 142.087 -129.619 145.038 -127.164 cv
148.081 -124.632 151.227 -122.014 154.04 -118.985 cv
154.955 -118.001 155.928 -116.995 156.921 -115.969 cv
160.432 -112.342 164.062 -108.592 166.418 -104.516 cv
168.134 -101.549 169.111 -98.1123 170.057 -94.7886 cv
171.045 -91.314 172.067 -87.7212 173.93 -84.6914 cv
185.974 -65.1035 185.744 -43.4429 183.701 -22.9526 cv
183.372 -19.6499 183.254 -16.4404 183.141 -13.3364 cv
182.899 -6.71094 182.671 -.452637 180.524 6.36865 cv
179.32 10.1929 177.489 13.7026 175.718 17.0967 cv
174.044 20.3042 172.314 23.6206 171.144 27.1611 cv
167.086 39.4468 173.194 43.4033 180.927 48.4131 cv
182.747 49.5913 184.627 50.8096 186.485 52.2051 cv
193.045 57.1323 195.513 65.1685 197.899 72.9399 cv
199.289 77.4673 200.602 81.7432 202.664 85.4678 cv
207.23 93.7173 213.712 100.78 219.981 107.61 cv
223.711 111.674 227.568 115.876 230.99 120.292 cv
235.476 126.079 238.356 132.436 241.142 138.583 cv
243.539 143.873 246.018 149.342 249.511 154.431 cv
251.536 157.381 253.472 160.431 255.344 163.379 cv
259.27 169.563 263.33 175.957 268.284 181.5 cv
275.426 189.493 283.522 198.551 289.564 209.177 cv
296.83 221.955 305.637 231.071 314.96 240.724 cv
319.479 245.401 324.15 250.238 328.747 255.617 cv
331.659 259.026 334.781 263.254 337.535 266.982 cv
338.107 267.757 li
352.482 287.205 357.504 304.753 353.911 322.981 cv
350.68 339.379 340.788 354.139 331.223 368.413 cv
317.993 388.152 304.313 408.564 308.372 433.404 cv
309.491 440.253 314.433 446.459 319.212 452.461 cv
322.257 456.284 325.405 460.238 327.603 464.377 cv
328.896 466.813 330.155 469.328 331.488 471.991 cv
336.298 481.602 341.271 491.539 348.365 498.687 cv
347.656 499.392 li
cp
f
400.418 234.922 mo
398.541 234.922 396.95 235.254 395.743 236.004 cv
393.976 237.103 393.186 239.046 393.327 241.945 cv
393.559 246.626 401.421 254.984 406.623 260.516 cv
408.045 262.027 409.273 263.333 410.112 264.316 cv
427.711 284.924 430.321 304.005 419.42 332.375 cv
417.173 338.222 414.819 344.094 412.542 349.772 cv
406.225 365.53 399.691 381.824 395.032 398.721 cv
390.635 414.668 394.815 418.884 407.886 426.864 cv
420.698 434.688 431.579 443.124 444.981 454.201 cv
452.856 460.71 461.914 465.847 470.673 470.815 cv
475.122 473.339 479.724 475.949 484.113 478.706 cv
486.016 479.897 li
493.7 484.7 502.41 490.145 508.244 497.495 cv
510.988 500.952 513.043 505.284 515.029 509.473 cv
517.377 514.426 519.806 519.546 523.349 523.104 cv
523.612 523.368 li
523.433 523.696 li
522.938 524.6 523.239 526.216 524.239 528.019 cv
526.389 531.894 531.432 536.221 537.425 536.563 cv
548.536 537.191 551.441 526.632 554.264 516.413 cv
555.185 513.079 556.055 509.931 557.197 507.129 cv
561.283 497.107 568.581 489.729 575.638 482.592 cv
584.979 473.146 593.802 464.224 595.996 449.622 cv
597.229 441.41 597.959 432.785 598.665 424.445 cv
599.956 409.178 601.292 393.392 605.745 378.474 cv
606.926 374.521 608.777 370.309 610.568 366.234 cv
613.381 359.837 616.289 353.222 616.949 347.025 cv
617.71 339.875 612.455 331.055 607.911 324.915 cv
602.826 318.044 595.97 315.612 588.711 313.037 cv
585.988 312.071 583.174 311.073 580.41 309.817 cv
575.072 307.392 569.68 304.7 564.465 302.099 cv
555.178 297.465 545.575 292.674 535.742 289.092 cv
528.24 286.359 520.411 284.089 512.841 281.893 cv
501.175 278.509 489.111 275.009 477.828 269.717 cv
473.679 267.771 469.628 265.657 465.711 263.614 cv
460.112 260.694 454.323 257.676 448.241 255.146 cv
447.512 254.843 445.813 253.897 443.239 252.467 cv
433.223 246.897 411.685 234.922 400.418 234.922 cv
cp
538.405 537.592 mo
538.067 537.592 537.722 537.582 537.368 537.562 cv
530.996 537.197 525.643 532.61 523.365 528.504 cv
522.287 526.56 521.945 524.788 522.398 523.563 cv
518.867 519.9 516.457 514.818 514.125 509.901 cv
512.163 505.764 510.134 501.484 507.461 498.116 cv
501.733 490.9 493.474 485.738 485.486 480.745 cv
483.582 479.554 li
479.211 476.808 474.619 474.203 470.18 471.686 cv
461.383 466.695 452.287 461.536 444.345 454.973 cv
430.976 443.923 420.127 435.51 407.364 427.718 cv
394.093 419.614 389.508 414.991 394.067 398.455 cv
398.743 381.504 405.286 365.184 411.614 349.4 cv
413.89 343.725 416.242 337.855 418.486 332.016 cv
429.233 304.046 426.673 285.247 409.353 264.966 cv
408.528 264.001 407.308 262.703 405.895 261.2 cv
400.592 255.563 392.578 247.043 392.329 241.994 cv
392.169 238.745 393.141 236.444 395.216 235.154 cv
404.157 229.594 431.886 245.011 443.726 251.593 cv
446.177 252.956 447.948 253.941 448.626 254.223 cv
454.747 256.769 460.556 259.798 466.174 262.728 cv
470.082 264.766 474.123 266.874 478.252 268.811 cv
489.466 274.07 501.49 277.559 513.119 280.933 cv
520.706 283.133 528.551 285.408 536.084 288.152 cv
545.971 291.754 555.6 296.558 564.911 301.204 cv
570.118 303.802 575.502 306.488 580.824 308.907 cv
583.548 310.146 586.343 311.137 589.045 312.095 cv
596.452 314.722 603.449 317.203 608.716 324.319 cv
613.364 330.603 618.739 339.661 617.943 347.131 cv
617.267 353.482 614.327 360.17 611.483 366.638 cv
609.623 370.87 607.866 374.867 606.704 378.759 cv
602.279 393.578 600.948 409.313 599.661 424.529 cv
598.954 432.886 598.224 441.526 596.984 449.771 cv
594.742 464.695 585.392 474.15 576.35 483.295 cv
569.36 490.361 562.134 497.669 558.123 507.506 cv
557.003 510.254 556.141 513.375 555.228 516.68 cv
552.387 526.966 549.451 537.592 538.405 537.592 cv
cp
f
419.253 245.801 mo
417.714 245.801 416.386 246.054 415.337 246.623 cv
413.776 247.47 412.943 248.961 412.789 251.184 cv
412.555 254.564 417.197 260.829 420.588 265.403 cv
421.821 267.068 422.887 268.506 423.556 269.578 cv
429.039 278.384 432.329 286.24 433.908 294.306 cv
435.381 301.725 435.516 308.751 434.319 315.784 cv
433.555 320.277 432.204 325.085 430.189 330.481 cv
429.425 332.534 428.643 334.581 427.858 336.633 cv
427.255 338.211 426.651 339.791 426.053 341.38 cv
424.431 345.629 li
418.871 360.166 413.122 375.198 409.355 390.315 cv
405.898 404.187 409.642 408.217 420.41 415.419 cv
432.08 423.225 442.476 432.015 452.122 440.351 cv
458.035 445.472 464.749 449.641 471.242 453.674 cv
476.002 456.629 480.924 459.686 485.434 463.065 cv
491.815 467.849 496.896 473.167 502.272 478.797 cv
503.63 480.222 504.885 481.632 506.002 482.991 cv
508.216 485.68 510.113 488.525 511.948 491.276 cv
515.231 496.199 518.333 500.85 522.583 503.507 cv
522.897 503.703 li
522.801 504.062 li
522.722 504.355 522.97 505.061 523.702 505.976 cv
525.575 508.311 530.453 511.679 536.166 511.435 cv
536.166 511.435 li
545.375 511.021 547.905 502.101 550.352 493.474 cv
551.124 490.75 551.854 488.178 552.786 485.835 cv
556.143 477.413 561.934 471.039 567.534 464.876 cv
575.176 456.465 582.395 448.521 583.94 435.802 cv
584.578 430.552 585.098 425.27 585.599 420.161 cv
587.17 404.168 588.653 389.061 593.582 373.464 cv
594.556 370.361 595.863 367.202 597.248 363.858 cv
599.765 357.78 602.367 351.494 602.831 345.548 cv
603.242 340.453 600.626 333.856 595.053 325.94 cv
590.736 319.807 584.885 317.32 578.69 314.688 cv
576.437 313.731 574.106 312.741 571.817 311.556 cv
568.039 309.599 564.207 307.492 560.501 305.456 cv
551.703 300.621 542.605 295.621 533.284 292.071 cv
526.868 289.629 520.155 287.575 513.662 285.589 cv
503.962 282.621 493.932 279.553 484.5 275.085 cv
481.043 273.448 477.656 271.687 474.38 269.982 cv
469.59 267.49 464.636 264.913 459.454 262.729 cv
458.684 262.404 457.02 261.479 454.716 260.197 cv
446.518 255.637 428.838 245.801 419.253 245.801 cv
cp
535.545 512.448 mo
530.099 512.448 525.225 509.473 522.922 506.601 cv
522.381 505.925 521.787 504.999 521.787 504.185 cv
517.493 501.393 514.394 496.745 511.116 491.831 cv
509.295 489.101 507.411 486.276 505.23 483.626 cv
504.128 482.286 502.889 480.894 501.549 479.487 cv
496.201 473.889 491.149 468.6 484.834 463.866 cv
480.358 460.512 475.456 457.468 470.715 454.523 cv
464.188 450.47 457.44 446.279 451.468 441.106 cv
441.845 432.792 431.478 424.024 419.854 416.251 cv
408.896 408.921 404.79 404.501 408.385 390.073 cv
412.167 374.897 417.927 359.837 423.496 345.271 cv
425.118 341.026 li
425.716 339.438 426.32 337.855 426.924 336.276 cv
427.707 334.227 428.488 332.183 429.252 330.132 cv
431.245 324.795 432.58 320.047 433.333 315.616 cv
434.509 308.705 434.376 301.798 432.928 294.499 cv
431.372 286.556 428.124 278.806 422.706 270.107 cv
422.06 269.069 421.005 267.646 419.784 265.999 cv
416.107 261.038 411.531 254.863 411.791 251.115 cv
411.969 248.56 413.001 246.752 414.859 245.744 cv
422.931 241.373 444.725 253.495 455.202 259.323 cv
457.478 260.59 459.122 261.504 459.843 261.808 cv
465.062 264.008 470.033 266.594 474.842 269.095 cv
478.109 270.795 481.488 272.552 484.928 274.181 cv
494.294 278.617 504.289 281.675 513.955 284.633 cv
520.463 286.623 527.192 288.683 533.64 291.137 cv
543.026 294.712 552.154 299.729 560.982 304.579 cv
564.684 306.613 568.51 308.716 572.277 310.667 cv
574.533 311.836 576.845 312.818 579.081 313.769 cv
585.411 316.458 591.39 318.998 595.871 325.364 cv
601.581 333.477 604.259 340.294 603.827 345.627 cv
603.352 351.73 600.719 358.091 598.172 364.241 cv
596.796 367.564 595.497 370.702 594.535 373.764 cv
589.639 389.263 588.16 404.319 586.595 420.259 cv
586.092 425.373 585.572 430.661 584.933 435.923 cv
583.349 448.958 575.685 457.392 568.274 465.548 cv
562.733 471.646 557.004 477.951 553.716 486.205 cv
552.802 488.5 552.079 491.049 551.313 493.746 cv
548.771 502.715 546.141 511.988 536.211 512.433 cv
536.211 512.433 li
535.988 512.443 535.766 512.448 535.545 512.448 cv
cp
f
438.02 256.781 mo
436.832 256.781 435.773 256.95 434.884 257.327 cv
433.521 257.903 432.653 258.929 432.233 260.46 cv
431.59 262.807 433.608 267.187 435.229 270.705 cv
435.954 272.278 436.639 273.764 437.005 274.891 cv
437.517 276.462 li
439.582 282.797 441.718 289.347 443.018 296.577 cv
444.119 302.711 445.042 308.771 444.245 315.474 cv
443.768 319.507 442.723 323.674 440.959 328.586 cv
440.449 330.012 439.927 331.436 439.402 332.868 cv
438.746 334.658 438.086 336.46 437.439 338.291 cv
436.788 340.135 436.121 342.005 435.447 343.895 cv
430.977 356.427 426.354 369.387 423.68 381.905 cv
421.306 393.014 423.909 397.16 432.939 403.979 cv
442.089 410.889 450.274 418.267 459.265 426.501 cv
463.715 430.597 468.701 434.054 473.524 437.397 cv
478.039 440.528 482.708 443.766 486.756 447.432 cv
490.146 450.501 492.371 453.719 494.728 457.127 cv
496.369 459.499 498.066 461.953 500.214 464.395 cv
501.441 465.794 502.626 467.157 503.761 468.485 cv
504.957 469.89 li
510.854 476.822 515.512 482.299 521.769 483.921 cv
521.941 484.004 li
522.78 484.629 528.403 487.543 534.889 486.313 cv
542.175 484.936 544.353 477.578 546.458 470.464 cv
547.051 468.464 547.663 466.396 548.375 464.543 cv
550.993 457.751 555.272 452.414 559.41 447.252 cv
565.35 439.845 570.959 432.848 571.885 421.986 cv
573.521 402.795 575.263 386.668 581.419 368.453 cv
582.124 366.339 582.95 364.196 583.825 361.928 cv
586.1 356.031 588.45 349.933 588.714 344.072 cv
588.914 339.594 586.72 333.837 582.192 326.962 cv
578.624 321.541 573.757 318.979 568.604 316.269 cv
566.839 315.339 565.014 314.379 563.217 313.287 cv
561.006 311.943 558.794 310.563 556.574 309.178 cv
548.253 303.987 539.649 298.62 530.823 295.051 cv
525.495 292.896 519.897 291.054 514.484 289.272 cv
506.748 286.727 498.749 284.094 491.171 280.454 cv
488.43 279.139 485.731 277.737 483.121 276.383 cv
479.116 274.304 474.976 272.155 470.667 270.312 cv
469.855 269.964 468.365 269.145 466.302 268.011 cv
459.354 264.19 445.879 256.781 438.02 256.781 cv
cp
531.631 487.615 mo
526.526 487.615 522.47 485.589 521.427 484.865 cv
514.911 483.136 510.179 477.572 504.195 470.538 cv
503.001 469.135 li
501.868 467.81 500.688 466.45 499.463 465.055 cv
497.276 462.569 495.563 460.092 493.905 457.695 cv
491.582 454.337 489.389 451.164 486.084 448.173 cv
482.085 444.551 477.649 441.476 472.954 438.22 cv
468.104 434.856 463.089 431.379 458.588 427.238 cv
449.618 419.022 441.451 411.66 432.336 404.778 cv
423.08 397.786 420.232 393.248 422.701 381.696 cv
425.391 369.112 430.023 356.122 434.505 343.559 cv
435.179 341.67 435.846 339.801 436.496 337.957 cv
437.145 336.123 437.806 334.317 438.463 332.523 cv
438.987 331.095 439.508 329.672 440.018 328.249 cv
441.756 323.409 442.783 319.313 443.253 315.356 cv
444.033 308.79 443.121 302.811 442.033 296.755 cv
440.746 289.592 438.621 283.074 436.565 276.771 cv
436.054 275.199 li
435.706 274.128 435.033 272.669 434.321 271.124 cv
432.544 267.267 430.529 262.894 431.269 260.196 cv
431.768 258.375 432.854 257.1 434.494 256.405 cv
441.711 253.357 458.022 262.317 466.784 267.135 cv
468.745 268.213 470.294 269.064 471.06 269.392 cv
475.403 271.25 479.561 273.408 483.581 275.495 cv
486.185 276.847 488.877 278.243 491.604 279.552 cv
499.124 283.164 507.092 285.786 514.797 288.322 cv
520.226 290.109 525.839 291.957 531.198 294.123 cv
540.104 297.726 548.746 303.116 557.104 308.33 cv
559.319 309.712 561.529 311.091 563.736 312.432 cv
565.507 313.508 567.318 314.462 569.069 315.383 cv
574.34 318.156 579.317 320.776 583.028 326.411 cv
587.674 333.466 589.923 339.423 589.712 344.117 cv
589.442 350.141 587.062 356.316 584.759 362.288 cv
583.888 364.545 583.065 366.678 582.367 368.771 cv
576.246 386.882 574.512 402.948 572.881 422.071 cv
571.93 433.236 565.962 440.68 560.19 447.878 cv
556.101 452.979 551.87 458.256 549.309 464.902 cv
548.61 466.717 548.03 468.675 547.417 470.748 cv
545.227 478.15 542.96 485.805 535.074 487.296 cv
534.981 486.805 li
535.074 487.296 li
533.891 487.52 532.735 487.615 531.631 487.615 cv
cp
f
455.552 267.443 mo
454.689 267.443 453.934 267.562 453.314 267.825 cv
452.482 268.18 451.951 268.776 451.691 269.65 cv
451.646 269.801 li
451.523 269.899 li
449.946 271.154 450.143 274.048 450.333 276.847 cv
450.417 278.079 450.496 279.243 450.428 280.28 cv
450.063 285.799 451.112 292.436 452.126 298.853 cv
452.349 300.262 452.623 301.688 452.889 303.067 cv
453.633 306.929 454.401 310.922 454.172 315.158 cv
453.979 318.737 453.226 322.294 451.73 326.689 cv
451.385 327.71 451.028 328.732 450.669 329.761 cv
450.056 331.52 449.422 333.338 448.827 335.196 cv
448.201 337.15 447.542 339.167 446.869 341.229 cv
443.501 351.537 439.684 363.221 438.004 373.488 cv
436.494 382.713 439.09 386.824 445.479 392.551 cv
452.43 398.781 458.965 405.267 465.884 412.133 cv
466.412 412.657 li
469.636 415.878 473.177 418.733 476.601 421.494 cv
480.788 424.871 484.743 428.061 488.079 431.805 cv
490.849 434.913 492.198 438.197 493.504 441.374 cv
494.68 444.232 495.895 447.189 498.155 449.992 cv
499.273 451.383 500.405 452.726 501.519 453.981 cv
508.411 461.759 514.371 464.967 520.853 464.389 cv
521.661 464.085 522.8 463.894 524.23 463.653 cv
526.654 463.246 529.973 462.688 533.584 461.213 cv
533.584 461.213 li
538.954 459.021 540.822 453.062 542.629 447.299 cv
543.073 445.885 543.492 444.548 543.964 443.255 cv
545.821 438.176 548.578 433.96 551.245 429.883 cv
555.487 423.396 559.493 417.27 559.83 408.176 cv
560.482 390.562 563.646 378.864 569.257 363.441 cv
569.976 361.484 li
572.144 355.604 574.601 348.938 574.596 342.604 cv
574.593 338.721 572.821 333.8 569.33 327.978 cv
566.47 323.206 562.54 320.517 558.38 317.668 cv
557.146 316.822 555.868 315.948 554.607 315.01 cv
553.133 313.91 li
545.138 307.944 536.87 301.775 528.358 298.027 cv
524.105 296.154 519.609 294.507 515.263 292.914 cv
509.503 290.804 503.548 288.622 497.841 285.822 cv
495.868 284.855 493.911 283.841 492.019 282.859 cv
488.751 281.165 485.372 279.413 481.879 277.895 cv
481.076 277.545 479.758 276.865 478.089 276.004 cv
472.452 273.096 461.493 267.443 455.552 267.443 cv
cp
519.363 465.456 mo
513.148 465.456 507.343 462.061 500.771 454.646 cv
499.646 453.377 498.504 452.022 497.377 450.619 cv
495.025 447.704 493.782 444.679 492.579 441.754 cv
491.247 438.513 489.988 435.451 487.333 432.471 cv
484.051 428.787 480.127 425.623 475.973 422.272 cv
472.528 419.495 468.967 416.623 465.706 413.365 cv
465.18 412.843 li
458.27 405.985 451.743 399.509 444.811 393.295 cv
438.275 387.437 435.441 382.954 437.018 373.326 cv
438.709 362.983 442.539 351.261 445.918 340.918 cv
446.591 338.858 447.249 336.844 447.874 334.892 cv
448.474 333.021 449.109 331.196 449.725 329.432 cv
450.083 328.405 450.438 327.387 450.783 326.368 cv
452.248 322.062 452.985 318.588 453.174 315.104 cv
453.396 310.99 452.64 307.059 451.907 303.257 cv
451.64 301.869 451.363 300.435 451.138 299.009 cv
450.115 292.537 449.059 285.845 449.43 280.214 cv
449.494 279.244 449.417 278.112 449.335 276.914 cv
449.132 273.922 448.922 270.829 450.779 269.217 cv
451.143 268.134 451.862 267.356 452.922 266.905 cv
458.244 264.641 471.451 271.455 478.548 275.115 cv
480.2 275.968 481.505 276.641 482.277 276.978 cv
485.802 278.51 489.196 280.27 492.479 281.972 cv
494.366 282.95 496.318 283.963 498.28 284.924 cv
503.941 287.701 509.872 289.874 515.606 291.976 cv
519.969 293.573 524.479 295.227 528.761 297.111 cv
537.377 300.906 545.691 307.109 553.731 313.108 cv
555.205 314.207 li
556.449 315.135 557.718 316.003 558.945 316.843 cv
563.198 319.755 567.215 322.505 570.188 327.464 cv
573.772 333.443 575.593 338.537 575.596 342.604 cv
575.601 349.116 573.11 355.871 570.913 361.83 cv
570.196 363.783 li
564.621 379.11 561.478 390.73 560.83 408.213 cv
560.482 417.584 556.402 423.823 552.082 430.43 cv
549.446 434.46 546.721 438.627 544.903 443.598 cv
544.439 444.869 544.023 446.195 543.584 447.599 cv
541.708 453.582 539.768 459.769 533.963 462.139 cv
530.248 463.655 526.866 464.224 524.396 464.639 cv
522.982 464.877 521.865 465.064 521.149 465.346 cv
521.014 465.378 li
520.46 465.43 519.91 465.456 519.363 465.456 cv
cp
f
473.651 278.198 mo
472.52 278.198 471.608 278.447 471.029 279.037 cv
470.918 279.15 li
470.761 279.179 li
467.496 279.762 465.677 282.654 463.75 285.716 cv
461.368 289.502 460.452 295.12 461.235 301.131 cv
461.487 303.066 462.032 305.007 462.56 306.884 cv
463.273 309.425 464.012 312.053 464.096 314.832 cv
464.213 318.757 463.355 322.067 462.502 324.788 cv
462.257 325.568 462.003 326.351 461.745 327.14 cv
461.227 328.729 460.691 330.373 460.216 332.097 cv
459.659 334.115 459.035 336.267 458.388 338.501 cv
455.876 347.166 453.029 356.986 452.328 365.057 cv
451.71 372.175 454.052 376.488 458.03 381.141 cv
462.34 386.18 467.275 391.797 473.563 398.819 cv
475.582 401.089 477.719 403.235 479.785 405.313 cv
483.393 408.938 486.801 412.361 489.406 416.192 cv
491.707 419.575 492.286 422.978 492.847 426.269 cv
493.405 429.55 493.933 432.649 496.097 435.592 cv
497.135 437.007 498.204 438.313 499.276 439.477 cv
505.596 446.339 512.602 448.162 520.091 444.896 cv
523.236 442.838 527.536 439.943 532.254 436.157 cv
532.253 436.157 li
535.904 433.227 537.564 428.095 539.029 423.567 cv
539.204 423.027 539.376 422.494 539.55 421.972 cv
540.553 418.959 541.764 416.226 542.936 413.582 cv
545.551 407.682 548.021 402.107 547.776 394.377 cv
547.368 381.487 550.348 374.457 554.473 364.727 cv
555.305 362.764 556.186 360.687 557.097 358.425 cv
559.703 351.952 560.81 346.3 560.48 341.145 cv
560.267 337.794 558.915 333.703 556.465 328.985 cv
554.191 324.61 551.028 321.571 547.681 318.353 cv
547.119 317.813 546.554 317.27 545.987 316.715 cv
540.507 311.348 533.269 304.712 525.884 300.998 cv
522.622 299.359 519.291 297.906 515.764 296.369 cv
512.066 294.757 508.243 293.09 504.508 291.188 cv
503.441 290.646 502.385 290.096 501.33 289.548 cv
498.665 288.162 495.91 286.729 493.09 285.476 cv
492.341 285.143 491.354 284.664 490.208 284.108 cv
485.666 281.906 478.017 278.198 473.651 278.198 cv
cp
512.974 447.474 mo
507.85 447.474 503.025 445.024 498.54 440.154 cv
497.443 438.964 496.351 437.628 495.291 436.184 cv
492.986 433.051 492.414 429.688 491.86 426.437 cv
491.318 423.251 490.758 419.958 488.58 416.755 cv
486.026 413 482.65 409.608 479.076 406.018 cv
477 403.932 474.854 401.774 472.817 399.485 cv
466.525 392.458 461.585 386.835 457.271 381.791 cv
453.123 376.941 450.684 372.436 451.332 364.971 cv
452.042 356.803 454.902 346.932 457.427 338.223 cv
458.073 335.993 458.696 333.845 459.251 331.831 cv
459.733 330.085 460.272 328.43 460.794 326.83 cv
461.051 326.044 461.304 325.267 461.547 324.489 cv
462.377 321.848 463.209 318.639 463.096 314.861 cv
463.017 312.206 462.295 309.638 461.597 307.154 cv
461.061 305.243 460.505 303.268 460.243 301.26 cv
459.431 295.022 460.4 289.163 462.904 285.183 cv
464.923 281.974 466.832 278.94 470.434 278.223 cv
473.877 275.077 484.354 280.159 490.645 283.209 cv
491.778 283.759 492.755 284.232 493.496 284.562 cv
496.345 285.828 499.113 287.268 501.791 288.66 cv
502.843 289.207 503.897 289.756 504.961 290.297 cv
508.671 292.186 512.479 293.846 516.163 295.452 cv
519.703 296.995 523.047 298.453 526.333 300.105 cv
533.841 303.88 541.154 310.583 546.687 316 cv
547.251 316.553 547.814 317.094 548.374 317.632 cv
551.782 320.908 555.003 324.003 557.352 328.524 cv
559.867 333.366 561.256 337.591 561.479 341.08 cv
561.817 346.389 560.688 352.184 558.024 358.798 cv
557.11 361.066 556.228 363.148 555.394 365.116 cv
551.318 374.729 548.374 381.675 548.776 394.346 cv
549.028 402.305 546.513 407.979 543.85 413.987 cv
542.688 416.609 541.486 419.32 540.499 422.287 cv
540.326 422.807 540.154 423.338 539.98 423.875 cv
538.473 428.536 536.764 433.818 532.88 436.937 cv
532.88 436.937 li
528.128 440.751 523.802 443.663 520.564 445.773 cv
517.968 446.908 515.437 447.474 512.974 447.474 cv
cp
f
306.887 -74.2593 mo
299.731 -74.2593 292.708 -72.958 287.327 -70.7046 cv
281.456 -68.2456 275.117 -61.6499 269.525 -55.8311 cv
267.054 -53.2598 264.72 -50.8315 262.547 -48.8662 cv
256.085 -43.021 253.263 -34.0786 250.534 -25.4302 cv
249.785 -23.0547 249.01 -20.5981 248.173 -18.2583 cv
244.81 -8.84473 243.547 .678223 242.211 10.7598 cv
242.009 12.2817 li
241.345 17.2705 239.956 22.3564 238.612 27.2754 cv
236.908 33.5142 235.146 39.9653 234.857 46.2554 cv
234.391 56.4209 239.415 66.0396 244.273 75.3413 cv
247.163 80.8745 250.152 86.5962 251.907 92.3247 cv
256.356 106.841 265.145 123.146 274.843 134.875 cv
275.403 135.552 275.953 136.275 276.507 137.004 cv
279.411 140.827 282.155 144.437 286.958 142.813 cv
293.909 140.461 292.785 134.631 291.793 129.487 cv
291.604 128.509 291.427 127.585 291.309 126.711 cv
289.773 115.284 292.358 102.987 298.99 90.1636 cv
301.922 84.4941 304.41 78.7007 306.815 73.0981 cv
309.933 65.8394 313.156 58.3335 317.346 51.1206 cv
327.718 33.2651 332.67 8.30518 329.962 -12.4683 cv
328.985 -19.9644 331.874 -26.9341 334.668 -33.6753 cv
336.121 -37.1802 337.623 -40.8047 338.547 -44.4365 cv
339.033 -46.3496 339.335 -48.2148 339.445 -49.981 cv
339.445 -49.9805 li
339.91 -57.459 337.058 -63.4463 330.968 -67.7764 cv
324.59 -72.3115 315.64 -74.2593 306.887 -74.2593 cv
cp
284.711 144.209 mo
280.724 144.209 278.085 140.735 275.71 137.609 cv
275.165 136.891 274.624 136.179 274.073 135.512 cv
264.147 123.509 255.504 107.474 250.951 92.6177 cv
249.223 86.9775 246.256 81.2974 243.387 75.8042 cv
238.467 66.3848 233.379 56.6445 233.858 46.2095 cv
234.152 39.8086 235.929 33.3032 237.647 27.0117 cv
238.982 22.125 240.362 17.0718 241.018 12.1499 cv
241.219 10.6284 li
242.563 .492676 243.832 -9.08105 247.232 -18.5952 cv
248.062 -20.917 248.834 -23.3643 249.581 -25.7314 cv
252.35 -34.5063 255.213 -43.5806 261.876 -49.6074 cv
264.023 -51.5498 266.346 -53.9658 268.804 -56.5239 cv
274.464 -62.4131 280.878 -69.0879 286.94 -71.6265 cv
299.148 -76.7407 319.675 -77.0332 331.547 -68.5913 cv
337.848 -64.1118 340.924 -57.6548 340.443 -49.9189 cv
340.443 -49.9185 li
340.33 -48.0908 340.018 -46.1636 339.516 -44.1904 cv
338.574 -40.4883 337.058 -36.8301 335.592 -33.292 cv
332.849 -26.6729 330.012 -19.8281 330.954 -12.5972 cv
333.688 8.38086 328.687 33.5889 318.211 51.6226 cv
314.051 58.7832 310.84 66.2612 307.734 73.4927 cv
305.321 79.1113 302.827 84.9219 299.879 90.6226 cv
293.342 103.261 290.792 115.358 292.3 126.578 cv
292.414 127.423 292.589 128.334 292.775 129.298 cv
293.792 134.569 295.056 141.129 287.279 143.76 cv
286.363 144.069 285.51 144.209 284.711 144.209 cv
cp
f
304.323 -64.9326 mo
297.381 -64.9326 290.5 -63.4131 285.341 -60.8848 cv
279.795 -58.166 274.007 -51.6191 268.9 -45.8433 cv
267.074 -43.7773 265.349 -41.8262 263.722 -40.1426 cv
258.176 -34.4058 255.661 -26.0908 253.229 -18.0498 cv
252.61 -16.0063 251.971 -13.8936 251.295 -11.8701 cv
248.422 -3.24121 247.207 5.7334 246.032 14.4121 cv
245.806 16.0811 li
245.206 20.4863 244.052 24.9673 242.936 29.3003 cv
241.473 34.9839 239.96 40.8604 239.698 46.5854 cv
239.268 55.9526 243.594 64.8721 247.778 73.498 cv
250.089 78.2627 252.478 83.1895 254.023 88.1182 cv
258.079 101.052 265.627 114.729 273.723 123.811 cv
274.194 124.339 274.658 124.901 275.125 125.468 cv
277.637 128.517 280.011 131.398 284.065 130.006 cv
290.201 127.881 289.45 122.505 288.788 117.762 cv
288.669 116.915 288.555 116.092 288.482 115.318 cv
288.114 111.362 288.167 107.508 288.642 103.863 cv
289.57 96.8286 291.951 89.4229 295.717 81.8506 cv
298.212 76.8359 300.406 71.7241 302.527 66.7808 cv
305.472 59.9185 308.517 52.8223 312.364 46.0332 cv
321.437 30.1201 326.221 8.1582 324.554 -9.91748 cv
323.989 -15.8574 325.835 -21.3599 328.119 -27.4229 cv
328.416 -28.2134 li
329.648 -31.4844 330.922 -34.8672 331.657 -38.2437 cv
332.035 -39.9604 332.251 -41.6045 332.297 -43.1304 cv
332.514 -50.2998 329.469 -56.126 323.492 -59.9795 cv
318.115 -63.4458 311.189 -64.9326 304.323 -64.9326 cv
cp
282.057 131.366 mo
278.688 131.366 276.408 128.598 274.353 126.104 cv
273.894 125.547 273.439 124.995 272.977 124.476 cv
264.792 115.295 257.165 101.479 253.069 88.417 cv
251.546 83.5596 249.173 78.6665 246.878 73.9346 cv
242.64 65.1963 238.258 56.1602 238.699 46.5396 cv
238.966 40.7114 240.492 34.7837 241.968 29.0513 cv
243.076 24.7456 244.223 20.2935 244.814 15.9463 cv
245.041 14.2783 li
246.222 5.55322 247.444 -3.46826 250.346 -12.1865 cv
251.018 -14.1968 251.655 -16.3027 252.271 -18.3394 cv
254.738 -26.4941 257.289 -34.9268 263.003 -40.8379 cv
264.614 -42.5049 266.332 -44.4482 268.151 -46.5054 cv
273.319 -52.3511 279.177 -58.9766 284.901 -61.7822 cv
295.412 -66.9346 312.924 -67.9829 324.034 -60.8198 cv
330.321 -56.7666 333.524 -50.6392 333.297 -43.1001 cv
333.248 -41.5117 333.025 -39.8062 332.634 -38.0298 cv
331.884 -34.583 330.597 -31.1655 329.353 -27.8608 cv
329.055 -27.0708 li
326.815 -21.1255 325.005 -15.7388 325.55 -10.0107 cv
327.234 8.25684 322.399 30.4492 313.233 46.5273 cv
309.414 53.2676 306.38 60.3374 303.446 67.1748 cv
301.319 72.1313 299.121 77.2559 296.612 82.2959 cv
292.896 89.769 290.547 97.0688 289.633 103.993 cv
289.168 107.563 289.116 111.343 289.479 115.225 cv
289.549 115.985 289.662 116.792 289.778 117.624 cv
290.458 122.495 291.305 128.558 284.391 130.952 cv
284.39 130.952 li
283.557 131.238 282.781 131.366 282.057 131.366 cv
cp
f
301.248 -55.6313 mo
295.025 -55.6313 288.58 -54.0952 283.36 -51.0688 cv
278.015 -47.9707 272.718 -41.27 268.045 -35.3584 cv
266.953 -33.9771 265.901 -32.647 264.899 -31.4268 cv
260.248 -25.7656 258.035 -18.0229 255.895 -10.5356 cv
255.409 -8.83496 254.925 -7.14355 254.417 -5.48486 cv
252.041 2.3252 250.936 10.2827 249.867 17.978 cv
249.602 19.8813 li
249.071 23.6729 248.156 27.52 247.271 31.2407 cv
246.043 36.3965 244.775 41.7271 244.538 46.915 cv
244.141 55.5981 247.811 63.9316 251.361 71.9907 cv
253.073 75.8774 254.843 79.8965 256.139 83.9097 cv
259.821 95.3159 265.973 106.094 272.596 112.74 cv
272.973 113.119 273.346 113.52 273.721 113.923 cv
275.848 116.211 277.858 118.37 281.17 117.201 cv
281.17 117.201 li
286.524 115.306 286.153 110.551 285.794 105.952 cv
285.74 105.256 285.687 104.575 285.657 103.922 cv
285.476 100.004 285.606 96.5107 286.046 93.5376 cv
287.005 87.1992 289.157 80.4712 292.443 73.5386 cv
294.452 69.3052 296.292 64.9995 298.071 60.835 cv
300.889 54.2402 303.804 47.4209 307.382 40.9463 cv
315.345 26.5396 319.853 8.02539 319.146 -7.37158 cv
318.897 -12.7646 320.629 -17.9824 322.156 -22.5859 cv
323.167 -25.6558 324.212 -28.8311 324.767 -32.0454 cv
325.036 -33.6021 325.161 -34.9858 325.149 -36.2764 cv
325.086 -43.2671 321.918 -48.749 315.988 -52.1299 cv
311.876 -54.4746 306.646 -55.6313 301.248 -55.6313 cv
cp
279.379 118.532 mo
276.64 118.532 274.721 116.468 272.989 114.604 cv
272.622 114.209 272.257 113.817 271.888 113.446 cv
265.159 106.693 258.916 95.7666 255.188 84.2173 cv
253.908 80.2524 252.148 76.2573 250.446 72.394 cv
246.85 64.2295 243.131 55.7866 243.539 46.8691 cv
243.78 41.5874 245.06 36.21 246.297 31.0093 cv
247.177 27.3115 248.087 23.4873 248.612 19.7427 cv
248.876 17.8408 li
249.951 10.1069 251.061 2.10986 253.46 -5.77686 cv
253.967 -7.43066 254.449 -9.11621 254.934 -10.8105 cv
257.102 -18.396 259.344 -26.2402 264.126 -32.0615 cv
265.125 -33.2769 266.173 -34.6025 267.261 -35.9785 cv
271.989 -41.9604 277.348 -48.7402 282.858 -51.9341 cv
292.892 -57.752 307.347 -58.2075 316.483 -52.9985 cv
322.74 -49.4316 326.082 -43.6523 326.149 -36.2852 cv
326.162 -34.9341 326.032 -33.4917 325.753 -31.875 cv
325.186 -28.5884 324.128 -25.3774 323.105 -22.2725 cv
321.532 -17.5293 319.905 -12.6255 320.144 -7.41748 cv
320.859 8.15332 316.305 26.8706 308.257 41.4297 cv
304.703 47.8604 301.799 54.6563 298.991 61.228 cv
297.208 65.4014 295.364 69.7163 293.346 73.9673 cv
290.103 80.811 287.979 87.4453 287.035 93.6855 cv
286.605 96.5933 286.478 100.022 286.656 103.876 cv
286.686 104.518 286.738 105.189 286.792 105.875 cv
287.143 110.382 287.581 115.993 281.504 118.144 cv
281.504 118.144 li
280.743 118.413 280.037 118.532 279.379 118.532 cv
cp
f
298.069 -46.4272 mo
292.299 -46.4272 286.262 -44.6533 281.382 -41.2588 cv
275.953 -37.4834 270.832 -29.8257 266.716 -23.6724 cv
266.079 -22.7192 li
262.278 -17.0469 260.358 -9.75781 258.5 -2.70898 cv
258.182 -1.49756 257.864 -.29248 257.539 .897949 cv
255.67 7.81348 254.685 14.6973 253.732 21.3545 cv
253.398 23.6816 li
252.947 26.79 252.277 29.9351 251.629 32.9771 cv
250.628 37.6719 249.593 42.5269 249.378 47.2451 cv
248.999 55.5493 252.134 63.5991 255.166 71.3838 cv
256.224 74.0991 257.317 76.9063 258.254 79.7002 cv
261.495 89.3574 266.306 97.3613 271.454 101.659 cv
271.723 101.883 271.989 102.118 272.257 102.353 cv
274.012 103.896 275.668 105.354 278.274 104.396 cv
278.274 104.396 li
282.894 102.7 282.864 98.2603 282.834 93.9663 cv
282.831 93.4766 282.828 92.9937 282.832 92.5215 cv
282.859 89.3872 282.952 86.0894 283.451 83.209 cv
284.433 77.5366 286.303 71.6553 289.168 65.229 cv
290.583 62.0605 291.948 58.8452 293.268 55.7354 cv
296.074 49.124 298.976 42.2876 302.398 35.8613 cv
309.263 22.9751 313.502 7.76172 313.738 -4.83447 cv
313.816 -9.02441 314.917 -13.0601 315.981 -16.9629 cv
316.193 -17.7422 li
316.845 -20.1748 317.566 -23.0083 317.877 -25.8389 cv
318.024 -27.1787 318.065 -28.3491 318.003 -29.417 cv
317.494 -38.0503 312.552 -42.2114 308.494 -44.1816 cv
305.385 -45.6924 301.782 -46.4272 298.069 -46.4272 cv
cp
276.664 105.705 mo
274.555 105.705 273.003 104.34 271.597 103.104 cv
271.335 102.874 271.075 102.646 270.813 102.427 cv
265.527 98.0137 260.604 89.8462 257.306 80.0186 cv
256.376 77.2471 255.287 74.4512 254.234 71.7471 cv
251.165 63.8652 247.99 55.7153 248.379 47.1992 cv
248.598 42.3989 249.642 37.5029 250.651 32.7686 cv
251.295 29.7427 251.962 26.6138 252.409 23.5381 cv
252.743 21.2129 li
253.7 14.5264 254.689 7.61182 256.574 .635742 cv
256.898 -.553223 257.215 -1.75537 257.534 -2.96387 cv
259.412 -10.0923 261.354 -17.4639 265.248 -23.2759 cv
265.885 -24.2285 li
270.047 -30.4517 275.227 -38.1963 280.811 -42.0801 cv
289.114 -47.8555 300.676 -49.0908 308.932 -45.0811 cv
315.006 -42.1309 318.582 -36.5889 319.001 -29.4756 cv
319.067 -28.3516 319.025 -27.126 318.871 -25.7295 cv
318.553 -22.8291 317.82 -19.9517 317.159 -17.4819 cv
316.946 -16.6997 li
315.897 -12.856 314.813 -8.88135 314.738 -4.81592 cv
314.499 7.93066 310.216 23.313 303.281 36.3311 cv
299.879 42.7192 297.115 49.2314 294.188 56.126 cv
292.867 59.2402 291.5 62.46 290.081 65.6367 cv
287.25 71.9858 285.404 77.7896 284.437 83.3799 cv
283.95 86.1895 283.858 89.438 283.832 92.5303 cv
283.828 92.9971 283.831 93.4751 283.834 93.9595 cv
283.864 98.3828 283.898 103.396 278.619 105.335 cv
278.619 105.335 li
277.915 105.593 277.267 105.705 276.664 105.705 cv
cp
f
294.615 -37.2271 mo
289.375 -37.2271 283.8 -35.1963 279.408 -31.4565 cv
274.266 -27.0796 270.012 -19.4111 267.259 -14.0234 cv
264.193 -8.02441 262.534 -.833984 260.929 6.11963 cv
260.662 7.27637 li
259.323 13.1191 258.483 18.7993 257.67 24.293 cv
257.51 25.373 257.353 26.4375 257.194 27.4829 cv
256.862 29.6777 256.459 31.8936 256.07 34.0361 cv
255.259 38.4946 254.421 43.1045 254.218 47.5747 cv
253.792 56.9453 256.917 65.7544 260.224 75.0811 cv
260.369 75.4888 li
263.179 83.415 266.419 88.3447 270.274 90.5596 cv
270.59 90.7422 li
272.025 91.5771 273.382 92.3672 275.375 91.5923 cv
275.375 91.5928 li
279.369 90.0405 279.679 85.7188 279.979 81.5391 cv
280.099 79.8433 li
280.274 77.3228 280.44 74.9424 280.857 72.8789 cv
281.893 67.8569 283.539 62.6382 285.892 56.9224 cv
286.33 55.8599 li
289.794 47.4575 293.376 38.769 297.415 30.7793 cv
301.649 22.4004 306.98 9.85791 308.334 -2.31152 cv
308.617 -4.85547 309.128 -7.37305 309.621 -9.80713 cv
309.83 -10.8374 310.038 -11.8628 310.229 -12.8853 cv
310.71 -15.5249 310.951 -17.6646 310.988 -19.6167 cv
311.01 -20.7227 310.967 -21.6821 310.859 -22.5503 cv
310.039 -29.1353 306.571 -33.9351 301.094 -36.0649 cv
299.079 -36.8481 296.878 -37.2271 294.615 -37.2271 cv
cp
273.794 92.9106 mo
272.328 92.9106 271.157 92.229 270.087 91.6064 cv
269.776 91.4268 li
265.706 89.0879 262.32 83.9839 259.426 75.8228 cv
259.282 75.415 li
255.94 65.9941 252.784 57.0952 253.219 47.5288 cv
253.426 42.9922 254.27 38.3481 255.086 33.8574 cv
255.474 31.7217 255.875 29.5132 256.206 27.3335 cv
256.364 26.2886 256.521 25.2256 256.681 24.1465 cv
257.497 18.6343 258.339 12.9341 259.687 7.05176 cv
259.955 5.89453 li
261.573 -1.11816 263.247 -8.36963 266.368 -14.4785 cv
269.16 -19.9424 273.482 -27.7256 278.759 -32.2183 cv
285.319 -37.8042 294.441 -39.7251 301.456 -36.9966 cv
307.292 -34.7275 310.984 -29.6411 311.852 -22.6738 cv
311.966 -21.7573 312.01 -20.7515 311.988 -19.5981 cv
311.95 -17.5903 311.703 -15.3999 311.212 -12.7041 cv
311.021 -11.6748 310.812 -10.6436 310.602 -9.6084 cv
310.112 -7.1958 309.605 -4.70068 309.328 -2.20117 cv
307.958 10.1167 302.579 22.7778 298.307 31.2305 cv
294.286 39.1855 290.711 47.856 287.255 56.2407 cv
286.817 57.3032 li
284.488 62.9604 282.859 68.1211 281.837 73.0791 cv
281.433 75.0767 281.27 77.4258 281.097 79.9126 cv
280.976 81.6108 li
280.669 85.8916 280.321 90.7437 275.737 92.5244 cv
275.737 92.5249 li
275.032 92.7983 274.389 92.9106 273.794 92.9106 cv
cp
f
324.186 -124.432 mo
308.431 -124.432 292.915 -116.809 284.711 -112.008 cv
259.966 -97.5288 254.975 -75.5957 251.377 -50.522 cv
248.076 -27.5127 240.567 -10.1133 231.093 10.2412 cv
217.404 39.6558 213.5 61.1201 234.052 83.7871 cv
242.156 92.7256 247.516 102.988 252.698 112.912 cv
254.823 116.981 257.021 121.188 259.393 125.288 cv
260.832 127.774 262.254 130.643 263.76 133.681 cv
268.512 143.265 273.897 154.129 282.389 158.263 cv
287.315 160.661 291.279 160.993 294.173 159.25 cv
300.561 155.4 301.002 142.128 301.293 133.345 cv
301.364 131.221 301.425 129.386 301.554 127.892 cv
302.643 115.246 311.74 98.7964 318.489 87.5234 cv
326.449 74.229 329.846 60.0815 333.441 45.1035 cv
334.745 39.6699 336.094 34.0513 337.682 28.4487 cv
339.855 20.7778 340.986 12.6748 342.079 4.83838 cv
342.404 2.51807 li
342.727 .235352 343.41 -2.00977 344.071 -4.18066 cv
344.865 -6.78467 345.614 -9.24414 345.791 -11.7568 cv
345.975 -14.3628 345.461 -17.0146 344.964 -19.5791 cv
344.482 -22.0601 343.985 -24.6255 344.089 -27.2163 cv
344.44 -35.9868 347.184 -45.3296 349.837 -54.3647 cv
351.65 -60.5391 353.525 -66.9238 354.567 -72.9521 cv
354.688 -73.6436 355.094 -75.2739 355.657 -77.5308 cv
357.063 -83.166 360.747 -97.9429 359.538 -99.8789 cv
357.967 -100.186 357.88 -101.323 357.779 -102.633 cv
357.645 -104.383 357.442 -107.029 354.295 -110.73 cv
345.611 -120.942 334.844 -124.432 324.186 -124.432 cv
cp
289.971 161.349 mo
287.626 161.349 284.946 160.62 281.952 159.162 cv
273.153 154.879 267.687 143.853 262.864 134.125 cv
261.365 131.102 259.95 128.247 258.527 125.789 cv
256.144 121.671 253.942 117.453 251.812 113.375 cv
246.421 103.052 241.33 93.3022 233.311 84.459 cv
212.386 61.3804 216.32 39.6152 230.187 9.81934 cv
239.625 -10.4595 247.105 -27.79 250.387 -50.6636 cv
254.022 -75.999 259.077 -98.1665 284.207 -112.872 cv
293.062 -118.053 306.626 -124.407 320.964 -125.254 cv
335.039 -126.088 346.519 -121.418 355.057 -111.378 cv
358.414 -107.43 358.641 -104.475 358.776 -102.709 cv
358.887 -101.275 358.942 -100.967 359.875 -100.836 cv
360.037 -100.813 li
360.154 -100.698 li
361.708 -99.1787 360.037 -90.9644 356.627 -77.2886 cv
356.091 -75.1367 355.667 -73.437 355.553 -72.7813 cv
354.501 -66.6968 352.618 -60.2842 350.797 -54.083 cv
348.16 -45.106 345.435 -35.8237 345.089 -27.1763 cv
344.989 -24.7017 345.476 -22.1943 345.945 -19.7695 cv
346.455 -17.1416 346.981 -14.4238 346.789 -11.6865 cv
346.604 -9.06055 345.803 -6.43164 345.028 -3.88916 cv
344.378 -1.75488 343.705 .452148 343.395 2.65771 cv
343.07 4.97705 li
341.972 12.8467 340.836 20.9844 338.645 28.7212 cv
337.062 34.3047 335.716 39.9131 334.413 45.3369 cv
330.8 60.3916 327.386 74.6113 319.347 88.0371 cv
312.649 99.2251 303.621 115.538 302.55 127.978 cv
302.424 129.446 302.363 131.268 302.293 133.378 cv
301.994 142.377 301.543 155.977 294.689 160.106 cv
293.313 160.935 291.737 161.349 289.971 161.349 cv
cp
f
322.703 -119.403 mo
308.319 -119.403 294.035 -112.545 285.689 -107.662 cv
262.537 -94.1138 257.986 -74.1455 254.443 -49.4492 cv
252.873 -38.5098 250.004 -27.4233 245.673 -15.5566 cv
244.494 -12.3257 243.148 -9.05078 241.846 -5.88379 cv
239.852 -1.0332 237.791 3.98291 236.293 8.93066 cv
235.792 10.5854 235.567 12.3623 235.35 14.0811 cv
235.127 15.8418 234.897 17.6626 234.371 19.4082 cv
233.68 21.7051 233.28 24.1313 232.893 26.478 cv
232.458 29.1084 232.01 31.8286 231.148 34.4194 cv
230.872 35.2485 li
229.19 40.2842 228.346 42.812 229.171 48.6162 cv
230.947 61.1074 234.264 72.1138 239.031 81.3291 cv
241.567 86.2319 244.522 91.0942 247.381 95.7964 cv
250.129 100.317 252.971 104.992 255.401 109.646 cv
257.468 113.607 259.606 117.703 261.93 121.719 cv
263.403 124.266 264.827 127.138 266.335 130.179 cv
266.804 131.125 267.268 132.102 267.739 133.093 cv
270.647 139.212 273.943 146.148 280.293 149.114 cv
284.08 150.882 287.304 151.086 289.876 149.721 cv
294.236 147.407 296.104 140.948 296.903 135.937 cv
297.479 132.325 297.778 128.611 298.066 125.019 cv
298.349 121.5 298.641 117.861 299.194 114.303 cv
300.154 108.132 302.468 103.245 304.917 98.0708 cv
305.563 96.7051 306.221 95.3169 306.866 93.877 cv
308.729 89.7212 310.407 85.5527 312.029 81.522 cv
313.954 76.7393 315.944 71.7939 318.274 66.791 cv
319.403 64.3652 320.693 61.937 321.939 59.5884 cv
324.656 54.4712 327.466 49.1797 328.813 43.5645 cv
330.106 38.1768 331.444 32.606 333.027 27.0195 cv
335.105 19.6855 336.203 11.8213 337.266 4.21582 cv
337.59 1.90039 li
337.943 -.608887 338.655 -2.94824 339.345 -5.20996 cv
340.07 -7.59082 340.756 -9.83984 340.903 -11.9414 cv
341.054 -14.0703 340.611 -16.355 340.144 -18.7739 cv
339.631 -21.4136 339.104 -24.1294 339.22 -27.0806 cv
339.583 -36.1372 342.347 -45.5474 345.02 -54.6475 cv
346.86 -60.9199 348.6 -66.8438 349.597 -72.5977 cv
349.728 -73.3599 350.071 -74.752 350.72 -77.3521 cv
351.651 -81.085 354.445 -92.2891 354.657 -96.438 cv
352.967 -97.8389 352.803 -99.9834 352.722 -101.036 cv
352.611 -102.486 352.474 -104.292 350.07 -107.119 cv
346.005 -111.899 341.127 -115.322 335.572 -117.293 cv
331.381 -118.78 327.036 -119.403 322.703 -119.403 cv
cp
286.157 151.614 mo
284.247 151.614 282.146 151.083 279.871 150.02 cv
273.194 146.902 269.816 139.794 266.836 133.522 cv
266.367 132.536 265.906 131.564 265.439 130.624 cv
263.939 127.597 262.521 124.739 261.064 122.22 cv
258.729 118.185 256.587 114.08 254.515 110.109 cv
252.1 105.483 249.267 100.823 246.527 96.3159 cv
243.659 91.5991 240.694 86.7222 238.143 81.7881 cv
233.324 72.4731 229.973 61.3599 228.181 48.7568 cv
227.323 42.7192 228.246 39.9531 229.923 34.9316 cv
230.199 34.104 li
231.036 31.5879 231.479 28.9077 231.906 26.3154 cv
232.298 23.9375 232.704 21.4785 233.414 19.1201 cv
233.915 17.4546 234.14 15.6758 234.358 13.9556 cv
234.581 12.1958 234.811 10.376 235.336 8.64063 cv
236.847 3.64697 238.918 -1.39111 240.921 -6.26367 cv
242.219 -9.42188 243.562 -12.687 244.734 -15.8994 cv
249.041 -27.7007 251.893 -38.7212 253.453 -49.5908 cv
257.035 -74.5581 261.646 -94.751 285.185 -108.525 cv
296.194 -114.967 317.427 -124.794 335.906 -118.236 cv
341.63 -116.205 346.651 -112.683 350.832 -107.766 cv
353.446 -104.692 353.598 -102.707 353.72 -101.112 cv
353.797 -100.093 353.942 -98.1968 355.463 -97.0771 cv
355.674 -96.9224 li
355.667 -96.6611 li
355.559 -92.6226 352.748 -81.353 351.69 -77.1104 cv
351.048 -74.5337 350.707 -73.1558 350.582 -72.4272 cv
349.575 -66.6167 347.828 -60.6665 345.979 -54.3667 cv
343.323 -45.3237 340.577 -35.9736 340.22 -27.0405 cv
340.107 -24.2061 340.623 -21.5483 341.123 -18.9775 cv
341.606 -16.4785 342.061 -14.1313 341.901 -11.8711 cv
341.746 -9.65674 341.044 -7.35498 340.302 -4.91846 cv
339.623 -2.69336 338.922 -.39209 338.58 2.03955 cv
338.256 4.354 li
337.189 11.9927 336.086 19.8916 333.99 27.292 cv
332.411 32.8589 331.077 38.4199 329.786 43.7974 cv
328.408 49.5361 325.569 54.8848 322.823 60.0571 cv
321.582 62.3945 320.299 64.811 319.181 67.2129 cv
316.862 72.1919 314.877 77.125 312.957 81.8955 cv
311.331 85.9351 309.649 90.1128 307.778 94.2861 cv
307.13 95.7324 306.47 97.127 305.82 98.4985 cv
303.403 103.605 301.12 108.429 300.183 114.456 cv
299.635 117.978 299.344 121.598 299.063 125.099 cv
298.773 128.71 298.473 132.444 297.891 136.094 cv
296.676 143.71 294.137 148.592 290.345 150.604 cv
289.076 151.277 287.677 151.614 286.157 151.614 cv
cp
f
303.839 178.578 mo
303.151 178.578 302.346 178.428 301.413 178.127 cv
297.879 176.988 295.543 174.662 293.071 172.199 cv
292.676 171.805 292.277 171.408 291.868 171.01 cv
288.564 167.8 284.958 164.829 281.469 161.956 cv
273.99 155.795 266.256 149.425 261.205 140.402 cv
259.798 137.889 259.058 135.172 258.343 132.544 cv
257.675 130.092 256.984 127.556 255.751 125.201 cv
254.871 123.517 li
250.241 114.642 244.478 103.597 236.869 97.1558 cv
230.702 91.9341 225.277 85.0244 221.18 77.1733 cv
219.376 73.7158 217.162 70.4375 215.02 67.2671 cv
212.32 63.27 209.528 59.1372 207.484 54.5527 cv
205.371 49.8096 205.507 47.5562 208.174 43.0718 cv
209.531 40.7891 210.921 38.5181 212.313 36.2461 cv
216.16 29.9614 220.138 23.4624 223.347 16.7642 cv
224.787 13.7598 226.328 10.7417 227.819 7.82324 cv
230.634 2.31299 233.544 -3.38428 235.878 -9.21289 cv
239.512 -18.2886 241.009 -28.7207 242.457 -38.8096 cv
242.866 -41.6582 243.252 -44.3486 243.686 -47.0254 cv
244.516 -52.1406 244.851 -57.4204 245.175 -62.5259 cv
245.725 -71.1855 246.293 -80.1396 249.292 -88.564 cv
249.546 -89.2778 249.792 -89.9897 250.037 -90.6968 cv
252.239 -97.0645 254.319 -103.079 260.801 -106.799 cv
261.299 -105.932 li
255.142 -102.398 253.121 -96.5557 250.982 -90.3701 cv
250.736 -89.6602 250.489 -88.9453 250.234 -88.229 cv
247.282 -79.9365 246.718 -71.0532 246.173 -62.4629 cv
245.848 -57.333 245.511 -52.0288 244.673 -46.8652 cv
244.241 -44.1973 243.855 -41.5112 243.447 -38.6675 cv
241.99 -28.5205 240.484 -18.0278 236.807 -8.84082 cv
234.456 -2.97021 231.535 2.74805 228.709 8.27832 cv
227.222 11.1909 225.683 14.2031 224.25 17.1958 cv
221.018 23.9409 217.026 30.4619 213.165 36.7681 cv
211.776 39.0366 210.388 41.3037 209.033 43.5825 cv
206.522 47.8057 206.409 49.6812 208.397 54.1455 cv
210.406 58.6499 213.173 62.7461 215.849 66.707 cv
218.006 69.9009 220.236 73.2031 222.067 76.7104 cv
226.104 84.4482 231.446 91.2539 237.516 96.3921 cv
245.273 102.96 251.086 114.102 255.758 123.054 cv
256.637 124.737 li
257.92 127.188 258.625 129.777 259.308 132.282 cv
260.039 134.969 260.73 137.508 262.078 139.914 cv
267.037 148.773 274.697 155.083 282.105 161.184 cv
285.609 164.07 289.232 167.054 292.565 170.293 cv
292.977 170.693 293.378 171.094 293.776 171.49 cv
296.162 173.866 298.415 176.11 301.72 177.175 cv
303.361 177.704 304.507 177.712 305.13 177.198 cv
306.205 176.31 305.983 173.697 305.691 171.317 cv
305.426 169.15 304.912 167.075 304.415 165.068 cv
303.543 161.548 302.642 157.908 303.151 153.87 cv
304.111 146.265 305.393 139.026 306.857 132.935 cv
308.431 126.391 311.851 113.939 317.084 104.063 cv
318.531 101.33 320.154 98.5234 321.724 95.8091 cv
325.096 89.9785 328.582 83.9492 330.89 77.7808 cv
332.874 72.4805 334.198 66.9482 335.479 61.5977 cv
336.347 57.9683 337.244 54.2148 338.344 50.5508 cv
339.278 47.4331 339.618 44.1221 339.947 40.9199 cv
340.382 36.6807 340.832 32.2969 342.674 28.3442 cv
344.932 23.498 345.243 18.897 345.572 14.0254 cv
345.688 12.3228 345.807 10.5615 346.01 8.72363 cv
346.547 3.87109 347.554 -1.18066 348.528 -6.06641 cv
348.873 -7.79736 349.219 -9.53174 349.547 -11.2656 cv
350.777 -17.7759 351.076 -23.6943 351.315 -30.2041 cv
351.427 -33.2329 351.982 -36.314 352.521 -39.2939 cv
352.951 -41.686 353.397 -44.1597 353.614 -46.6016 cv
354.61 -46.5137 li
354.39 -44.0264 353.939 -41.5303 353.504 -39.1162 cv
352.973 -36.1709 352.424 -33.125 352.315 -30.1675 cv
352.074 -23.6162 351.772 -17.6582 350.529 -11.0801 cv
350.201 -9.34277 349.854 -7.60547 349.509 -5.87109 cv
348.539 -1.00635 347.536 4.02393 347.004 8.83398 cv
346.803 10.6504 346.685 12.4004 346.57 14.0928 cv
346.234 19.0601 345.917 23.7515 343.58 28.7666 cv
341.81 32.5664 341.388 36.6738 340.941 41.022 cv
340.608 44.2705 340.264 47.6294 339.301 50.8379 cv
338.211 54.4751 337.315 58.2144 336.45 61.8306 cv
335.163 67.2104 333.832 72.7734 331.827 78.1313 cv
329.489 84.3774 325.981 90.4434 322.59 96.3096 cv
321.024 99.0161 319.406 101.815 317.967 104.531 cv
312.786 114.31 309.392 126.67 307.83 133.168 cv
306.374 139.225 305.099 146.426 304.144 153.995 cv
303.656 157.848 304.496 161.238 305.386 164.828 cv
305.89 166.863 306.411 168.969 306.684 171.195 cv
307.023 173.959 307.232 176.759 305.767 177.969 cv
305.275 178.375 304.637 178.578 303.839 178.578 cv
cp
f
522.871 550.004 mo
513.526 548.398 508.16 533.383 504.609 523.447 cv
503.935 521.557 503.351 519.924 502.81 518.571 cv
494.562 497.968 476.213 485.993 458.468 474.413 cv
449.774 468.739 440.784 462.872 433.144 456.08 cv
431.078 454.244 429.121 452.331 427.229 450.481 cv
423.527 446.863 420.031 443.447 415.87 440.647 cv
413.313 438.926 410.628 437.286 408.031 435.701 cv
403.6 432.995 399.017 430.197 394.909 426.896 cv
394.511 426.576 li
387.868 421.243 381.595 416.206 381.788 407.251 cv
381.935 400.488 384.976 392.533 387.658 385.515 cv
388.402 383.568 389.105 381.73 389.733 379.963 cv
392.203 373.005 394.615 365.845 396.947 358.921 cv
401.584 345.155 406.379 330.92 411.868 317.584 cv
421.725 293.638 408.896 276.055 395.313 257.439 cv
394.55 256.394 li
388.218 247.709 380.432 241.223 372.188 234.354 cv
371.419 233.713 li
367.771 230.673 355.647 219.928 352.81 209.327 cv
352.117 206.737 352.385 204.947 353.606 204.007 cv
356.947 201.438 366.47 206.326 374.394 210.872 cv
374.996 211.217 375.483 211.497 375.823 211.683 cv
390.77 219.836 406.46 227.445 421.635 234.803 cv
435.059 241.313 448.94 248.043 462.306 255.149 cv
477.767 263.369 494.872 268.233 511.415 272.938 cv
523.607 276.405 536.215 279.991 548.128 284.9 cv
552.853 286.847 557.558 288.994 562.107 291.071 cv
570.843 295.06 579.877 299.184 589.328 301.999 cv
593.232 303.162 597.158 304.24 600.955 305.283 cv
615.846 309.371 629.91 313.232 643.104 321.988 cv
642.552 322.822 li
629.49 314.154 615.501 310.313 600.69 306.247 cv
596.889 305.203 592.957 304.124 589.043 302.958 cv
579.524 300.122 570.459 295.983 561.691 291.981 cv
557.15 289.908 552.454 287.765 547.747 285.824 cv
535.887 280.938 523.307 277.359 511.142 273.899 cv
494.549 269.181 477.391 264.302 461.837 256.032 cv
448.487 248.935 434.614 242.208 421.198 235.703 cv
406.014 228.34 390.312 220.726 375.345 212.561 cv
375 212.373 374.507 212.089 373.896 211.739 cv
369.83 209.407 357.46 202.305 354.217 204.8 cv
353.346 205.47 353.197 206.906 353.776 209.068 cv
356.537 219.385 368.469 229.952 372.06 232.945 cv
372.828 233.586 li
381.12 240.495 388.952 247.021 395.358 255.804 cv
396.121 256.851 li
409.873 275.698 422.862 293.501 412.792 317.965 cv
407.316 331.271 402.527 345.489 397.896 359.24 cv
395.562 366.168 393.148 373.332 390.675 380.297 cv
390.044 382.076 389.339 383.92 388.593 385.872 cv
385.938 392.814 382.931 400.683 382.788 407.272 cv
382.604 415.734 388.412 420.397 395.137 425.796 cv
395.536 426.117 li
399.593 429.377 404.147 432.158 408.553 434.848 cv
411.158 436.438 413.853 438.084 416.429 439.817 cv
420.665 442.668 424.192 446.116 427.927 449.766 cv
429.812 451.607 431.76 453.512 433.808 455.332 cv
441.393 462.075 450.352 467.922 459.015 473.575 cv
476.889 485.24 495.372 497.303 503.737 518.2 cv
504.286 519.569 504.872 521.211 505.552 523.111 cv
509.024 532.828 514.271 547.512 523.041 549.018 cv
522.871 550.004 li
cp
f
513.505 554.935 mo
512.507 554.882 li
513.171 542.172 506.561 536.019 498.907 528.893 cv
496.143 526.319 493.284 523.658 490.635 520.544 cv
488.353 517.861 486.742 514.793 485.185 511.826 cv
483.419 508.463 481.593 504.984 478.808 502.181 cv
474.874 498.22 469.915 495.397 465.119 492.668 cv
462.723 491.304 460.244 489.894 457.922 488.357 cv
444.335 479.369 433.862 470.336 423.964 459.067 cv
416.806 450.917 408.936 444.705 399.904 440.078 cv
398.195 439.205 li
389.042 434.537 379.576 429.711 373.854 420.229 cv
368.967 412.128 371.06 404.486 373.275 396.397 cv
373.46 395.721 373.646 395.042 373.828 394.361 cv
378.284 377.709 383.747 360.156 391.542 337.445 cv
392.6 334.361 393.801 331.202 395.072 327.856 cv
400.055 314.748 405.701 299.891 403.299 286.625 cv
399.81 267.361 384.596 255.585 369.883 244.197 cv
367.398 242.273 364.828 240.285 362.386 238.31 cv
352.478 230.294 342.674 220.125 334.781 209.676 cv
334.591 209.423 334.313 209.065 333.973 208.624 cv
328.42 201.439 322.868 193.744 323.795 191.136 cv
324.321 189.652 325.256 188.634 326.572 188.11 cv
330.655 186.485 337.471 189.967 342.446 192.508 cv
343.838 193.22 345.04 193.833 345.938 194.206 cv
350.924 196.273 355.764 198.464 360.444 200.582 cv
368.252 204.115 375.627 207.452 383.528 210.223 cv
402.724 216.953 420.805 227.041 438.29 236.796 cv
455.585 246.445 473.47 256.423 492.427 263.149 cv
506.727 268.224 520.266 271.433 534.601 274.829 cv
537.906 275.612 541.232 276.401 544.59 277.219 cv
553.043 279.275 560.938 283.005 568.574 286.612 cv
575.403 289.838 582.465 293.174 589.803 295.231 cv
595.958 296.958 602.325 298.357 608.482 299.711 cv
618.046 301.813 627.935 303.987 637.423 307.457 cv
637.079 308.396 li
627.654 304.95 617.799 302.783 608.268 300.688 cv
602.097 299.331 595.716 297.929 589.533 296.194 cv
582.113 294.113 575.014 290.76 568.147 287.517 cv
560.557 283.931 552.707 280.223 544.354 278.19 cv
540.997 277.373 537.674 276.585 534.37 275.803 cv
520.008 272.399 506.443 269.185 492.093 264.093 cv
473.056 257.337 455.135 247.339 437.803 237.669 cv
420.354 227.935 402.312 217.868 383.198 211.166 cv
375.255 208.381 367.86 205.035 360.032 201.493 cv
355.358 199.378 350.526 197.191 345.556 195.13 cv
344.621 194.742 343.402 194.12 341.991 193.399 cv
337.457 191.083 330.604 187.583 326.942 189.039 cv
325.891 189.458 325.169 190.253 324.737 191.471 cv
324.16 193.093 327.534 198.658 334.764 208.012 cv
335.107 208.458 335.387 208.818 335.58 209.074 cv
343.425 219.459 353.168 229.566 363.015 237.532 cv
365.449 239.501 368.015 241.486 370.495 243.406 cv
385.357 254.91 400.726 266.805 404.283 286.447 cv
406.734 299.986 401.035 314.981 396.007 328.212 cv
394.738 331.549 393.541 334.702 392.487 337.77 cv
384.701 360.458 379.244 377.991 374.795 394.619 cv
374.611 395.303 374.426 395.983 374.239 396.661 cv
372.082 404.538 370.044 411.979 374.71 419.712 cv
380.285 428.95 389.205 433.498 398.649 438.313 cv
400.36 439.188 li
409.506 443.874 417.473 450.16 424.716 458.407 cv
434.553 469.606 444.964 478.586 458.473 487.523 cv
460.769 489.041 463.231 490.443 465.613 491.799 cv
470.468 494.562 475.487 497.418 479.517 501.476 cv
482.408 504.387 484.27 507.933 486.07 511.361 cv
487.603 514.28 489.187 517.298 491.396 519.896 cv
494.009 522.967 496.845 525.607 499.588 528.161 cv
507.1 535.153 514.193 541.758 513.505 554.935 cv
cp
f
290.645 -28.1299 mo
286.137 -28.1299 281.313 -25.8208 277.437 -21.6646 cv
267.375 -10.8765 264.203 10.1304 261.887 25.4692 cv
261.581 27.499 261.286 29.4482 260.991 31.2856 cv
258.823 44.7598 257.307 57.957 262.48 71.2705 cv
263.648 74.2754 265.102 78.0151 267.764 79.1309 cv
269.1 79.6909 270.638 79.5811 272.467 78.7925 cv
276.283 77.1499 276.949 71.8071 277.537 67.0928 cv
277.744 65.4282 277.94 63.8555 278.265 62.5415 cv
281.398 49.8496 287.218 36.8706 292.428 25.7017 cv
293.032 24.4067 293.672 23.0688 294.329 21.6943 cv
298.721 12.5063 303.698 2.09229 304.265 -8.00391 cv
304.265 -8.00391 li
304.416 -10.7075 304.233 -13.2876 303.719 -15.6724 cv
302.341 -22.064 298.864 -26.3335 293.929 -27.6943 cv
292.867 -27.9868 291.766 -28.1299 290.645 -28.1299 cv
cp
269.536 80.4756 mo
268.771 80.4756 268.05 80.335 267.378 80.0532 cv
264.323 78.7734 262.785 74.814 261.548 71.6328 cv
256.284 58.0854 257.813 44.7422 260.003 31.1265 cv
260.298 29.2925 260.592 27.3462 260.898 25.3198 cv
263.234 9.85205 266.433 -11.3315 276.706 -22.3462 cv
281.878 -27.8931 288.417 -30.25 294.195 -28.6582 cv
299.506 -27.1938 303.236 -22.6567 304.696 -15.8833 cv
305.229 -13.4106 305.42 -10.7412 305.263 -7.94824 cv
305.263 -7.94824 li
304.686 2.34521 299.663 12.854 295.231 22.1255 cv
294.575 23.4971 293.937 24.8325 293.334 26.1245 cv
288.145 37.2505 282.347 50.1763 279.235 62.7808 cv
278.925 64.0381 278.733 65.582 278.529 67.2168 cv
277.908 72.1973 277.205 77.8418 272.862 79.7114 cv
271.679 80.2207 270.567 80.4756 269.536 80.4756 cv
cp
f
287.549 -17.9531 mo
286.462 -17.9531 285.339 -17.7749 284.209 -17.415 cv
282.924 -17.0063 281.648 -16.3818 280.417 -15.5591 cv
280.095 -15.3452 279.779 -15.1123 279.47 -14.8613 cv
271.38 -8.30566 268.456 8.42383 266.32 20.6392 cv
265.957 22.7153 265.617 24.6592 265.278 26.3994 cv
263.616 34.9497 262.772 41.4854 262.544 47.5913 cv
262.349 52.3618 262.426 57.5479 264.299 63.1611 cv
265.355 66.3242 266.523 68.0391 267.975 68.5581 cv
269.147 68.9766 270.585 68.6348 272.369 67.5112 cv
272.369 67.5112 li
275.034 65.833 275.794 61.7998 276.466 58.2417 cv
276.726 56.8638 276.972 55.5625 277.312 54.4395 cv
277.873 52.5884 278.503 50.6675 279.184 48.731 cv
282.665 38.8452 285.598 31.2271 288.412 24.7549 cv
288.981 23.4458 289.591 22.0938 290.215 20.707 cv
293.292 13.8818 296.778 6.146 297.584 -1.24268 cv
297.815 -3.3916 297.816 -5.29736 297.588 -7.06738 cv
297.026 -11.4238 295.184 -14.7993 292.399 -16.5728 cv
290.962 -17.4888 289.303 -17.9531 287.549 -17.9531 cv
cp
269 69.7319 mo
268.524 69.7319 268.071 69.6543 267.638 69.4995 cv
265.874 68.8691 264.512 66.9556 263.351 63.4775 cv
261.426 57.7114 261.346 52.416 261.545 47.5522 cv
261.775 41.3945 262.624 34.8115 264.297 26.209 cv
264.634 24.4741 264.973 22.5361 265.335 20.4668 cv
267.498 8.09619 270.46 -8.84668 278.84 -15.6387 cv
279.174 -15.9092 279.515 -16.1597 279.861 -16.3911 cv
281.17 -17.2656 282.531 -17.9307 283.905 -18.3682 cv
287.148 -19.3994 290.354 -19.0615 292.937 -17.4165 cv
295.975 -15.481 297.979 -11.8511 298.58 -7.19531 cv
298.818 -5.34619 298.818 -3.36377 298.578 -1.13525 cv
297.755 6.41211 294.234 14.2251 291.127 21.1182 cv
290.504 22.5005 289.896 23.8486 289.329 25.1533 cv
286.524 31.6035 283.6 39.2007 280.127 49.0625 cv
279.451 50.9854 278.826 52.8921 278.269 54.7295 cv
277.944 55.8008 277.704 57.0767 277.449 58.4272 cv
276.739 62.186 275.935 66.4468 272.902 68.3569 cv
272.902 68.3569 li
271.443 69.2759 270.154 69.7319 269 69.7319 cv
cp
f
284.452 -8.59766 mo
283.714 -8.59766 282.947 -8.49268 282.164 -8.28418 cv
281.916 -8.21875 281.672 -8.13477 281.433 -8.03369 cv
275.194 -5.38525 272.43 7.93652 270.602 16.7524 cv
270.219 18.5962 269.888 20.189 269.564 21.5205 cv
268.184 27.1875 267.065 33.3159 266.044 40.8076 cv
265.969 41.354 li
265.317 46.1108 264.754 50.2188 266.118 55.0518 cv
266.741 57.2622 267.508 58.4902 268.397 58.7017 cv
269.303 58.9189 270.525 58.1484 272.238 56.2783 cv
272.238 56.2783 li
273.773 54.603 274.558 52.0049 275.317 49.4917 cv
275.659 48.3608 275.981 47.293 276.366 46.3232 cv
276.914 44.9438 277.48 43.5498 278.061 42.1348 cv
279.413 38.8462 280.514 35.4038 281.58 32.0747 cv
282.457 29.335 283.363 26.5015 284.393 23.8159 cv
284.951 22.3618 285.558 20.8696 286.176 19.3521 cv
288.029 14.8018 289.944 10.0962 290.909 5.49658 cv
291.243 3.87646 291.413 2.6416 291.46 1.49414 cv
291.699 -4.26465 289.077 -8.31396 284.938 -8.58203 cv
284.778 -8.59229 284.616 -8.59766 284.452 -8.59766 cv
cp
268.693 59.7358 mo
268.517 59.7358 268.341 59.7163 268.166 59.6743 cv
266.879 59.3687 265.895 57.9453 265.155 55.3232 cv
263.735 50.2896 264.312 46.0859 264.979 41.2183 cv
265.053 40.6729 li
266.079 33.146 267.204 26.9854 268.592 21.2842 cv
268.913 19.9688 269.242 18.3843 269.622 16.5493 cv
271.494 7.5293 274.322 -6.10107 281.043 -8.95459 cv
281.326 -9.07422 281.614 -9.17285 281.907 -9.25098 cv
282.968 -9.53369 284.009 -9.64355 285.002 -9.58008 cv
289.725 -9.27393 292.722 -4.80713 292.459 1.53516 cv
292.41 2.73877 292.233 4.02344 291.888 5.7002 cv
290.904 10.3896 288.972 15.1377 287.103 19.729 cv
286.487 21.2402 285.882 22.7261 285.327 24.1743 cv
284.307 26.8335 283.405 29.6528 282.532 32.3794 cv
281.46 35.7275 280.353 39.1895 278.985 42.5146 cv
278.407 43.9258 277.842 45.3159 277.296 46.6924 cv
276.926 47.6226 276.61 48.6709 276.274 49.7808 cv
275.483 52.4014 274.665 55.1108 272.975 56.9541 cv
272.975 56.9541 li
271.762 58.2778 270.214 59.7358 268.693 59.7358 cv
cp
f
282.679 -1.30371 mo
282.251 -1.30371 281.834 -1.19824 281.421 -.986328 cv
278.079 .72998 275.979 8.73779 274.724 13.522 cv
274.383 14.8198 274.089 15.9409 273.842 16.6626 cv
272.577 20.3564 271.732 24.2402 270.916 27.9966 cv
270.485 29.9775 270.039 32.0264 269.536 34.0298 cv
269.328 34.8584 269.107 35.6582 268.891 36.4414 cv
267.903 40.0215 267.049 43.1133 267.935 46.9424 cv
268.392 48.9189 268.957 49.6362 269.333 49.6489 cv
269.337 49.6489 269.342 49.6489 269.347 49.6489 cv
270.105 49.6489 271.361 47.6006 272.099 45.1543 cv
272.89 42.5298 274.18 40.3281 275.428 38.1987 cv
275.942 37.3208 276.46 36.4375 276.949 35.5171 cv
278.286 33.0034 278.802 30.3188 279.348 27.4766 cv
279.638 25.9712 279.937 24.4141 280.369 22.8984 cv
281.898 17.5308 283.402 13.6509 285.395 9.9248 cv
286.706 7.4751 287.898 2.6333 285.517 .0703125 cv
285.517 .0703125 li
285.049 -.432617 284.456 -.82373 283.753 -1.09277 cv
283.385 -1.2334 283.028 -1.30371 282.679 -1.30371 cv
cp
269.346 50.6489 mo
269.331 50.6489 269.315 50.6484 269.3 50.6479 cv
268.259 50.6138 267.494 49.4756 266.96 47.168 cv
266.018 43.0913 266.945 39.7319 267.927 36.1748 cv
268.142 35.3994 268.36 34.6069 268.566 33.7866 cv
269.065 31.7983 269.509 29.7578 269.938 27.7837 cv
270.761 24 271.612 20.0874 272.896 16.3384 cv
273.131 15.6519 273.421 14.5474 273.756 13.2686 cv
275.138 8.00244 277.226 .0444336 280.965 -1.87549 cv
281.967 -2.39111 283.026 -2.44189 284.11 -2.02637 cv
284.957 -1.70264 285.677 -1.22607 286.249 -.610352 cv
288.985 2.33398 287.718 7.70361 286.277 10.3965 cv
284.319 14.0562 282.84 17.8774 281.331 23.1729 cv
280.911 24.646 280.615 26.1812 280.33 27.6655 cv
279.794 30.4551 279.239 33.3398 277.832 35.9868 cv
277.336 36.9194 276.812 37.8145 276.291 38.7046 cv
275.017 40.8789 273.813 42.9326 273.056 45.4429 cv
272.895 45.9795 271.426 50.6489 269.346 50.6489 cv
cp
f
466.649 356.596 mo
467.131 366.603 473.92 375.788 480.484 384.672 cv
484.526 390.141 488.344 395.307 490.735 400.604 cv
492.415 404.326 492.31 407.852 492.207 411.261 cv
492.102 414.795 492.001 418.134 494.038 421.192 cv
498.11 427.306 502.957 430.264 508.412 429.977 cv
517.389 429.509 526.183 420.202 530.916 411.187 cv
536.255 401.016 537.514 393.012 535.728 380.599 cv
534.35 371.019 537.013 366.811 540.386 361.483 cv
541.811 359.232 543.426 356.682 544.939 353.401 cv
551.937 338.235 536.903 312.632 523.387 303.955 cv
513.268 297.46 501.511 290.363 490.049 288.358 cv
484.742 287.436 478.511 289.276 474.535 292.947 cv
472.364 294.951 469.875 298.394 470.345 303.412 cv
470.521 305.301 471.311 307.085 472.147 308.973 cv
472.927 310.732 473.732 312.553 474.014 314.491 cv
474.591 318.472 473.688 321.523 472.732 324.755 cv
472.337 326.096 471.927 327.481 471.606 328.988 cv
471.194 330.922 470.658 333.102 470.091 335.409 cv
468.343 342.521 466.36 350.579 466.649 356.596 cv
466.649 356.596 li
cp
507.686 430.996 mo
502.164 430.996 497.296 427.888 493.206 421.747 cv
490.992 418.423 491.097 414.929 491.208 411.23 cv
491.307 407.935 491.409 404.526 489.823 401.016 cv
487.477 395.815 483.689 390.691 479.681 385.267 cv
473.026 376.263 466.146 366.953 465.651 356.645 cv
465.651 356.645 li
465.354 350.481 467.355 342.348 469.12 335.171 cv
469.686 332.871 470.22 330.698 470.628 328.779 cv
470.957 327.235 471.372 325.83 471.774 324.472 cv
472.737 321.213 473.569 318.398 473.023 314.634 cv
472.763 312.832 471.985 311.076 471.233 309.378 cv
470.4 307.499 469.54 305.557 469.349 303.506 cv
468.842 298.079 471.521 294.369 473.856 292.213 cv
478.052 288.34 484.634 286.396 490.221 287.374 cv
501.865 289.41 513.726 296.565 523.928 303.113 cv
537.68 311.941 553.288 337.692 545.848 353.819 cv
544.307 357.16 542.673 359.741 541.23 362.019 cv
537.841 367.373 535.392 371.241 536.718 380.456 cv
538.515 392.946 537.183 401.4 531.801 411.651 cv
527.293 420.239 518.476 430.454 508.465 430.976 cv
508.203 430.989 507.943 430.996 507.686 430.996 cv
cp
f
492.387 296.229 mo
488.862 296.229 485.36 297.351 482.727 299.407 cv
480.878 300.852 478.646 303.402 478.511 307.352 cv
478.457 308.909 478.865 310.44 479.298 312.062 cv
479.667 313.443 480.048 314.872 480.157 316.397 cv
480.373 319.431 479.785 321.914 479.162 324.542 cv
479.036 325.077 478.908 325.617 478.785 326.171 cv
478.623 326.898 478.465 327.644 478.336 328.421 cv
478.026 330.301 477.624 332.358 477.199 334.536 cv
476.115 340.088 474.887 346.379 474.91 351.387 cv
474.949 357.091 476.606 362.984 480.127 369.935 cv
481.836 373.309 484.081 376.569 486.253 379.723 cv
488.498 382.982 490.618 386.062 492.172 389.229 cv
493.523 391.984 493.756 394.633 493.981 397.193 cv
494.227 399.978 494.458 402.608 496.152 405.054 cv
499.148 409.405 502.605 412.067 506.151 412.754 cv
511.761 413.841 517.266 410.894 523.466 403.479 cv
523.466 403.479 li
526.063 400.373 527.305 395.096 528.013 391.396 cv
528.316 389.814 528.532 388.193 528.741 386.625 cv
528.95 385.057 529.166 383.435 529.47 381.849 cv
529.52 381.588 li
530.124 378.435 530.695 375.456 530.604 371.979 cv
530.411 364.675 532.325 361.106 534.749 356.589 cv
535.727 354.768 536.834 352.702 537.896 350.177 cv
538.566 348.579 538.998 346.792 539.178 344.865 cv
540.013 336.002 534.499 326.487 531.139 321.604 cv
527.93 316.947 524.368 312.973 521.112 310.415 cv
513.834 304.696 505.13 298.58 495.752 296.581 cv
494.646 296.345 493.516 296.229 492.387 296.229 cv
cp
508.421 413.976 mo
507.604 413.976 506.784 413.896 505.962 413.736 cv
502.152 412.998 498.476 410.192 495.329 405.622 cv
493.485 402.96 493.242 400.201 492.985 397.281 cv
492.768 394.812 492.543 392.258 491.273 389.669 cv
489.753 386.568 487.652 383.519 485.429 380.29 cv
483.238 377.109 480.974 373.82 479.234 370.386 cv
475.643 363.294 473.95 357.258 473.91 351.393 cv
473.886 346.285 475.125 339.941 476.218 334.345 cv
476.642 332.174 477.042 330.124 477.35 328.259 cv
477.48 327.462 477.643 326.699 477.809 325.954 cv
477.933 325.396 478.062 324.851 478.189 324.313 cv
478.794 321.76 479.364 319.35 479.159 316.468 cv
479.058 315.038 478.688 313.656 478.332 312.319 cv
477.899 310.699 477.453 309.023 477.511 307.317 cv
477.627 303.936 479.261 300.847 482.111 298.619 cv
485.815 295.728 491.122 294.57 495.961 295.603 cv
505.538 297.645 514.362 303.839 521.729 309.628 cv
525.063 312.247 528.697 316.299 531.963 321.037 cv
535.4 326.032 541.037 335.78 540.174 344.959 cv
539.984 346.986 539.527 348.872 538.817 350.563 cv
537.737 353.133 536.618 355.221 535.63 357.063 cv
533.276 361.448 531.418 364.913 531.604 371.952 cv
531.698 375.538 531.117 378.568 530.502 381.776 cv
530.452 382.036 li
530.153 383.595 529.939 385.202 529.732 386.757 cv
529.521 388.339 529.304 389.976 528.995 391.585 cv
528.266 395.394 526.979 400.837 524.233 404.12 cv
524.233 404.12 li
518.66 410.786 513.571 413.976 508.421 413.976 cv
cp
f
497.343 304.246 mo
495.011 304.246 492.796 304.795 490.948 305.867 cv
488.745 307.146 487.262 309.036 486.659 311.336 cv
486.289 312.749 486.304 314.243 486.319 315.824 cv
486.327 316.626 486.336 317.455 486.296 318.325 cv
486.215 320.136 485.949 321.778 485.668 323.518 cv
485.534 324.343 485.399 325.178 485.283 326.042 cv
485.203 326.634 485.124 327.231 485.066 327.843 cv
484.861 329.995 484.593 332.242 484.31 334.621 cv
483.848 338.499 483.37 342.51 483.168 346.184 cv
482.867 352.01 483.313 357.124 484.532 361.816 cv
485.534 365.674 487.929 369.188 490.244 372.586 cv
491.471 374.388 492.63 376.088 493.604 377.846 cv
494.572 379.595 495.106 381.317 495.622 382.983 cv
496.267 385.061 496.874 387.022 498.264 388.913 cv
501.079 392.742 503.495 394.647 505.027 395.572 cv
508.574 397.711 510.911 399.12 516.068 395.761 cv
516.068 395.761 li
519.034 393.829 519.96 387.54 520.457 384.16 cv
520.57 383.397 li
520.694 382.579 520.801 381.757 520.906 380.935 cv
521.23 378.406 521.566 375.791 522.467 373.341 cv
522.707 372.688 522.952 372.052 523.193 371.423 cv
524.199 368.808 525.149 366.338 525.487 363.348 cv
526.023 358.625 527.297 355.636 528.772 352.176 cv
529.454 350.577 530.159 348.925 530.847 346.964 cv
531.27 345.756 531.557 344.417 531.7 342.983 cv
532.326 336.778 528.507 330.188 525.579 325.771 cv
522.97 321.84 520.821 319.005 518.819 316.849 cv
514.568 312.271 508.752 306.765 501.448 304.799 cv
500.072 304.429 498.688 304.246 497.343 304.246 cv
cp
510.638 398.769 mo
508.391 398.769 506.581 397.677 504.521 396.436 cv
502.202 395.035 499.764 392.642 497.458 389.505 cv
495.969 387.479 495.308 385.344 494.667 383.279 cv
494.166 381.662 493.647 379.989 492.729 378.33 cv
491.777 376.613 490.631 374.931 489.417 373.149 cv
487.054 369.681 484.609 366.093 483.563 362.068 cv
482.319 357.275 481.863 352.062 482.17 346.131 cv
482.373 342.423 482.853 338.396 483.316 334.503 cv
483.6 332.13 483.866 329.889 484.07 327.748 cv
484.13 327.124 484.211 326.513 484.293 325.908 cv
484.409 325.035 484.546 324.191 484.681 323.357 cv
484.957 321.647 485.219 320.032 485.298 318.28 cv
485.335 317.438 485.327 316.622 485.319 315.834 cv
485.304 314.184 485.288 312.625 485.692 311.082 cv
486.364 308.52 488.008 306.417 490.446 305.002 cv
493.587 303.18 497.692 302.754 501.708 303.834 cv
509.258 305.865 515.21 311.493 519.552 316.169 cv
521.592 318.365 523.772 321.24 526.413 325.218 cv
529.68 330.147 533.347 336.634 532.694 343.083 cv
532.544 344.595 532.239 346.012 531.79 347.294 cv
531.092 349.286 530.381 350.955 529.692 352.568 cv
528.248 355.956 527 358.883 526.481 363.461 cv
526.129 366.577 525.156 369.105 524.127 371.781 cv
523.887 372.406 523.644 373.038 523.406 373.687 cv
522.544 376.03 522.216 378.589 521.897 381.063 cv
521.791 381.893 521.685 382.723 521.559 383.548 cv
521.446 384.307 li
520.89 388.089 519.958 394.421 516.613 396.599 cv
516.613 396.599 li
514.198 398.172 512.299 398.769 510.638 398.769 cv
cp
f
501.91 312.006 mo
499.896 312.006 498.109 312.533 496.622 313.585 cv
493.512 315.783 491.746 320.267 491.779 325.885 cv
491.786 327.134 491.813 328.339 491.838 329.521 cv
491.92 333.335 491.998 336.937 491.424 340.995 cv
491.153 342.91 490.687 344.855 490.235 346.736 cv
489.679 349.061 489.103 351.464 488.914 353.765 cv
488.59 357.733 491.041 361.032 493.411 364.221 cv
493.966 364.967 494.514 365.705 495.022 366.444 cv
495.022 366.444 li
495.931 367.766 497.127 369.101 498.394 370.514 cv
500.692 373.078 503.07 375.73 503.957 378.606 cv
504.179 379.323 504.305 380.279 504.45 381.387 cv
504.758 383.72 505.141 386.622 506.615 387.696 cv
507.181 388.106 507.879 388.23 508.742 388.068 cv
512.079 387.457 512.675 380.539 512.994 376.822 cv
513.042 376.274 513.083 375.791 513.127 375.399 cv
513.177 374.955 513.224 374.51 513.27 374.063 cv
513.593 370.953 513.928 367.735 515.472 364.85 cv
515.784 364.265 516.093 363.696 516.396 363.138 cv
517.94 360.293 519.273 357.836 520.395 354.676 cv
520.86 353.371 li
522.279 349.404 523.746 345.304 524.222 341.097 cv
524.641 337.404 522.595 334.1 520.617 330.903 cv
520.016 329.926 li
519.034 328.317 518.159 326.551 517.313 324.843 cv
514.894 319.959 512.392 314.908 507.131 313.013 cv
505.268 312.341 503.517 312.006 501.91 312.006 cv
cp
508.052 389.136 mo
507.283 389.136 506.604 388.925 506.027 388.505 cv
504.205 387.179 503.791 384.04 503.459 381.518 cv
503.325 380.499 503.198 379.537 503.002 378.901 cv
502.179 376.235 499.876 373.666 497.649 371.181 cv
496.36 369.743 495.144 368.385 494.198 367.011 cv
493.697 366.282 493.155 365.554 492.608 364.817 cv
490.128 361.479 487.563 358.028 487.918 353.683 cv
488.111 351.306 488.697 348.864 489.264 346.503 cv
489.709 344.646 490.17 342.724 490.434 340.854 cv
490.996 336.877 490.919 333.314 490.838 329.543 cv
490.813 328.355 490.786 327.145 490.779 325.891 cv
490.744 319.941 492.664 315.158 496.045 312.769 cv
498.996 310.682 502.947 310.441 507.471 312.071 cv
513.109 314.104 515.702 319.338 518.209 324.398 cv
519.046 326.088 519.911 327.834 520.869 329.405 cv
521.468 330.377 li
523.438 333.563 525.673 337.172 525.216 341.21 cv
524.727 345.531 523.24 349.688 521.802 353.708 cv
521.338 355.01 li
520.189 358.244 518.773 360.853 517.274 363.615 cv
516.973 364.171 516.665 364.737 516.354 365.321 cv
514.901 368.034 514.577 371.152 514.265 374.167 cv
514.218 374.616 514.171 375.064 514.121 375.511 cv
514.078 375.896 514.037 376.37 513.99 376.908 cv
513.647 380.891 513.01 388.303 508.923 389.053 cv
508.621 389.107 508.331 389.136 508.052 389.136 cv
cp
f
500.521 354.771 mo
501.002 355.592 501.652 356.42 502.341 357.296 cv
503.613 358.916 504.929 360.591 505.37 362.477 cv
505.48 362.949 505.526 363.573 505.579 364.295 cv
505.684 365.716 505.826 367.661 506.607 368.223 cv
506.851 368.399 507.169 368.435 507.579 368.33 cv
509.418 367.864 509.975 363.233 510.243 361.009 cv
510.286 360.651 510.324 360.337 510.36 360.081 cv
510.481 359.211 li
510.76 357.168 511.048 355.055 512.035 353.115 cv
512.618 351.978 li
513.594 350.085 514.436 348.451 515.174 346.37 cv
515.48 345.513 li
516.415 342.896 517.383 340.19 517.778 337.451 cv
518.12 335.082 517.042 333.016 516 331.018 cv
515.681 330.402 li
515.155 329.376 514.697 328.248 514.255 327.158 cv
512.955 323.955 511.728 320.93 508.835 319.885 cv
506.692 319.109 504.842 319.229 503.339 320.241 cv
501.266 321.636 499.989 324.674 499.837 328.576 cv
499.805 329.386 499.785 330.166 499.767 330.933 cv
499.704 333.417 499.646 335.764 499.194 338.43 cv
498.981 339.688 498.654 340.967 498.339 342.204 cv
497.949 343.729 497.547 345.308 497.373 346.802 cv
497.077 349.338 498.384 351.385 499.647 353.363 cv
499.948 353.835 500.246 354.302 500.521 354.771 cv
500.521 354.771 li
cp
507.152 369.389 mo
506.728 369.389 506.35 369.271 506.022 369.034 cv
504.863 368.199 504.714 366.164 504.582 364.368 cv
504.534 363.717 504.488 363.101 504.396 362.705 cv
504.005 361.035 502.76 359.448 501.555 357.914 cv
500.845 357.01 500.174 356.155 499.658 355.276 cv
499.658 355.276 li
499.39 354.818 499.099 354.362 498.805 353.901 cv
497.446 351.775 496.042 349.576 496.379 346.687 cv
496.562 345.125 496.973 343.515 497.37 341.957 cv
497.681 340.739 498.002 339.479 498.208 338.263 cv
498.647 335.667 498.705 333.355 498.767 330.907 cv
498.786 330.137 498.806 329.352 498.837 328.537 cv
499.003 324.313 500.44 320.986 502.78 319.411 cv
504.537 318.229 506.747 318.067 509.175 318.943 cv
512.486 320.141 513.856 323.517 515.182 326.782 cv
515.616 327.853 516.065 328.959 516.571 329.945 cv
516.887 330.556 li
517.95 332.595 519.155 334.905 518.769 337.594 cv
518.357 340.433 517.374 343.187 516.422 345.85 cv
516.117 346.704 li
515.355 348.849 514.458 350.591 513.508 352.436 cv
512.926 353.568 li
512.016 355.357 511.739 357.385 511.472 359.346 cv
511.351 360.224 li
511.314 360.473 511.277 360.78 511.236 361.128 cv
510.896 363.947 510.328 368.665 507.825 369.299 cv
507.59 369.358 507.365 369.389 507.152 369.389 cv
cp
f
77.1392 -115.308 mo
59.6514 -115.308 45.5576 -99.4238 39.6841 -91.6069 cv
36.937 -87.9517 32.707 -84.7544 28.6157 -81.6631 cv
22.9785 -77.4028 17.1494 -72.9976 15.0425 -67.3281 cv
11.4824 -57.7495 19.8022 -51.4019 27.1426 -45.8013 cv
27.8999 -45.2236 28.6455 -44.6548 29.3667 -44.0913 cv
32.5688 -41.5884 35.481 -38.6104 38.2979 -35.73 cv
43.8599 -30.0425 49.6118 -24.1606 58.0654 -21.3369 cv
62.7329 -19.7783 67.5474 -18.3691 72.645 -16.8774 cv
86.2866 -12.8857 100.392 -8.75781 111.597 -1.58545 cv
112.711 -.87207 114.088 .104492 115.683 1.23584 cv
124.552 7.52832 139.399 18.063 146.424 9.91113 cv
149.874 5.90723 152.218 -11.3965 152.019 -16.6675 cv
151.85 -21.1641 150.89 -25.7036 149.962 -30.0933 cv
148.833 -35.436 147.665 -40.96 147.887 -46.5107 cv
147.948 -48.04 148.028 -49.4873 148.106 -50.8877 cv
148.407 -56.3423 148.668 -61.0527 147.63 -67.1768 cv
145.647 -78.8872 145.191 -80.2153 135.672 -88.771 cv
135.284 -89.1201 134.881 -89.4893 134.465 -89.8696 cv
131.901 -92.2183 128.709 -95.1406 125.634 -96.2974 cv
116.624 -99.4946 109.665 -102.977 102.935 -106.345 cv
97.7153 -108.957 92.7852 -111.424 87.5225 -113.393 cv
83.9609 -114.725 80.4863 -115.308 77.1392 -115.308 cv
cp
139.655 13.8887 mo
131.789 13.8887 121.797 6.80029 115.104 2.05127 cv
113.52 .927734 112.152 -.0429688 111.058 -.743652 cv
99.9736 -7.83838 85.938 -11.9458 72.3643 -15.918 cv
67.2573 -17.4121 62.4341 -18.8237 57.749 -20.3887 cv
49.0659 -23.2886 43.228 -29.2583 37.5825 -35.0313 cv
34.7891 -37.8877 31.9004 -40.8418 28.7505 -43.3032 cv
28.0327 -43.8643 27.29 -44.4312 26.5361 -45.0063 cv
18.9199 -50.8174 10.2871 -57.4038 14.105 -67.6768 cv
16.3135 -73.6196 22.2612 -78.1143 28.0132 -82.4609 cv
32.0488 -85.5107 36.2222 -88.6646 38.8843 -92.2075 cv
46.0171 -101.701 65.0679 -122.86 87.873 -114.329 cv
93.1855 -112.342 98.1387 -109.863 103.383 -107.239 cv
110.086 -103.884 117.019 -100.416 125.972 -97.2383 cv
125.981 -97.2354 li
129.239 -96.0117 132.511 -93.0151 135.141 -90.6074 cv
135.554 -90.229 135.955 -89.8618 136.341 -89.5151 cv
146.065 -80.7744 146.611 -79.1812 148.617 -67.3438 cv
149.672 -61.1094 149.409 -56.3472 149.104 -50.8325 cv
149.027 -49.437 148.947 -47.9946 148.886 -46.4707 cv
148.669 -41.0449 149.824 -35.5825 150.94 -30.3003 cv
151.877 -25.8691 152.846 -21.2871 153.018 -16.7056 cv
153.197 -11.9595 151.03 6.09766 147.182 10.564 cv
145.137 12.9351 142.538 13.8887 139.655 13.8887 cv
cp
f
78.0117 -108.722 mo
61.4863 -108.722 49.4209 -92.4341 45.7388 -86.7832 cv
43.5723 -83.4585 40.2422 -80.5703 37.022 -77.7773 cv
32.7456 -74.0679 28.3232 -70.2319 26.8823 -65.4932 cv
24.4194 -57.3921 31.6514 -51.9966 38.0317 -47.2358 cv
38.6182 -46.7983 39.1973 -46.3662 39.7607 -45.938 cv
42.5117 -43.8467 45.0454 -41.3911 47.4961 -39.0156 cv
52.0698 -34.5825 56.7998 -29.998 63.2588 -27.415 cv
63.7446 -27.2207 64.2412 -27.0371 64.7495 -26.8638 cv
68.5874 -25.5615 72.5615 -24.3438 76.769 -23.0542 cv
88.6777 -19.4048 100.992 -15.6309 111.035 -9.62012 cv
112.073 -8.99854 113.307 -8.18262 114.735 -7.23828 cv
122.343 -2.20801 135.076 6.20898 141.364 -.520508 cv
145.139 -4.5625 146.502 -19.4224 145.831 -23.7593 cv
145.277 -27.3345 144.225 -30.9424 143.208 -34.4312 cv
141.79 -39.2944 140.323 -44.3228 140.207 -49.2988 cv
140.179 -50.4824 140.165 -51.6133 140.15 -52.7134 cv
140.088 -57.522 140.034 -61.6748 138.951 -67.0464 cv
136.968 -76.8843 136.247 -78.5723 128.295 -85.9541 cv
127.942 -86.2822 127.576 -86.6289 127.199 -86.9858 cv
124.896 -89.166 122.287 -91.6367 119.642 -92.7104 cv
113.609 -95.1592 108.506 -97.5308 104.31 -99.5278 cv
102.331 -100.475 li
96.835 -103.107 91.6436 -105.594 86.2202 -107.377 cv
83.3828 -108.31 80.6396 -108.722 78.0117 -108.722 cv
cp
135.247 2.98877 mo
128.389 2.98877 119.893 -2.62939 114.184 -6.40381 cv
112.765 -7.3418 111.54 -8.15186 110.521 -8.76172 cv
100.582 -14.7104 88.3276 -18.4663 76.4761 -22.0981 cv
72.2612 -23.3896 68.2803 -24.6099 64.4277 -25.917 cv
63.9023 -26.0957 63.3892 -26.2861 62.8877 -26.4863 cv
56.2456 -29.1431 51.4438 -33.7969 46.7998 -38.2979 cv
44.3706 -40.6523 41.8589 -43.0869 39.1558 -45.1421 cv
38.5947 -45.5684 38.0181 -45.9985 37.4341 -46.4346 cv
30.7891 -51.3921 23.2583 -57.0107 25.9253 -65.7842 cv
27.4502 -70.7983 31.9834 -74.7305 36.3667 -78.5327 cv
39.5352 -81.2808 42.811 -84.1221 44.9009 -87.3291 cv
49.2671 -94.0298 65.1719 -115.347 86.5327 -108.327 cv
92.0171 -106.524 97.2368 -104.023 102.763 -101.376 cv
104.74 -100.431 li
108.923 -98.4399 114.009 -96.0762 120.018 -93.6372 cv
122.838 -92.4927 125.52 -89.9526 127.886 -87.7119 cv
128.261 -87.3574 128.625 -87.0132 128.976 -86.6865 cv
137.098 -79.1475 137.921 -77.2178 139.932 -67.2437 cv
141.033 -61.7808 141.087 -57.585 141.15 -52.7261 cv
141.165 -51.6299 141.179 -50.5024 141.207 -49.3223 cv
141.319 -44.4771 142.768 -39.5122 144.167 -34.7114 cv
145.194 -31.1914 146.256 -27.5518 146.819 -23.9126 cv
147.551 -19.1816 146.207 -4.24023 142.095 .162109 cv
142.095 .162109 li
140.208 2.18164 137.845 2.98877 135.247 2.98877 cv
cp
f
148.839 27.7939 mo
144.74 27.7939 136.397 24.376 133.771 23.2544 cv
129.992 21.6396 126.926 19.0469 123.961 16.5396 cv
121.582 14.5273 119.121 12.4468 116.347 10.9404 cv
111.603 8.36475 106.09 6.29932 100.758 4.30225 cv
99.1426 3.69727 97.5483 3.1001 96.0029 2.49854 cv
89.0581 -.203125 81.8755 -2.63428 74.9292 -4.98535 cv
65.6445 -8.12793 56.0435 -11.3774 46.8662 -15.3213 cv
47.2607 -16.2402 li
56.4019 -12.312 65.9834 -9.06885 75.25 -5.93262 cv
82.2065 -3.57813 89.3999 -1.14307 96.3652 1.56689 cv
97.9072 2.1665 99.4976 2.76221 101.109 3.36572 cv
106.473 5.375 112.019 7.45264 116.824 10.0615 cv
119.688 11.6172 122.189 13.7314 124.606 15.7759 cv
127.515 18.2354 130.523 20.7788 134.164 22.3345 cv
139.899 24.7842 146.969 27.2334 149.598 26.7339 cv
154.594 25.8013 156.698 17.5044 157.113 13.248 cv
158.323 .821777 157.063 -12.436 155.846 -25.2578 cv
155.679 -27.0098 155.515 -28.7437 155.358 -30.4541 cv
154.904 -35.4355 155.377 -40.896 155.834 -46.1768 cv
156.546 -54.4116 157.283 -62.9272 154.63 -70.1284 cv
155.568 -70.4741 li
158.299 -63.0635 157.552 -54.4351 156.83 -46.0908 cv
156.377 -40.8535 155.908 -35.438 156.354 -30.5449 cv
156.51 -28.8359 156.675 -27.103 156.841 -25.3525 cv
158.063 -12.4839 159.328 .823242 158.108 13.3447 cv
157.668 17.8604 155.362 26.6748 149.782 27.7173 cv
149.502 27.7695 149.186 27.7939 148.839 27.7939 cv
cp
f
219.333 457.394 mo
219.091 456.423 li
233.834 452.735 252.176 432.861 264.424 415.491 cv
268.713 409.408 273.619 404.041 278.362 398.85 cv
282.841 393.947 287.473 388.879 291.464 383.313 cv
300.054 371.333 300.375 361.383 300.818 347.611 cv
300.854 346.475 300.892 345.31 300.935 344.114 cv
301.156 337.987 303.294 332.147 305.36 326.5 cv
307.643 320.265 309.798 314.376 309.574 308.169 cv
309.22 298.298 303.117 290.1 297.216 282.172 cv
296.011 280.554 294.765 278.88 293.617 277.25 cv
283.275 262.567 276.801 251.045 274.308 235.595 cv
273.877 232.923 273.598 230.166 273.328 227.501 cv
272.589 220.214 271.825 212.68 267.871 206.341 cv
262.251 197.333 255.786 188.784 250.133 182.888 cv
249.116 181.827 248.13 180.824 247.171 179.848 cv
243.293 175.902 239.943 172.495 236.737 167.569 cv
232.138 160.503 226.674 154.192 221.39 148.088 cv
216.679 142.647 211.808 137.021 207.581 130.892 cv
203.787 125.392 199.67 119.922 195.689 114.633 cv
191.189 108.653 186.536 102.47 182.379 96.2773 cv
180.465 93.4253 178.56 90.4805 176.542 87.3628 cv
170.131 77.4556 163.501 67.2114 156.085 59.189 cv
133.97 35.2666 113.667 19.8652 94.0156 12.1035 cv
88.6782 9.99561 83.3506 7.19238 78.1978 4.48096 cv
69.9629 .147949 61.4473 -4.33301 52.4307 -6.27393 cv
46.1221 -7.63184 39.2813 -8.43018 32.666 -9.20264 cv
21.1196 -10.5503 9.18018 -11.9438 -1.28125 -16.3345 cv
-.894531 -17.2563 li
9.43652 -12.9204 21.3047 -11.5352 32.7817 -10.1958 cv
39.4204 -9.4209 46.2856 -8.61963 52.6406 -7.25146 cv
61.7915 -5.28174 70.3687 -.768555 78.6636 3.59619 cv
83.7925 6.29492 89.0962 9.08545 94.3828 11.1738 cv
114.177 18.9912 134.6 34.4751 156.819 58.5103 cv
164.294 66.5957 170.947 76.877 177.382 86.8193 cv
179.397 89.9336 181.3 92.875 183.209 95.7197 cv
187.351 101.891 191.996 108.063 196.488 114.032 cv
200.476 119.329 204.598 124.807 208.404 130.325 cv
212.6 136.408 217.453 142.013 222.146 147.434 cv
227.452 153.563 232.938 159.9 237.575 167.023 cv
240.727 171.865 244.044 175.24 247.885 179.147 cv
248.846 180.125 249.835 181.131 250.855 182.195 cv
256.554 188.14 263.065 196.748 268.719 205.812 cv
272.796 212.348 273.572 220 274.322 227.4 cv
274.591 230.051 274.869 232.793 275.295 235.435 cv
277.757 250.694 284.177 262.111 294.435 276.674 cv
295.575 278.294 296.762 279.888 298.018 281.574 cv
304.011 289.626 310.208 297.951 310.574 308.134 cv
310.805 314.535 308.515 320.792 306.3 326.843 cv
304.26 332.418 302.149 338.182 301.935 344.149 cv
301.892 345.344 301.854 346.508 301.817 347.644 cv
301.368 361.591 301.044 371.669 292.276 383.896 cv
288.251 389.51 283.599 394.601 279.1 399.524 cv
274.377 404.692 269.494 410.036 265.242 416.067 cv
259.248 424.567 238.223 452.669 219.333 457.394 cv
cp
f
266.266 471.691 mo
265.271 471.594 li
266.003 464.138 269.261 457.67 272.412 451.415 cv
273.568 449.12 274.764 446.746 275.807 444.373 cv
277.853 439.718 279.472 434.744 281.038 429.936 cv
282.17 426.457 283.342 422.86 284.667 419.407 cv
287.76 411.342 292.591 404.689 297.263 398.257 cv
301.058 393.031 304.981 387.628 307.828 381.604 cv
311.564 373.697 313.259 365.095 314.898 356.776 cv
316.547 348.409 318.252 339.757 322.029 331.733 cv
323.078 329.505 324.374 327.453 325.627 325.468 cv
327.826 321.984 329.903 318.695 330.844 314.443 cv
333.299 303.35 326.205 292.602 321.025 284.753 cv
317.655 279.647 314.467 274.543 311.383 269.606 cv
308.242 264.579 304.994 259.382 301.562 254.19 cv
300.201 252.135 298.76 250.09 297.233 247.926 cv
292.186 240.767 286.965 233.364 284.644 225.322 cv
283.979 223.019 283.655 220.914 283.341 218.877 cv
282.705 214.746 282.155 211.178 279.024 207.153 cv
274.28 201.053 269.56 194.811 264.996 188.773 cv
260.437 182.744 255.723 176.51 250.985 170.418 cv
247.8 166.323 244.413 162.302 241.137 158.414 cv
237.11 153.634 232.946 148.692 229.106 143.552 cv
215.989 125.991 199.555 103.008 188.821 80.9805 cv
185.558 74.2856 180.642 68.5498 175.887 63.0029 cv
171.983 58.4482 167.946 53.7388 164.893 48.5596 cv
158.047 36.9482 161.216 22.3701 164.012 9.50781 cv
164.442 7.5293 164.863 5.59619 165.234 3.72852 cv
165.821 .783203 li
170.495 -22.6353 174.187 -41.1323 165.589 -64.4541 cv
164.682 -66.9141 163.89 -69.4814 163.124 -71.9639 cv
161.91 -75.8994 160.654 -79.9688 158.9 -83.7598 cv
159.808 -84.1797 li
161.59 -80.3276 162.855 -76.2256 164.08 -72.2588 cv
164.842 -69.7886 165.63 -67.2344 166.527 -64.7998 cv
175.222 -41.2134 171.32 -21.6611 166.801 .978516 cv
166.214 3.92285 li
165.842 5.79688 165.421 7.73584 164.99 9.72021 cv
162.232 22.4028 159.107 36.7778 165.754 48.0518 cv
168.763 53.1548 172.771 57.8306 176.646 62.3521 cv
181.442 67.9468 186.401 73.7324 189.72 80.542 cv
200.417 102.495 216.816 125.427 229.907 142.954 cv
233.729 148.07 237.884 153.001 241.902 157.77 cv
245.184 161.665 248.578 165.693 251.774 169.804 cv
256.517 175.901 261.233 182.138 265.793 188.17 cv
270.355 194.205 275.073 200.444 279.813 206.539 cv
283.104 210.77 283.699 214.634 284.33 218.725 cv
284.638 220.73 284.958 222.803 285.604 225.044 cv
287.88 232.926 293.05 240.258 298.051 247.35 cv
299.582 249.521 301.027 251.57 302.396 253.64 cv
305.836 258.841 309.087 264.044 312.23 269.076 cv
315.312 274.008 318.497 279.107 321.859 284.202 cv
327.138 292.2 334.366 303.152 331.82 314.66 cv
330.842 319.081 328.62 322.6 326.473 326.002 cv
325.235 327.961 323.956 329.986 322.934 332.159 cv
319.209 340.071 317.517 348.661 315.88 356.97 cv
314.229 365.348 312.521 374.013 308.732 382.031 cv
305.846 388.14 301.894 393.582 298.072 398.845 cv
293.438 405.226 288.647 411.823 285.6 419.765 cv
284.285 423.194 283.118 426.778 281.989 430.245 cv
280.416 435.077 278.789 440.074 276.722 444.775 cv
275.669 447.172 274.467 449.558 273.305 451.865 cv
270.195 458.038 266.979 464.421 266.266 471.691 cv
cp
f
grestore
51.6807 283.059 mo
47.3843 283.059 li
47.3843 280.082 li
59.5293 280.082 li
59.5293 283.059 li
55.2329 283.059 li
55.2329 295.731 li
51.6807 295.731 li
51.6807 283.059 li
cp
.4 .4 .4 rgb
f
71.145 287.835 mo
71.145 284.714 69.8008 282.842 67.6646 282.842 cv
65.5288 282.842 64.1846 284.714 64.1846 287.835 cv
64.1846 290.979 65.5288 292.971 67.6646 292.971 cv
69.8008 292.971 71.145 290.979 71.145 287.835 cv
cp
60.5601 287.835 mo
60.5601 282.722 63.4404 279.794 67.6646 279.794 cv
71.8892 279.794 74.7695 282.746 74.7695 287.835 cv
74.7695 292.947 71.8892 296.02 67.6646 296.02 cv
63.4404 296.02 60.5601 292.947 60.5601 287.835 cv
cp
f
82.9766 287.618 mo
84.9209 287.618 85.8569 286.755 85.8569 285.122 cv
85.8569 283.49 84.8008 282.89 82.8809 282.89 cv
81.2485 282.89 li
81.2485 287.618 li
82.9766 287.618 li
cp
77.7202 280.082 mo
83.0967 280.082 li
86.5288 280.082 89.313 281.33 89.313 285.122 cv
89.313 288.795 86.5049 290.427 83.1929 290.427 cv
81.2485 290.427 li
81.2485 295.731 li
77.7202 295.731 li
77.7202 280.082 li
cp
f
101.865 287.835 mo
101.865 284.714 100.521 282.842 98.3843 282.842 cv
96.2485 282.842 94.9043 284.714 94.9043 287.835 cv
94.9043 290.979 96.2485 292.971 98.3843 292.971 cv
100.521 292.971 101.865 290.979 101.865 287.835 cv
cp
91.2798 287.835 mo
91.2798 282.722 94.1602 279.794 98.3843 279.794 cv
102.609 279.794 105.489 282.746 105.489 287.835 cv
105.489 292.947 102.609 296.02 98.3843 296.02 cv
94.1602 296.02 91.2798 292.947 91.2798 287.835 cv
cp
f
107.695 288.003 mo
107.695 282.818 111.152 279.794 115.328 279.794 cv
117.584 279.794 119.216 280.778 120.249 281.834 cv
118.4 284.09 li
117.608 283.395 116.792 282.842 115.448 282.842 cv
113.024 282.842 111.32 284.738 111.32 287.883 cv
111.32 291.099 112.784 292.971 115.712 292.971 cv
116.36 292.971 117.008 292.803 117.392 292.491 cv
117.392 289.803 li
114.8 289.803 li
114.8 286.923 li
120.513 286.923 li
120.513 294.123 li
119.433 295.179 117.536 296.02 115.352 296.02 cv
111.056 296.02 107.695 293.259 107.695 288.003 cv
cp
f
129.104 287.282 mo
130.952 287.282 131.96 286.49 131.96 284.954 cv
131.96 283.418 130.952 282.89 129.104 282.89 cv
127.28 282.89 li
127.28 287.282 li
129.104 287.282 li
cp
123.751 280.082 mo
129.392 280.082 li
132.704 280.082 135.417 281.234 135.417 284.954 cv
135.417 287.259 134.313 288.723 132.632 289.467 cv
136.185 295.731 li
132.224 295.731 li
129.224 290.091 li
127.28 290.091 li
127.28 295.731 li
123.751 295.731 li
123.751 280.082 li
cp
f
141.56 289.251 mo
144.896 289.251 li
144.536 287.811 li
144.104 286.25 143.672 284.402 143.264 282.771 cv
143.168 282.771 li
142.784 284.426 142.376 286.25 141.944 287.811 cv
141.56 289.251 li
cp
141.176 280.082 mo
145.424 280.082 li
150.32 295.731 li
146.576 295.731 li
145.616 292.011 li
140.84 292.011 li
139.879 295.731 li
136.279 295.731 li
141.176 280.082 li
cp
f
157.28 287.618 mo
159.224 287.618 160.16 286.755 160.16 285.122 cv
160.16 283.49 159.104 282.89 157.184 282.89 cv
155.552 282.89 li
155.552 287.618 li
157.28 287.618 li
cp
152.023 280.082 mo
157.4 280.082 li
160.832 280.082 163.617 281.33 163.617 285.122 cv
163.617 288.795 160.808 290.427 157.496 290.427 cv
155.552 290.427 li
155.552 295.731 li
152.023 295.731 li
152.023 280.082 li
cp
f
166.327 280.082 mo
169.855 280.082 li
169.855 286.106 li
175.256 286.106 li
175.256 280.082 li
178.808 280.082 li
178.808 295.731 li
175.256 295.731 li
175.256 289.203 li
169.855 289.203 li
169.855 295.731 li
166.327 295.731 li
166.327 280.082 li
cp
f
182.503 280.082 mo
186.031 280.082 li
186.031 295.731 li
182.503 295.731 li
182.503 280.082 li
cp
f
188.982 288.003 mo
188.982 282.818 192.415 279.794 196.375 279.794 cv
198.391 279.794 200.023 280.754 201.08 281.834 cv
199.208 284.09 li
198.416 283.37 197.575 282.842 196.447 282.842 cv
194.311 282.842 192.607 284.738 192.607 287.883 cv
192.607 291.099 194.095 292.971 196.399 292.971 cv
197.671 292.971 198.679 292.323 199.447 291.507 cv
201.32 293.715 li
200.023 295.228 198.295 296.02 196.255 296.02 cv
192.295 296.02 188.982 293.259 188.982 288.003 cv
cp
f
208.494 280.082 mo
212.358 280.082 li
214.879 287.042 li
215.191 287.954 215.479 288.963 215.791 289.923 cv
215.887 289.923 li
216.199 288.963 216.463 287.954 216.775 287.042 cv
219.247 280.082 li
223.087 280.082 li
223.087 295.731 li
219.871 295.731 li
219.871 289.995 li
219.871 288.459 220.159 286.179 220.327 284.666 cv
220.231 284.666 li
218.959 288.387 li
216.727 294.363 li
214.783 294.363 li
212.55 288.387 li
211.302 284.666 li
211.207 284.666 li
211.375 286.179 211.663 288.459 211.663 289.995 cv
211.663 295.731 li
208.494 295.731 li
208.494 280.082 li
cp
f
230.07 289.251 mo
233.407 289.251 li
233.047 287.811 li
232.615 286.25 232.183 284.402 231.775 282.771 cv
231.679 282.771 li
231.294 284.426 230.887 286.25 230.455 287.811 cv
230.07 289.251 li
cp
229.687 280.082 mo
233.935 280.082 li
238.831 295.731 li
235.087 295.731 li
234.127 292.011 li
229.351 292.011 li
228.39 295.731 li
224.79 295.731 li
229.687 280.082 li
cp
f
245.791 287.618 mo
247.735 287.618 248.671 286.755 248.671 285.122 cv
248.671 283.49 247.615 282.89 245.695 282.89 cv
244.063 282.89 li
244.063 287.618 li
245.791 287.618 li
cp
240.534 280.082 mo
245.911 280.082 li
249.343 280.082 252.127 281.33 252.127 285.122 cv
252.127 288.795 249.319 290.427 246.007 290.427 cv
244.063 290.427 li
244.063 295.731 li
240.534 295.731 li
240.534 280.082 li
cp
f
47.7539 309.953 mo
48.2139 309.953 li
48.2139 316.14 li
51.2524 316.14 li
51.2524 316.54 li
47.7539 316.54 li
47.7539 309.953 li
cp
f
55.7124 314.151 mo
55.7124 312.882 54.9829 312.013 54.0132 312.013 cv
53.0439 312.013 52.3242 312.882 52.3242 314.151 cv
52.3242 315.41 53.0439 316.27 54.0132 316.27 cv
54.9829 316.27 55.7124 315.41 55.7124 314.151 cv
cp
51.8643 314.151 mo
51.8643 312.542 52.8638 311.622 54.0132 311.622 cv
55.1729 311.622 56.1719 312.542 56.1719 314.151 cv
56.1719 315.74 55.1729 316.66 54.0132 316.66 cv
52.8638 316.66 51.8643 315.74 51.8643 314.151 cv
cp
f
57.6143 311.742 mo
57.9941 311.742 li
58.0342 312.632 li
58.064 312.632 li
58.3838 312.042 58.8535 311.622 59.4233 311.622 cv
59.603 311.622 59.7432 311.643 59.9028 311.723 cv
59.8032 312.122 li
59.6431 312.063 59.5532 312.042 59.3633 312.042 cv
58.9336 312.042 58.4238 312.372 58.0542 313.271 cv
58.0542 316.54 li
57.6143 316.54 li
57.6143 311.742 li
cp
f
63.7925 313.841 mo
63.7925 312.612 63.2427 312.002 62.3833 312.002 cv
61.5635 312.002 60.834 312.692 60.7339 313.841 cv
63.7925 313.841 li
cp
60.2842 314.151 mo
60.2842 312.582 61.3037 311.622 62.373 311.622 cv
63.5127 311.622 64.2124 312.432 64.2124 313.841 cv
64.2124 313.961 64.2124 314.081 64.1924 314.201 cv
60.7339 314.201 li
60.7539 315.41 61.4639 316.28 62.543 316.28 cv
63.063 316.28 63.4727 316.11 63.8325 315.851 cv
64.0122 316.19 li
63.6323 316.42 63.2026 316.66 62.5029 316.66 cv
61.2739 316.66 60.2842 315.721 60.2842 314.151 cv
cp
f
65.5142 311.742 mo
65.894 311.742 li
65.9341 312.482 li
65.9639 312.482 li
66.3936 311.992 66.9434 311.622 67.4731 311.622 cv
68.2427 311.622 68.6323 312.013 68.8022 312.602 cv
69.3521 312.002 69.8818 311.622 70.4316 311.622 cv
71.3911 311.622 71.8706 312.222 71.8706 313.462 cv
71.8706 316.54 li
71.4209 316.54 li
71.4209 313.521 li
71.4209 312.502 71.0811 312.022 70.3516 312.022 cv
69.9019 312.022 69.4419 312.322 68.9126 312.922 cv
68.9126 316.54 li
68.4727 316.54 li
68.4727 313.521 li
68.4727 312.502 68.1328 312.022 67.3931 312.022 cv
66.9634 312.022 66.4839 312.322 65.9541 312.922 cv
65.9541 316.54 li
65.5142 316.54 li
65.5142 311.742 li
cp
f
75.6343 311.742 mo
76.0742 311.742 li
76.0742 316.54 li
75.6343 316.54 li
75.6343 311.742 li
cp
75.4644 310.193 mo
75.4644 309.943 75.6445 309.794 75.8643 309.794 cv
76.084 309.794 76.2642 309.943 76.2642 310.193 cv
76.2642 310.423 76.084 310.583 75.8643 310.583 cv
75.6445 310.583 75.4644 310.423 75.4644 310.193 cv
cp
f
81.4526 314.071 mo
81.4526 312.892 81.0327 312.013 79.9331 312.013 cv
79.4536 312.013 78.9438 312.292 78.3643 312.802 cv
78.3643 315.65 li
78.9141 316.1 79.4136 316.27 79.7832 316.27 cv
80.7529 316.27 81.4526 315.37 81.4526 314.071 cv
cp
77.9243 311.742 mo
78.3042 311.742 li
78.3442 312.342 li
78.374 312.342 li
78.8438 311.973 79.4136 311.622 80.0034 311.622 cv
81.2827 311.622 81.9224 312.582 81.9224 314.071 cv
81.9224 315.7 80.9326 316.66 79.8032 316.66 cv
79.3535 316.66 78.8638 316.439 78.3643 316.07 cv
78.3643 318.709 li
77.9243 318.709 li
77.9243 311.742 li
cp
f
82.7646 316 mo
83.0244 315.67 li
83.4341 316.01 83.8643 316.28 84.5537 316.28 cv
85.3032 316.28 85.6929 315.84 85.6929 315.33 cv
85.6929 314.73 85.0732 314.471 84.5239 314.271 cv
83.7939 314.011 82.9946 313.722 82.9946 312.901 cv
82.9946 312.202 83.5444 311.622 84.5435 311.622 cv
85.0532 311.622 85.563 311.832 85.9131 312.122 cv
85.6729 312.432 li
85.353 312.192 85.0132 312.002 84.5239 312.002 cv
83.7842 312.002 83.4443 312.432 83.4443 312.872 cv
83.4443 313.422 84.0039 313.632 84.5737 313.841 cv
85.3232 314.121 86.1426 314.371 86.1426 315.311 cv
86.1426 316.03 85.563 316.66 84.5239 316.66 cv
83.814 316.66 83.1943 316.36 82.7646 316 cv
cp
f
87.3442 314.82 mo
87.3442 311.742 li
87.7837 311.742 li
87.7837 314.761 li
87.7837 315.78 88.1035 316.26 88.8735 316.26 cv
89.4429 316.26 89.8628 315.96 90.4224 315.28 cv
90.4224 311.742 li
90.8623 311.742 li
90.8623 316.54 li
90.4927 316.54 li
90.4424 315.74 li
90.4224 315.74 li
89.9526 316.29 89.4531 316.66 88.7935 316.66 cv
87.8037 316.66 87.3442 316.06 87.3442 314.82 cv
cp
f
92.7041 311.742 mo
93.084 311.742 li
93.124 312.482 li
93.1538 312.482 li
93.5835 311.992 94.1333 311.622 94.6631 311.622 cv
95.4326 311.622 95.8223 312.013 95.9922 312.602 cv
96.542 312.002 97.0718 311.622 97.6216 311.622 cv
98.5811 311.622 99.0605 312.222 99.0605 313.462 cv
99.0605 316.54 li
98.6108 316.54 li
98.6108 313.521 li
98.6108 312.502 98.271 312.022 97.5415 312.022 cv
97.0918 312.022 96.6318 312.322 96.1021 312.922 cv
96.1021 316.54 li
95.6626 316.54 li
95.6626 313.521 li
95.6626 312.502 95.3228 312.022 94.583 312.022 cv
94.1533 312.022 93.6738 312.322 93.144 312.922 cv
93.144 316.54 li
92.7041 316.54 li
92.7041 311.742 li
cp
f
105.982 315.48 mo
105.982 312.632 li
105.473 312.183 105.053 312.013 104.583 312.013 cv
103.624 312.013 102.894 312.941 102.894 314.151 cv
102.894 315.42 103.454 316.27 104.473 316.27 cv
105.003 316.27 105.473 315.99 105.982 315.48 cv
cp
102.424 314.151 mo
102.424 312.602 103.414 311.622 104.553 311.622 cv
105.133 311.622 105.523 311.843 106.002 312.212 cv
105.982 311.333 li
105.982 309.354 li
106.422 309.354 li
106.422 316.54 li
106.042 316.54 li
106.002 315.92 li
105.973 315.92 li
105.583 316.31 105.053 316.66 104.414 316.66 cv
103.204 316.66 102.424 315.771 102.424 314.151 cv
cp
f
111.712 314.151 mo
111.712 312.882 110.983 312.013 110.013 312.013 cv
109.044 312.013 108.324 312.882 108.324 314.151 cv
108.324 315.41 109.044 316.27 110.013 316.27 cv
110.983 316.27 111.712 315.41 111.712 314.151 cv
cp
107.864 314.151 mo
107.864 312.542 108.864 311.622 110.013 311.622 cv
111.173 311.622 112.172 312.542 112.172 314.151 cv
112.172 315.74 111.173 316.66 110.013 316.66 cv
108.864 316.66 107.864 315.74 107.864 314.151 cv
cp
f
113.614 315.9 mo
113.614 309.354 li
114.054 309.354 li
114.054 315.96 li
114.054 316.17 114.144 316.27 114.264 316.27 cv
114.304 316.27 114.344 316.27 114.444 316.25 cv
114.524 316.609 li
114.434 316.64 114.344 316.66 114.204 316.66 cv
113.814 316.66 113.614 316.42 113.614 315.9 cv
cp
f
119.433 314.151 mo
119.433 312.882 118.703 312.013 117.733 312.013 cv
116.764 312.013 116.044 312.882 116.044 314.151 cv
116.044 315.41 116.764 316.27 117.733 316.27 cv
118.703 316.27 119.433 315.41 119.433 314.151 cv
cp
115.584 314.151 mo
115.584 312.542 116.584 311.622 117.733 311.622 cv
118.893 311.622 119.892 312.542 119.892 314.151 cv
119.892 315.74 118.893 316.66 117.733 316.66 cv
116.584 316.66 115.584 315.74 115.584 314.151 cv
cp
f
121.334 311.742 mo
121.714 311.742 li
121.754 312.632 li
121.784 312.632 li
122.104 312.042 122.574 311.622 123.144 311.622 cv
123.323 311.622 123.463 311.643 123.623 311.723 cv
123.523 312.122 li
123.363 312.063 123.273 312.042 123.083 312.042 cv
122.654 312.042 122.144 312.372 121.774 313.271 cv
121.774 316.54 li
121.334 316.54 li
121.334 311.742 li
cp
f
125.905 316 mo
126.165 315.67 li
126.574 316.01 127.004 316.28 127.694 316.28 cv
128.443 316.28 128.833 315.84 128.833 315.33 cv
128.833 314.73 128.213 314.471 127.664 314.271 cv
126.934 314.011 126.135 313.722 126.135 312.901 cv
126.135 312.202 126.685 311.622 127.684 311.622 cv
128.193 311.622 128.703 311.832 129.053 312.122 cv
128.813 312.432 li
128.493 312.192 128.153 312.002 127.664 312.002 cv
126.924 312.002 126.584 312.432 126.584 312.872 cv
126.584 313.422 127.144 313.632 127.714 313.841 cv
128.463 314.121 129.283 314.371 129.283 315.311 cv
129.283 316.03 128.703 316.66 127.664 316.66 cv
126.954 316.66 126.334 316.36 125.905 316 cv
cp
f
130.554 311.742 mo
130.994 311.742 li
130.994 316.54 li
130.554 316.54 li
130.554 311.742 li
cp
130.384 310.193 mo
130.384 309.943 130.564 309.794 130.784 309.794 cv
131.004 309.794 131.184 309.943 131.184 310.193 cv
131.184 310.423 131.004 310.583 130.784 310.583 cv
130.564 310.583 130.384 310.423 130.384 310.193 cv
cp
f
132.954 315.211 mo
132.954 312.122 li
132.205 312.122 li
132.205 311.782 li
132.964 311.742 li
133.024 310.354 li
133.404 310.354 li
133.404 311.742 li
134.793 311.742 li
134.793 312.122 li
133.404 312.122 li
133.404 315.251 li
133.404 315.86 133.554 316.27 134.213 316.27 cv
134.394 316.27 134.643 316.2 134.813 316.12 cv
134.933 316.479 li
134.653 316.58 134.354 316.66 134.154 316.66 cv
133.224 316.66 132.954 316.07 132.954 315.211 cv
cp
f
140.723 315.5 mo
140.723 313.871 li
138.744 314.102 138.074 314.561 138.074 315.32 cv
138.074 316.01 138.544 316.28 139.094 316.28 cv
139.644 316.28 140.123 316.01 140.723 315.5 cv
cp
137.625 315.341 mo
137.625 314.281 138.584 313.771 140.723 313.531 cv
140.733 312.802 140.533 312.013 139.583 312.013 cv
138.944 312.013 138.384 312.332 138.054 312.572 cv
137.854 312.242 li
138.194 312.002 138.864 311.622 139.644 311.622 cv
140.773 311.622 141.163 312.442 141.163 313.472 cv
141.163 316.54 li
140.783 316.54 li
140.743 315.92 li
140.713 315.92 li
140.223 316.31 139.644 316.66 139.014 316.66 cv
138.254 316.66 137.625 316.25 137.625 315.341 cv
cp
f
142.875 311.742 mo
143.254 311.742 li
143.294 312.482 li
143.324 312.482 li
143.754 311.992 144.304 311.622 144.833 311.622 cv
145.603 311.622 145.993 312.013 146.163 312.602 cv
146.712 312.002 147.242 311.622 147.792 311.622 cv
148.751 311.622 149.231 312.222 149.231 313.462 cv
149.231 316.54 li
148.781 316.54 li
148.781 313.521 li
148.781 312.502 148.441 312.022 147.712 312.022 cv
147.262 312.022 146.802 312.322 146.273 312.922 cv
146.273 316.54 li
145.833 316.54 li
145.833 313.521 li
145.833 312.502 145.493 312.022 144.753 312.022 cv
144.324 312.022 143.844 312.322 143.314 312.922 cv
143.314 316.54 li
142.875 316.54 li
142.875 311.742 li
cp
f
154.103 313.841 mo
154.103 312.612 153.553 312.002 152.694 312.002 cv
151.874 312.002 151.145 312.692 151.044 313.841 cv
154.103 313.841 li
cp
150.595 314.151 mo
150.595 312.582 151.614 311.622 152.684 311.622 cv
153.823 311.622 154.523 312.432 154.523 313.841 cv
154.523 313.961 154.523 314.081 154.503 314.201 cv
151.044 314.201 li
151.064 315.41 151.774 316.28 152.854 316.28 cv
153.374 316.28 153.783 316.11 154.143 315.851 cv
154.323 316.19 li
153.943 316.42 153.513 316.66 152.813 316.66 cv
151.584 316.66 150.595 315.721 150.595 314.151 cv
cp
f
155.835 315.211 mo
155.835 312.122 li
155.085 312.122 li
155.085 311.782 li
155.845 311.742 li
155.905 310.354 li
156.285 310.354 li
156.285 311.742 li
157.674 311.742 li
157.674 312.122 li
156.285 312.122 li
156.285 315.251 li
156.285 315.86 156.435 316.27 157.094 316.27 cv
157.274 316.27 157.524 316.2 157.694 316.12 cv
157.814 316.479 li
157.534 316.58 157.234 316.66 157.035 316.66 cv
156.105 316.66 155.835 316.07 155.835 315.211 cv
cp
f
158.585 317.789 mo
159.045 317.549 159.355 317.119 159.355 316.58 cv
159.315 316.59 159.275 316.59 159.235 316.59 cv
159.005 316.59 158.815 316.439 158.815 316.17 cv
158.815 315.9 159.025 315.75 159.245 315.75 cv
159.544 315.75 159.754 316.021 159.754 316.46 cv
159.754 317.189 159.325 317.77 158.725 318.089 cv
158.585 317.789 li
cp
f
162.815 314.151 mo
162.815 312.542 163.834 311.622 165.004 311.622 cv
165.664 311.622 166.083 311.912 166.413 312.212 cv
166.153 312.522 li
165.843 312.232 165.484 312.013 165.014 312.013 cv
164.035 312.013 163.275 312.882 163.275 314.151 cv
163.275 315.41 163.964 316.27 165.014 316.27 cv
165.523 316.27 165.963 316.021 166.293 315.721 cv
166.523 316.03 li
166.113 316.39 165.604 316.66 164.994 316.66 cv
163.754 316.66 162.815 315.74 162.815 314.151 cv
cp
f
170.983 314.151 mo
170.983 312.882 170.253 312.013 169.284 312.013 cv
168.314 312.013 167.595 312.882 167.595 314.151 cv
167.595 315.41 168.314 316.27 169.284 316.27 cv
170.253 316.27 170.983 315.41 170.983 314.151 cv
cp
167.135 314.151 mo
167.135 312.542 168.134 311.622 169.284 311.622 cv
170.443 311.622 171.442 312.542 171.442 314.151 cv
171.442 315.74 170.443 316.66 169.284 316.66 cv
168.134 316.66 167.135 315.74 167.135 314.151 cv
cp
f
172.885 311.742 mo
173.265 311.742 li
173.305 312.482 li
173.334 312.482 li
173.824 311.992 174.324 311.622 174.984 311.622 cv
175.973 311.622 176.433 312.222 176.433 313.462 cv
176.433 316.54 li
175.993 316.54 li
175.993 313.521 li
175.993 312.502 175.673 312.022 174.894 312.022 cv
174.324 312.022 173.914 312.322 173.325 312.922 cv
173.325 316.54 li
172.885 316.54 li
172.885 311.742 li
cp
f
177.605 316 mo
177.865 315.67 li
178.274 316.01 178.705 316.28 179.394 316.28 cv
180.144 316.28 180.533 315.84 180.533 315.33 cv
180.533 314.73 179.914 314.471 179.364 314.271 cv
178.634 314.011 177.835 313.722 177.835 312.901 cv
177.835 312.202 178.385 311.622 179.384 311.622 cv
179.894 311.622 180.403 311.832 180.753 312.122 cv
180.513 312.432 li
180.193 312.192 179.854 312.002 179.364 312.002 cv
178.625 312.002 178.285 312.432 178.285 312.872 cv
178.285 313.422 178.844 313.632 179.414 313.841 cv
180.164 314.121 180.983 314.371 180.983 315.311 cv
180.983 316.03 180.403 316.66 179.364 316.66 cv
178.654 316.66 178.035 316.36 177.605 316 cv
cp
f
185.363 313.841 mo
185.363 312.612 184.813 312.002 183.954 312.002 cv
183.134 312.002 182.404 312.692 182.304 313.841 cv
185.363 313.841 li
cp
181.854 314.151 mo
181.854 312.582 182.874 311.622 183.943 311.622 cv
185.083 311.622 185.783 312.432 185.783 313.841 cv
185.783 313.961 185.783 314.081 185.763 314.201 cv
182.304 314.201 li
182.324 315.41 183.034 316.28 184.113 316.28 cv
184.633 316.28 185.043 316.11 185.403 315.851 cv
185.583 316.19 li
185.203 316.42 184.773 316.66 184.073 316.66 cv
182.844 316.66 181.854 315.721 181.854 314.151 cv
cp
f
186.685 314.151 mo
186.685 312.542 187.704 311.622 188.874 311.622 cv
189.533 311.622 189.953 311.912 190.283 312.212 cv
190.023 312.522 li
189.713 312.232 189.354 312.013 188.883 312.013 cv
187.904 312.013 187.145 312.882 187.145 314.151 cv
187.145 315.41 187.834 316.27 188.883 316.27 cv
189.393 316.27 189.833 316.021 190.163 315.721 cv
190.393 316.03 li
189.983 316.39 189.473 316.66 188.864 316.66 cv
187.624 316.66 186.685 315.74 186.685 314.151 cv
cp
f
191.584 315.211 mo
191.584 312.122 li
190.834 312.122 li
190.834 311.782 li
191.594 311.742 li
191.654 310.354 li
192.034 310.354 li
192.034 311.742 li
193.423 311.742 li
193.423 312.122 li
192.034 312.122 li
192.034 315.251 li
192.034 315.86 192.184 316.27 192.843 316.27 cv
193.023 316.27 193.273 316.2 193.443 316.12 cv
193.563 316.479 li
193.283 316.58 192.983 316.66 192.784 316.66 cv
191.854 316.66 191.584 316.07 191.584 315.211 cv
cp
f
197.593 313.841 mo
197.593 312.612 197.043 312.002 196.184 312.002 cv
195.364 312.002 194.634 312.692 194.534 313.841 cv
197.593 313.841 li
cp
194.084 314.151 mo
194.084 312.582 195.104 311.622 196.173 311.622 cv
197.313 311.622 198.013 312.432 198.013 313.841 cv
198.013 313.961 198.013 314.081 197.993 314.201 cv
194.534 314.201 li
194.554 315.41 195.264 316.28 196.343 316.28 cv
196.863 316.28 197.273 316.11 197.633 315.851 cv
197.813 316.19 li
197.433 316.42 197.003 316.66 196.303 316.66 cv
195.074 316.66 194.084 315.721 194.084 314.151 cv
cp
f
199.325 315.211 mo
199.325 312.122 li
198.575 312.122 li
198.575 311.782 li
199.335 311.742 li
199.395 310.354 li
199.774 310.354 li
199.774 311.742 li
201.164 311.742 li
201.164 312.122 li
199.774 312.122 li
199.774 315.251 li
199.774 315.86 199.924 316.27 200.584 316.27 cv
200.764 316.27 201.014 316.2 201.184 316.12 cv
201.304 316.479 li
201.024 316.58 200.724 316.66 200.524 316.66 cv
199.595 316.66 199.325 316.07 199.325 315.211 cv
cp
f
202.265 314.82 mo
202.265 311.742 li
202.705 311.742 li
202.705 314.761 li
202.705 315.78 203.024 316.26 203.794 316.26 cv
204.364 316.26 204.784 315.96 205.343 315.28 cv
205.343 311.742 li
205.783 311.742 li
205.783 316.54 li
205.414 316.54 li
205.363 315.74 li
205.343 315.74 li
204.874 316.29 204.374 316.66 203.714 316.66 cv
202.725 316.66 202.265 316.06 202.265 314.82 cv
cp
f
207.625 311.742 mo
208.005 311.742 li
208.045 312.632 li
208.075 312.632 li
208.395 312.042 208.864 311.622 209.434 311.622 cv
209.614 311.622 209.754 311.643 209.914 311.723 cv
209.814 312.122 li
209.654 312.063 209.564 312.042 209.374 312.042 cv
208.944 312.042 208.435 312.372 208.065 313.271 cv
208.065 316.54 li
207.625 316.54 li
207.625 311.742 li
cp
f
215.553 315.5 mo
215.553 313.871 li
213.575 314.102 212.905 314.561 212.905 315.32 cv
212.905 316.01 213.375 316.28 213.924 316.28 cv
214.474 316.28 214.954 316.01 215.553 315.5 cv
cp
212.455 315.341 mo
212.455 314.281 213.415 313.771 215.553 313.531 cv
215.563 312.802 215.364 312.013 214.414 312.013 cv
213.774 312.013 213.215 312.332 212.885 312.572 cv
212.685 312.242 li
213.025 312.002 213.694 311.622 214.474 311.622 cv
215.604 311.622 215.993 312.442 215.993 313.472 cv
215.993 316.54 li
215.613 316.54 li
215.573 315.92 li
215.543 315.92 li
215.054 316.31 214.474 316.66 213.844 316.66 cv
213.085 316.66 212.455 316.25 212.455 315.341 cv
cp
f
220.863 315.48 mo
220.863 312.632 li
220.354 312.183 219.934 312.013 219.464 312.013 cv
218.505 312.013 217.775 312.941 217.775 314.151 cv
217.775 315.42 218.335 316.27 219.354 316.27 cv
219.884 316.27 220.354 315.99 220.863 315.48 cv
cp
217.305 314.151 mo
217.305 312.602 218.295 311.622 219.434 311.622 cv
220.014 311.622 220.404 311.843 220.883 312.212 cv
220.863 311.333 li
220.863 309.354 li
221.303 309.354 li
221.303 316.54 li
220.923 316.54 li
220.883 315.92 li
220.854 315.92 li
220.463 316.31 219.934 316.66 219.294 316.66 cv
218.085 316.66 217.305 315.771 217.305 314.151 cv
cp
f
223.145 311.742 mo
223.585 311.742 li
223.585 316.54 li
223.145 316.54 li
223.145 311.742 li
cp
222.975 310.193 mo
222.975 309.943 223.155 309.794 223.375 309.794 cv
223.595 309.794 223.775 309.943 223.775 310.193 cv
223.775 310.423 223.595 310.583 223.375 310.583 cv
223.155 310.583 222.975 310.423 222.975 310.193 cv
cp
f
228.963 314.071 mo
228.963 312.892 228.543 312.013 227.444 312.013 cv
226.964 312.013 226.455 312.292 225.875 312.802 cv
225.875 315.65 li
226.425 316.1 226.924 316.27 227.294 316.27 cv
228.264 316.27 228.963 315.37 228.963 314.071 cv
cp
225.435 311.742 mo
225.815 311.742 li
225.855 312.342 li
225.885 312.342 li
226.354 311.973 226.924 311.622 227.514 311.622 cv
228.793 311.622 229.433 312.582 229.433 314.071 cv
229.433 315.7 228.443 316.66 227.314 316.66 cv
226.864 316.66 226.375 316.439 225.875 316.07 cv
225.875 318.709 li
225.435 318.709 li
225.435 311.742 li
cp
f
230.875 311.742 mo
231.315 311.742 li
231.315 316.54 li
230.875 316.54 li
230.875 311.742 li
cp
230.705 310.193 mo
230.705 309.943 230.885 309.794 231.105 309.794 cv
231.325 309.794 231.505 309.943 231.505 310.193 cv
231.505 310.423 231.325 310.583 231.105 310.583 cv
230.885 310.583 230.705 310.423 230.705 310.193 cv
cp
f
232.565 316 mo
232.825 315.67 li
233.235 316.01 233.665 316.28 234.354 316.28 cv
235.104 316.28 235.494 315.84 235.494 315.33 cv
235.494 314.73 234.874 314.471 234.325 314.271 cv
233.595 314.011 232.795 313.722 232.795 312.901 cv
232.795 312.202 233.345 311.622 234.344 311.622 cv
234.854 311.622 235.364 311.832 235.714 312.122 cv
235.474 312.432 li
235.154 312.192 234.814 312.002 234.325 312.002 cv
233.585 312.002 233.245 312.432 233.245 312.872 cv
233.245 313.422 233.805 313.632 234.375 313.841 cv
235.124 314.121 235.943 314.371 235.943 315.311 cv
235.943 316.03 235.364 316.66 234.325 316.66 cv
233.615 316.66 232.995 316.36 232.565 316 cv
cp
f
236.815 314.151 mo
236.815 312.542 237.834 311.622 239.004 311.622 cv
239.664 311.622 240.083 311.912 240.413 312.212 cv
240.153 312.522 li
239.843 312.232 239.484 312.013 239.014 312.013 cv
238.035 312.013 237.275 312.882 237.275 314.151 cv
237.275 315.41 237.964 316.27 239.014 316.27 cv
239.523 316.27 239.963 316.021 240.293 315.721 cv
240.523 316.03 li
240.113 316.39 239.604 316.66 238.994 316.66 cv
237.754 316.66 236.815 315.74 236.815 314.151 cv
cp
f
241.705 311.742 mo
242.145 311.742 li
242.145 316.54 li
241.705 316.54 li
241.705 311.742 li
cp
241.535 310.193 mo
241.535 309.943 241.715 309.794 241.935 309.794 cv
242.154 309.794 242.334 309.943 242.334 310.193 cv
242.334 310.423 242.154 310.583 241.935 310.583 cv
241.715 310.583 241.535 310.423 241.535 310.193 cv
cp
f
243.995 311.742 mo
244.375 311.742 li
244.415 312.482 li
244.444 312.482 li
244.934 311.992 245.434 311.622 246.094 311.622 cv
247.083 311.622 247.543 312.222 247.543 313.462 cv
247.543 316.54 li
247.103 316.54 li
247.103 313.521 li
247.103 312.502 246.783 312.022 246.003 312.022 cv
245.434 312.022 245.024 312.322 244.435 312.922 cv
244.435 316.54 li
243.995 316.54 li
243.995 311.742 li
cp
f
252.053 313.312 mo
252.053 312.502 251.493 311.982 250.813 311.982 cv
250.134 311.982 249.564 312.492 249.564 313.312 cv
249.564 314.121 250.144 314.661 250.813 314.661 cv
251.473 314.661 252.053 314.121 252.053 313.312 cv
cp
252.703 317.279 mo
252.703 316.75 252.313 316.55 251.593 316.55 cv
250.564 316.55 li
250.464 316.55 250.214 316.53 249.964 316.47 cv
249.524 316.77 249.334 317.14 249.334 317.479 cv
249.334 318.079 249.914 318.488 250.934 318.488 cv
252.013 318.488 252.703 317.879 252.703 317.279 cv
cp
248.915 317.52 mo
248.915 317.1 249.185 316.68 249.625 316.36 cv
249.625 316.32 li
249.384 316.18 249.205 315.92 249.205 315.551 cv
249.205 315.12 249.514 314.82 249.724 314.671 cv
249.724 314.631 li
249.424 314.371 249.125 313.892 249.125 313.312 cv
249.125 312.322 249.874 311.622 250.813 311.622 cv
251.074 311.622 251.293 311.683 251.443 311.742 cv
253.072 311.742 li
253.072 312.112 li
251.953 312.112 li
252.263 312.382 252.483 312.812 252.483 313.321 cv
252.483 314.301 251.753 315.011 250.813 315.011 cv
250.544 315.011 250.234 314.94 250.014 314.811 cv
249.804 314.98 249.625 315.181 249.625 315.5 cv
249.625 315.851 249.824 316.13 250.544 316.13 cv
251.573 316.13 li
252.653 316.13 253.152 316.47 253.152 317.229 cv
253.152 318.059 252.263 318.849 250.884 318.849 cv
249.674 318.849 248.915 318.329 248.915 317.52 cv
cp
f
50.8125 325.841 mo
50.8125 324.612 50.2627 324.002 49.4033 324.002 cv
48.5835 324.002 47.854 324.692 47.7539 325.841 cv
50.8125 325.841 li
cp
47.3042 326.151 mo
47.3042 324.582 48.3237 323.622 49.3931 323.622 cv
50.5327 323.622 51.2324 324.432 51.2324 325.841 cv
51.2324 325.961 51.2324 326.081 51.2124 326.201 cv
47.7539 326.201 li
47.7739 327.41 48.4839 328.28 49.563 328.28 cv
50.083 328.28 50.4927 328.11 50.8525 327.851 cv
51.0322 328.19 li
50.6523 328.42 50.2227 328.66 49.5229 328.66 cv
48.2939 328.66 47.3042 327.721 47.3042 326.151 cv
cp
f
52.5342 327.9 mo
52.5342 321.354 li
52.9741 321.354 li
52.9741 327.96 li
52.9741 328.17 53.064 328.27 53.1841 328.27 cv
53.2236 328.27 53.2637 328.27 53.3638 328.25 cv
53.4438 328.609 li
53.354 328.64 53.2637 328.66 53.124 328.66 cv
52.7339 328.66 52.5342 328.42 52.5342 327.9 cv
cp
f
54.9043 323.742 mo
55.3442 323.742 li
55.3442 328.54 li
54.9043 328.54 li
54.9043 323.742 li
cp
54.7344 322.193 mo
54.7344 321.943 54.9146 321.794 55.1343 321.794 cv
55.354 321.794 55.5342 321.943 55.5342 322.193 cv
55.5342 322.423 55.354 322.583 55.1343 322.583 cv
54.9146 322.583 54.7344 322.423 54.7344 322.193 cv
cp
f
57.3042 327.211 mo
57.3042 324.122 li
56.5547 324.122 li
56.5547 323.782 li
57.3145 323.742 li
57.3745 322.354 li
57.7539 322.354 li
57.7539 323.742 li
59.1436 323.742 li
59.1436 324.122 li
57.7539 324.122 li
57.7539 327.251 li
57.7539 327.86 57.9038 328.27 58.5635 328.27 cv
58.7437 328.27 58.9937 328.2 59.1631 328.12 cv
59.2832 328.479 li
59.0034 328.58 58.7036 328.66 58.5039 328.66 cv
57.5742 328.66 57.3042 328.07 57.3042 327.211 cv
cp
f
60.2441 328.21 mo
60.2441 327.92 60.4541 327.75 60.6743 327.75 cv
60.894 327.75 61.0938 327.92 61.0938 328.21 cv
61.0938 328.49 60.894 328.66 60.6743 328.66 cv
60.4541 328.66 60.2441 328.49 60.2441 328.21 cv
cp
f
64.7339 321.953 mo
65.3838 321.953 li
66.7632 325.821 li
66.9331 326.301 67.1128 326.791 67.2827 327.28 cv
67.3228 327.28 li
67.4927 326.791 67.6523 326.301 67.8223 325.821 cv
69.1919 321.953 li
69.8511 321.953 li
69.8511 328.54 li
69.4014 328.54 li
69.4014 324.212 li
69.4014 323.673 69.4316 322.982 69.4614 322.434 cv
69.4214 322.434 li
68.9116 323.902 li
67.4927 327.82 li
67.0928 327.82 li
65.6636 323.902 li
65.144 322.434 li
65.104 322.434 li
65.124 322.982 65.1641 323.673 65.1641 324.212 cv
65.1641 328.54 li
64.7339 328.54 li
64.7339 321.953 li
cp
f
74.5024 327.5 mo
74.5024 325.871 li
72.5239 326.102 71.854 326.561 71.854 327.32 cv
71.854 328.01 72.3237 328.28 72.8735 328.28 cv
73.4233 328.28 73.9028 328.01 74.5024 327.5 cv
cp
71.4043 327.341 mo
71.4043 326.281 72.3638 325.771 74.5024 325.531 cv
74.5127 324.802 74.313 324.013 73.3633 324.013 cv
72.7236 324.013 72.1641 324.332 71.834 324.572 cv
71.6343 324.242 li
71.9741 324.002 72.6436 323.622 73.4233 323.622 cv
74.5527 323.622 74.9424 324.442 74.9424 325.472 cv
74.9424 328.54 li
74.5625 328.54 li
74.5225 327.92 li
74.4927 327.92 li
74.0029 328.31 73.4233 328.66 72.7935 328.66 cv
72.0342 328.66 71.4043 328.25 71.4043 327.341 cv
cp
f
79.7627 325.841 mo
79.7627 324.612 79.2129 324.002 78.3535 324.002 cv
77.5337 324.002 76.8042 324.692 76.7041 325.841 cv
79.7627 325.841 li
cp
76.2544 326.151 mo
76.2544 324.582 77.2739 323.622 78.3433 323.622 cv
79.4829 323.622 80.1826 324.432 80.1826 325.841 cv
80.1826 325.961 80.1826 326.081 80.1626 326.201 cv
76.7041 326.201 li
76.7241 327.41 77.4341 328.28 78.5132 328.28 cv
79.0332 328.28 79.4429 328.11 79.8027 327.851 cv
79.9824 328.19 li
79.6025 328.42 79.1729 328.66 78.4731 328.66 cv
77.2441 328.66 76.2544 327.721 76.2544 326.151 cv
cp
f
81.0845 326.151 mo
81.0845 324.542 82.104 323.622 83.2734 323.622 cv
83.9331 323.622 84.353 323.912 84.6826 324.212 cv
84.4229 324.522 li
84.1128 324.232 83.7534 324.013 83.2837 324.013 cv
82.3042 324.013 81.5444 324.882 81.5444 326.151 cv
81.5444 327.41 82.2339 328.27 83.2837 328.27 cv
83.793 328.27 84.2329 328.021 84.563 327.721 cv
84.7925 328.03 li
84.3828 328.39 83.873 328.66 83.2637 328.66 cv
82.0239 328.66 81.0845 327.74 81.0845 326.151 cv
cp
f
88.9126 325.841 mo
88.9126 324.612 88.3628 324.002 87.5034 324.002 cv
86.6836 324.002 85.9541 324.692 85.854 325.841 cv
88.9126 325.841 li
cp
85.4043 326.151 mo
85.4043 324.582 86.4238 323.622 87.4932 323.622 cv
88.6328 323.622 89.3325 324.432 89.3325 325.841 cv
89.3325 325.961 89.3325 326.081 89.3125 326.201 cv
85.854 326.201 li
85.874 327.41 86.584 328.28 87.6631 328.28 cv
88.1831 328.28 88.5928 328.11 88.9526 327.851 cv
89.1323 328.19 li
88.7524 328.42 88.3228 328.66 87.623 328.66 cv
86.394 328.66 85.4043 327.721 85.4043 326.151 cv
cp
f
90.6343 323.742 mo
91.0142 323.742 li
91.0542 324.482 li
91.084 324.482 li
91.5737 323.992 92.0737 323.622 92.7334 323.622 cv
93.7227 323.622 94.1826 324.222 94.1826 325.462 cv
94.1826 328.54 li
93.7427 328.54 li
93.7427 325.521 li
93.7427 324.502 93.4229 324.022 92.6431 324.022 cv
92.0737 324.022 91.6636 324.322 91.0742 324.922 cv
91.0742 328.54 li
90.6343 328.54 li
90.6343 323.742 li
cp
f
98.7124 327.5 mo
98.7124 325.871 li
96.7339 326.102 96.064 326.561 96.064 327.32 cv
96.064 328.01 96.5337 328.28 97.0835 328.28 cv
97.6333 328.28 98.1128 328.01 98.7124 327.5 cv
cp
95.6143 327.341 mo
95.6143 326.281 96.5737 325.771 98.7124 325.531 cv
98.7227 324.802 98.5229 324.013 97.5732 324.013 cv
96.9336 324.013 96.374 324.332 96.0439 324.572 cv
95.8442 324.242 li
96.1841 324.002 96.8535 323.622 97.6333 323.622 cv
98.7627 323.622 99.1523 324.442 99.1523 325.472 cv
99.1523 328.54 li
98.7725 328.54 li
98.7324 327.92 li
98.7026 327.92 li
98.2129 328.31 97.6333 328.66 97.0034 328.66 cv
96.2441 328.66 95.6143 328.25 95.6143 327.341 cv
cp
f
100.265 328 mo
100.524 327.67 li
100.934 328.01 101.364 328.28 102.054 328.28 cv
102.803 328.28 103.193 327.84 103.193 327.33 cv
103.193 326.73 102.573 326.471 102.024 326.271 cv
101.294 326.011 100.495 325.722 100.495 324.901 cv
100.495 324.202 101.044 323.622 102.043 323.622 cv
102.553 323.622 103.063 323.832 103.413 324.122 cv
103.173 324.432 li
102.853 324.192 102.513 324.002 102.024 324.002 cv
101.284 324.002 100.944 324.432 100.944 324.872 cv
100.944 325.422 101.504 325.632 102.074 325.841 cv
102.823 326.121 103.643 326.371 103.643 327.311 cv
103.643 328.03 103.063 328.66 102.024 328.66 cv
101.314 328.66 100.694 328.36 100.265 328 cv
cp
f
110.442 326.071 mo
110.442 324.892 110.022 324.013 108.923 324.013 cv
108.443 324.013 107.923 324.292 107.354 324.802 cv
107.354 327.65 li
107.884 328.1 108.403 328.27 108.773 328.27 cv
109.743 328.27 110.442 327.37 110.442 326.071 cv
cp
107.354 328.05 mo
107.334 328.05 li
107.284 328.54 li
106.914 328.54 li
106.914 321.354 li
107.354 321.354 li
107.354 323.433 li
107.334 324.372 li
107.824 323.962 108.403 323.622 108.993 323.622 cv
110.272 323.622 110.912 324.582 110.912 326.071 cv
110.912 327.7 109.922 328.66 108.793 328.66 cv
108.333 328.66 107.804 328.42 107.354 328.05 cv
cp
f
112.334 327.9 mo
112.334 321.354 li
112.774 321.354 li
112.774 327.96 li
112.774 328.17 112.864 328.27 112.984 328.27 cv
113.023 328.27 113.063 328.27 113.164 328.25 cv
113.244 328.609 li
113.154 328.64 113.063 328.66 112.924 328.66 cv
112.534 328.66 112.334 328.42 112.334 327.9 cv
cp
f
117.462 327.5 mo
117.462 325.871 li
115.484 326.102 114.814 326.561 114.814 327.32 cv
114.814 328.01 115.284 328.28 115.833 328.28 cv
116.383 328.28 116.863 328.01 117.462 327.5 cv
cp
114.364 327.341 mo
114.364 326.281 115.324 325.771 117.462 325.531 cv
117.473 324.802 117.273 324.013 116.323 324.013 cv
115.684 324.013 115.124 324.332 114.794 324.572 cv
114.594 324.242 li
114.934 324.002 115.604 323.622 116.383 323.622 cv
117.513 323.622 117.902 324.442 117.902 325.472 cv
117.902 328.54 li
117.522 328.54 li
117.482 327.92 li
117.453 327.92 li
116.963 328.31 116.383 328.66 115.753 328.66 cv
114.994 328.66 114.364 328.25 114.364 327.341 cv
cp
f
119.614 323.742 mo
119.994 323.742 li
120.034 324.482 li
120.064 324.482 li
120.554 323.992 121.054 323.622 121.713 323.622 cv
122.703 323.622 123.163 324.222 123.163 325.462 cv
123.163 328.54 li
122.723 328.54 li
122.723 325.521 li
122.723 324.502 122.403 324.022 121.623 324.022 cv
121.054 324.022 120.644 324.322 120.054 324.922 cv
120.054 328.54 li
119.614 328.54 li
119.614 323.742 li
cp
f
128.092 327.48 mo
128.092 324.632 li
127.583 324.183 127.163 324.013 126.693 324.013 cv
125.734 324.013 125.004 324.941 125.004 326.151 cv
125.004 327.42 125.564 328.27 126.583 328.27 cv
127.113 328.27 127.583 327.99 128.092 327.48 cv
cp
124.534 326.151 mo
124.534 324.602 125.524 323.622 126.663 323.622 cv
127.243 323.622 127.633 323.843 128.112 324.212 cv
128.092 323.333 li
128.092 321.354 li
128.532 321.354 li
128.532 328.54 li
128.152 328.54 li
128.112 327.92 li
128.083 327.92 li
127.693 328.31 127.163 328.66 126.523 328.66 cv
125.314 328.66 124.534 327.771 124.534 326.151 cv
cp
f
130.374 323.742 mo
130.814 323.742 li
130.814 328.54 li
130.374 328.54 li
130.374 323.742 li
cp
130.204 322.193 mo
130.204 321.943 130.384 321.794 130.604 321.794 cv
130.824 321.794 131.004 321.943 131.004 322.193 cv
131.004 322.423 130.824 322.583 130.604 322.583 cv
130.384 322.583 130.204 322.423 130.204 322.193 cv
cp
f
132.774 327.211 mo
132.774 324.122 li
132.024 324.122 li
132.024 323.782 li
132.784 323.742 li
132.844 322.354 li
133.224 322.354 li
133.224 323.742 li
134.613 323.742 li
134.613 324.122 li
133.224 324.122 li
133.224 327.251 li
133.224 327.86 133.374 328.27 134.033 328.27 cv
134.213 328.27 134.463 328.2 134.633 328.12 cv
134.753 328.479 li
134.473 328.58 134.173 328.66 133.974 328.66 cv
133.044 328.66 132.774 328.07 132.774 327.211 cv
cp
f
141.313 326.071 mo
141.313 324.892 140.893 324.013 139.793 324.013 cv
139.313 324.013 138.804 324.292 138.224 324.802 cv
138.224 327.65 li
138.774 328.1 139.273 328.27 139.643 328.27 cv
140.613 328.27 141.313 327.37 141.313 326.071 cv
cp
137.784 323.742 mo
138.164 323.742 li
138.204 324.342 li
138.234 324.342 li
138.704 323.973 139.273 323.622 139.863 323.622 cv
141.143 323.622 141.782 324.582 141.782 326.071 cv
141.782 327.7 140.792 328.66 139.663 328.66 cv
139.213 328.66 138.724 328.439 138.224 328.07 cv
138.224 330.709 li
137.784 330.709 li
137.784 323.742 li
cp
f
146.672 326.151 mo
146.672 324.882 145.943 324.013 144.973 324.013 cv
144.004 324.013 143.284 324.882 143.284 326.151 cv
143.284 327.41 144.004 328.27 144.973 328.27 cv
145.943 328.27 146.672 327.41 146.672 326.151 cv
cp
142.824 326.151 mo
142.824 324.542 143.824 323.622 144.973 323.622 cv
146.133 323.622 147.132 324.542 147.132 326.151 cv
147.132 327.74 146.133 328.66 144.973 328.66 cv
143.824 328.66 142.824 327.74 142.824 326.151 cv
cp
f
148.574 323.742 mo
148.954 323.742 li
148.994 324.632 li
149.024 324.632 li
149.344 324.042 149.813 323.622 150.383 323.622 cv
150.563 323.622 150.703 323.643 150.863 323.723 cv
150.763 324.122 li
150.603 324.063 150.513 324.042 150.323 324.042 cv
149.894 324.042 149.384 324.372 149.014 325.271 cv
149.014 328.54 li
148.574 328.54 li
148.574 323.742 li
cp
f
151.854 327.211 mo
151.854 324.122 li
151.104 324.122 li
151.104 323.782 li
151.864 323.742 li
151.924 322.354 li
152.304 322.354 li
152.304 323.742 li
153.693 323.742 li
153.693 324.122 li
152.304 324.122 li
152.304 327.251 li
152.304 327.86 152.454 328.27 153.113 328.27 cv
153.293 328.27 153.543 328.2 153.713 328.12 cv
153.833 328.479 li
153.553 328.58 153.253 328.66 153.054 328.66 cv
152.124 328.66 151.854 328.07 151.854 327.211 cv
cp
f
157.403 327.5 mo
157.403 325.871 li
155.424 326.102 154.754 326.561 154.754 327.32 cv
154.754 328.01 155.224 328.28 155.774 328.28 cv
156.324 328.28 156.803 328.01 157.403 327.5 cv
cp
154.305 327.341 mo
154.305 326.281 155.264 325.771 157.403 325.531 cv
157.413 324.802 157.213 324.013 156.264 324.013 cv
155.624 324.013 155.064 324.332 154.734 324.572 cv
154.535 324.242 li
154.875 324.002 155.544 323.622 156.324 323.622 cv
157.453 323.622 157.843 324.442 157.843 325.472 cv
157.843 328.54 li
157.463 328.54 li
157.423 327.92 li
157.393 327.92 li
156.903 328.31 156.324 328.66 155.694 328.66 cv
154.935 328.66 154.305 328.25 154.305 327.341 cv
cp
f
161.555 323.742 mo
161.935 323.742 li
161.975 324.482 li
162.004 324.482 li
162.434 323.992 162.984 323.622 163.514 323.622 cv
164.283 323.622 164.673 324.013 164.843 324.602 cv
165.393 324.002 165.922 323.622 166.472 323.622 cv
167.432 323.622 167.911 324.222 167.911 325.462 cv
167.911 328.54 li
167.461 328.54 li
167.461 325.521 li
167.461 324.502 167.122 324.022 166.392 324.022 cv
165.942 324.022 165.482 324.322 164.953 324.922 cv
164.953 328.54 li
164.513 328.54 li
164.513 325.521 li
164.513 324.502 164.173 324.022 163.434 324.022 cv
163.004 324.022 162.524 324.322 161.995 324.922 cv
161.995 328.54 li
161.555 328.54 li
161.555 323.742 li
cp
f
169.675 323.742 mo
170.115 323.742 li
170.115 328.54 li
169.675 328.54 li
169.675 323.742 li
cp
169.505 322.193 mo
169.505 321.943 169.685 321.794 169.905 321.794 cv
170.125 321.794 170.305 321.943 170.305 322.193 cv
170.305 322.423 170.125 322.583 169.905 322.583 cv
169.685 322.583 169.505 322.423 169.505 322.193 cv
cp
f
171.525 329.789 mo
171.985 329.549 172.295 329.119 172.295 328.58 cv
172.255 328.59 172.215 328.59 172.175 328.59 cv
171.945 328.59 171.755 328.439 171.755 328.17 cv
171.755 327.9 171.965 327.75 172.185 327.75 cv
172.485 327.75 172.694 328.021 172.694 328.46 cv
172.694 329.189 172.265 329.77 171.665 330.089 cv
171.525 329.789 li
cp
f
179.313 327.48 mo
179.313 324.632 li
178.803 324.183 178.384 324.013 177.914 324.013 cv
176.955 324.013 176.225 324.941 176.225 326.151 cv
176.225 327.42 176.785 328.27 177.804 328.27 cv
178.333 328.27 178.803 327.99 179.313 327.48 cv
cp
179.313 328.859 mo
179.333 327.91 li
178.903 328.32 178.374 328.66 177.744 328.66 cv
176.535 328.66 175.755 327.771 175.755 326.151 cv
175.755 324.602 176.745 323.622 177.884 323.622 cv
178.463 323.622 178.863 323.832 179.313 324.183 cv
179.333 324.183 li
179.383 323.742 li
179.753 323.742 li
179.753 330.709 li
179.313 330.709 li
179.313 328.859 li
cp
f
181.525 326.82 mo
181.525 323.742 li
181.964 323.742 li
181.964 326.761 li
181.964 327.78 182.284 328.26 183.054 328.26 cv
183.624 328.26 184.043 327.96 184.603 327.28 cv
184.603 323.742 li
185.043 323.742 li
185.043 328.54 li
184.673 328.54 li
184.623 327.74 li
184.603 327.74 li
184.133 328.29 183.634 328.66 182.974 328.66 cv
181.984 328.66 181.525 328.06 181.525 326.82 cv
cp
f
186.885 323.742 mo
187.325 323.742 li
187.325 328.54 li
186.885 328.54 li
186.885 323.742 li
cp
186.715 322.193 mo
186.715 321.943 186.895 321.794 187.115 321.794 cv
187.334 321.794 187.515 321.943 187.515 322.193 cv
187.515 322.423 187.334 322.583 187.115 322.583 cv
186.895 322.583 186.715 322.423 186.715 322.193 cv
cp
f
188.575 328 mo
188.835 327.67 li
189.245 328.01 189.675 328.28 190.364 328.28 cv
191.114 328.28 191.503 327.84 191.503 327.33 cv
191.503 326.73 190.884 326.471 190.334 326.271 cv
189.604 326.011 188.805 325.722 188.805 324.901 cv
188.805 324.202 189.355 323.622 190.354 323.622 cv
190.864 323.622 191.374 323.832 191.724 324.122 cv
191.483 324.432 li
191.164 324.192 190.824 324.002 190.334 324.002 cv
189.595 324.002 189.255 324.432 189.255 324.872 cv
189.255 325.422 189.814 325.632 190.384 325.841 cv
191.134 326.121 191.953 326.371 191.953 327.311 cv
191.953 328.03 191.374 328.66 190.334 328.66 cv
189.625 328.66 189.005 328.36 188.575 328 cv
cp
f
195.294 324.122 mo
194.635 324.122 li
194.635 323.782 li
195.294 323.742 li
195.294 322.673 li
195.294 321.724 195.725 321.233 196.484 321.233 cv
196.704 321.233 196.964 321.294 197.184 321.394 cv
197.063 321.754 li
196.864 321.653 196.664 321.613 196.484 321.613 cv
195.974 321.613 195.734 322.003 195.734 322.703 cv
195.734 323.742 li
196.844 323.742 li
196.844 324.122 li
195.734 324.122 li
195.734 328.54 li
195.294 328.54 li
195.294 324.122 li
cp
f
200.863 325.841 mo
200.863 324.612 200.313 324.002 199.454 324.002 cv
198.634 324.002 197.904 324.692 197.804 325.841 cv
200.863 325.841 li
cp
197.354 326.151 mo
197.354 324.582 198.374 323.622 199.443 323.622 cv
200.583 323.622 201.283 324.432 201.283 325.841 cv
201.283 325.961 201.283 326.081 201.263 326.201 cv
197.804 326.201 li
197.824 327.41 198.534 328.28 199.613 328.28 cv
200.133 328.28 200.543 328.11 200.903 327.851 cv
201.083 328.19 li
200.703 328.42 200.273 328.66 199.573 328.66 cv
198.344 328.66 197.354 327.721 197.354 326.151 cv
cp
f
202.584 323.742 mo
202.964 323.742 li
203.004 324.632 li
203.034 324.632 li
203.354 324.042 203.824 323.622 204.394 323.622 cv
204.573 323.622 204.713 323.643 204.873 323.723 cv
204.773 324.122 li
204.613 324.063 204.523 324.042 204.333 324.042 cv
203.904 324.042 203.394 324.372 203.024 325.271 cv
203.024 328.54 li
202.584 328.54 li
202.584 323.742 li
cp
f
205.754 323.742 mo
206.134 323.742 li
206.174 324.482 li
206.204 324.482 li
206.634 323.992 207.184 323.622 207.713 323.622 cv
208.483 323.622 208.873 324.013 209.042 324.602 cv
209.592 324.002 210.122 323.622 210.672 323.622 cv
211.631 323.622 212.111 324.222 212.111 325.462 cv
212.111 328.54 li
211.661 328.54 li
211.661 325.521 li
211.661 324.502 211.321 324.022 210.592 324.022 cv
210.142 324.022 209.682 324.322 209.153 324.922 cv
209.153 328.54 li
208.713 328.54 li
208.713 325.521 li
208.713 324.502 208.373 324.022 207.633 324.022 cv
207.204 324.022 206.724 324.322 206.194 324.922 cv
206.194 328.54 li
205.754 328.54 li
205.754 323.742 li
cp
f
216.983 325.841 mo
216.983 324.612 216.433 324.002 215.574 324.002 cv
214.754 324.002 214.024 324.692 213.924 325.841 cv
216.983 325.841 li
cp
213.475 326.151 mo
213.475 324.582 214.494 323.622 215.563 323.622 cv
216.703 323.622 217.403 324.432 217.403 325.841 cv
217.403 325.961 217.403 326.081 217.383 326.201 cv
213.924 326.201 li
213.944 327.41 214.654 328.28 215.733 328.28 cv
216.253 328.28 216.663 328.11 217.023 327.851 cv
217.203 328.19 li
216.823 328.42 216.393 328.66 215.693 328.66 cv
214.464 328.66 213.475 327.721 213.475 326.151 cv
cp
f
218.705 323.742 mo
219.084 323.742 li
219.125 324.482 li
219.154 324.482 li
219.644 323.992 220.144 323.622 220.804 323.622 cv
221.793 323.622 222.253 324.222 222.253 325.462 cv
222.253 328.54 li
221.813 328.54 li
221.813 325.521 li
221.813 324.502 221.493 324.022 220.713 324.022 cv
220.144 324.022 219.734 324.322 219.145 324.922 cv
219.145 328.54 li
218.705 328.54 li
218.705 323.742 li
cp
f
224.134 327.211 mo
224.134 324.122 li
223.385 324.122 li
223.385 323.782 li
224.145 323.742 li
224.205 322.354 li
224.584 322.354 li
224.584 323.742 li
225.974 323.742 li
225.974 324.122 li
224.584 324.122 li
224.584 327.251 li
224.584 327.86 224.734 328.27 225.394 328.27 cv
225.574 328.27 225.824 328.2 225.993 328.12 cv
226.113 328.479 li
225.833 328.58 225.534 328.66 225.334 328.66 cv
224.404 328.66 224.134 328.07 224.134 327.211 cv
cp
f
227.075 326.82 mo
227.075 323.742 li
227.514 323.742 li
227.514 326.761 li
227.514 327.78 227.834 328.26 228.604 328.26 cv
229.173 328.26 229.593 327.96 230.153 327.28 cv
230.153 323.742 li
230.593 323.742 li
230.593 328.54 li
230.223 328.54 li
230.173 327.74 li
230.153 327.74 li
229.683 328.29 229.184 328.66 228.524 328.66 cv
227.534 328.66 227.075 328.06 227.075 326.82 cv
cp
f
232.435 323.742 mo
232.814 323.742 li
232.854 324.482 li
232.884 324.482 li
233.314 323.992 233.864 323.622 234.394 323.622 cv
235.163 323.622 235.553 324.013 235.723 324.602 cv
236.272 324.002 236.802 323.622 237.352 323.622 cv
238.312 323.622 238.791 324.222 238.791 325.462 cv
238.791 328.54 li
238.341 328.54 li
238.341 325.521 li
238.341 324.502 238.001 324.022 237.272 324.022 cv
236.822 324.022 236.362 324.322 235.833 324.922 cv
235.833 328.54 li
235.393 328.54 li
235.393 325.521 li
235.393 324.502 235.053 324.022 234.313 324.022 cv
233.884 324.022 233.404 324.322 232.875 324.922 cv
232.875 328.54 li
232.435 328.54 li
232.435 323.742 li
cp
f
242.555 323.742 mo
242.935 323.742 li
242.975 324.482 li
243.004 324.482 li
243.494 323.992 243.994 323.622 244.654 323.622 cv
245.643 323.622 246.103 324.222 246.103 325.462 cv
246.103 328.54 li
245.663 328.54 li
245.663 325.521 li
245.663 324.502 245.343 324.022 244.563 324.022 cv
243.994 324.022 243.584 324.322 242.995 324.922 cv
242.995 328.54 li
242.555 328.54 li
242.555 323.742 li
cp
f
247.875 323.742 mo
248.314 323.742 li
248.314 328.54 li
247.875 328.54 li
247.875 323.742 li
cp
247.705 322.193 mo
247.705 321.943 247.885 321.794 248.104 321.794 cv
248.324 321.794 248.504 321.943 248.504 322.193 cv
248.504 322.423 248.324 322.583 248.104 322.583 cv
247.885 322.583 247.705 322.423 247.705 322.193 cv
cp
f
249.565 328 mo
249.825 327.67 li
250.234 328.01 250.665 328.28 251.354 328.28 cv
252.104 328.28 252.493 327.84 252.493 327.33 cv
252.493 326.73 251.874 326.471 251.324 326.271 cv
250.594 326.011 249.795 325.722 249.795 324.901 cv
249.795 324.202 250.345 323.622 251.344 323.622 cv
251.854 323.622 252.363 323.832 252.713 324.122 cv
252.473 324.432 li
252.153 324.192 251.813 324.002 251.324 324.002 cv
250.584 324.002 250.245 324.432 250.245 324.872 cv
250.245 325.422 250.804 325.632 251.374 325.841 cv
252.124 326.121 252.943 326.371 252.943 327.311 cv
252.943 328.03 252.363 328.66 251.324 328.66 cv
250.614 328.66 249.995 328.36 249.565 328 cv
cp
f
254.214 323.742 mo
254.654 323.742 li
254.654 328.54 li
254.214 328.54 li
254.214 323.742 li
cp
254.044 322.193 mo
254.044 321.943 254.225 321.794 254.444 321.794 cv
254.664 321.794 254.844 321.943 254.844 322.193 cv
254.844 322.423 254.664 322.583 254.444 322.583 cv
254.225 322.583 254.044 322.423 254.044 322.193 cv
cp
f
51.2324 338.071 mo
51.2324 336.892 50.8125 336.013 49.7129 336.013 cv
49.2334 336.013 48.7236 336.292 48.144 336.802 cv
48.144 339.65 li
48.6938 340.1 49.1934 340.27 49.563 340.27 cv
50.5327 340.27 51.2324 339.37 51.2324 338.071 cv
cp
47.7041 335.742 mo
48.084 335.742 li
48.124 336.342 li
48.1538 336.342 li
48.6235 335.973 49.1934 335.622 49.7832 335.622 cv
51.0625 335.622 51.7021 336.582 51.7021 338.071 cv
51.7021 339.7 50.7124 340.66 49.583 340.66 cv
49.1333 340.66 48.6436 340.439 48.144 340.07 cv
48.144 342.709 li
47.7041 342.709 li
47.7041 335.742 li
cp
f
53.144 339.9 mo
53.144 333.354 li
53.584 333.354 li
53.584 339.96 li
53.584 340.17 53.6738 340.27 53.7939 340.27 cv
53.8335 340.27 53.8735 340.27 53.9736 340.25 cv
54.0537 340.609 li
53.9639 340.64 53.8735 340.66 53.7339 340.66 cv
53.3442 340.66 53.144 340.42 53.144 339.9 cv
cp
f
58.2729 339.5 mo
58.2729 337.871 li
56.2939 338.102 55.624 338.561 55.624 339.32 cv
55.624 340.01 56.0938 340.28 56.6436 340.28 cv
57.1934 340.28 57.6729 340.01 58.2729 339.5 cv
cp
55.1743 339.341 mo
55.1743 338.281 56.1338 337.771 58.2729 337.531 cv
58.2827 336.802 58.083 336.013 57.1333 336.013 cv
56.4937 336.013 55.9341 336.332 55.604 336.572 cv
55.4043 336.242 li
55.7441 336.002 56.4136 335.622 57.1934 335.622 cv
58.3228 335.622 58.7124 336.442 58.7124 337.472 cv
58.7124 340.54 li
58.3325 340.54 li
58.2925 339.92 li
58.2627 339.92 li
57.7729 340.31 57.1934 340.66 56.5635 340.66 cv
55.8042 340.66 55.1743 340.25 55.1743 339.341 cv
cp
f
60.0244 338.151 mo
60.0244 336.542 61.0439 335.622 62.2134 335.622 cv
62.873 335.622 63.293 335.912 63.6226 336.212 cv
63.3628 336.522 li
63.0527 336.232 62.6934 336.013 62.2231 336.013 cv
61.2441 336.013 60.4844 336.882 60.4844 338.151 cv
60.4844 339.41 61.1738 340.27 62.2231 340.27 cv
62.7329 340.27 63.1729 340.021 63.5024 339.721 cv
63.7324 340.03 li
63.3228 340.39 62.813 340.66 62.2036 340.66 cv
60.9639 340.66 60.0244 339.74 60.0244 338.151 cv
cp
f
67.8525 337.841 mo
67.8525 336.612 67.3027 336.002 66.4434 336.002 cv
65.6235 336.002 64.894 336.692 64.7939 337.841 cv
67.8525 337.841 li
cp
64.3442 338.151 mo
64.3442 336.582 65.3638 335.622 66.4331 335.622 cv
67.5728 335.622 68.2725 336.432 68.2725 337.841 cv
68.2725 337.961 68.2725 338.081 68.2524 338.201 cv
64.7939 338.201 li
64.814 339.41 65.5239 340.28 66.603 340.28 cv
67.123 340.28 67.5327 340.11 67.8926 339.851 cv
68.0723 340.19 li
67.6924 340.42 67.2627 340.66 66.563 340.66 cv
65.334 340.66 64.3442 339.721 64.3442 338.151 cv
cp
f
69.5742 335.742 mo
69.9541 335.742 li
69.9941 336.632 li
70.0239 336.632 li
70.3438 336.042 70.8135 335.622 71.3833 335.622 cv
71.563 335.622 71.7031 335.643 71.8628 335.723 cv
71.7632 336.122 li
71.603 336.063 71.5132 336.042 71.3232 336.042 cv
70.8936 336.042 70.3838 336.372 70.0142 337.271 cv
70.0142 340.54 li
69.5742 340.54 li
69.5742 335.742 li
cp
f
75.2925 339.5 mo
75.2925 337.871 li
73.314 338.102 72.644 338.561 72.644 339.32 cv
72.644 340.01 73.1138 340.28 73.6636 340.28 cv
74.2134 340.28 74.6929 340.01 75.2925 339.5 cv
cp
72.1943 339.341 mo
72.1943 338.281 73.1538 337.771 75.2925 337.531 cv
75.3027 336.802 75.103 336.013 74.1533 336.013 cv
73.5137 336.013 72.9541 336.332 72.624 336.572 cv
72.4243 336.242 li
72.7642 336.002 73.4336 335.622 74.2134 335.622 cv
75.3428 335.622 75.7324 336.442 75.7324 337.472 cv
75.7324 340.54 li
75.3525 340.54 li
75.3125 339.92 li
75.2827 339.92 li
74.793 340.31 74.2134 340.66 73.5835 340.66 cv
72.8242 340.66 72.1943 340.25 72.1943 339.341 cv
cp
f
77.4443 339.211 mo
77.4443 336.122 li
76.6948 336.122 li
76.6948 335.782 li
77.4546 335.742 li
77.5146 334.354 li
77.894 334.354 li
77.894 335.742 li
79.2837 335.742 li
79.2837 336.122 li
77.894 336.122 li
77.894 339.251 li
77.894 339.86 78.0439 340.27 78.7036 340.27 cv
78.8838 340.27 79.1333 340.2 79.3032 340.12 cv
79.4233 340.479 li
79.1436 340.58 78.8438 340.66 78.644 340.66 cv
77.7144 340.66 77.4443 340.07 77.4443 339.211 cv
cp
f
82.4546 335.742 mo
82.8345 335.742 li
82.8745 336.482 li
82.9043 336.482 li
83.394 335.992 83.894 335.622 84.5537 335.622 cv
85.543 335.622 86.0029 336.222 86.0029 337.462 cv
86.0029 340.54 li
85.563 340.54 li
85.563 337.521 li
85.563 336.502 85.2432 336.022 84.4634 336.022 cv
83.894 336.022 83.4839 336.322 82.8945 336.922 cv
82.8945 340.54 li
82.4546 340.54 li
82.4546 335.742 li
cp
f
90.8828 337.841 mo
90.8828 336.612 90.333 336.002 89.4736 336.002 cv
88.6538 336.002 87.9243 336.692 87.8242 337.841 cv
90.8828 337.841 li
cp
87.3745 338.151 mo
87.3745 336.582 88.394 335.622 89.4634 335.622 cv
90.603 335.622 91.3027 336.432 91.3027 337.841 cv
91.3027 337.961 91.3027 338.081 91.2827 338.201 cv
87.8242 338.201 li
87.8442 339.41 88.5542 340.28 89.6333 340.28 cv
90.1533 340.28 90.563 340.11 90.9229 339.851 cv
91.1025 340.19 li
90.7227 340.42 90.293 340.66 89.5933 340.66 cv
88.3643 340.66 87.3745 339.721 87.3745 338.151 cv
cp
f
92.2046 338.151 mo
92.2046 336.542 93.2241 335.622 94.3936 335.622 cv
95.0532 335.622 95.4731 335.912 95.8027 336.212 cv
95.543 336.522 li
95.2329 336.232 94.8735 336.013 94.4038 336.013 cv
93.4243 336.013 92.6646 336.882 92.6646 338.151 cv
92.6646 339.41 93.354 340.27 94.4038 340.27 cv
94.9131 340.27 95.353 340.021 95.6831 339.721 cv
95.9126 340.03 li
95.5029 340.39 94.9932 340.66 94.3838 340.66 cv
93.144 340.66 92.2046 339.74 92.2046 338.151 cv
cp
f
96.8442 340.21 mo
96.8442 339.92 97.0542 339.75 97.2744 339.75 cv
97.4941 339.75 97.6938 339.92 97.6938 340.21 cv
97.6938 340.49 97.4941 340.66 97.2744 340.66 cv
97.0542 340.66 96.8442 340.49 96.8442 340.21 cv
cp
f
100.915 337.231 mo
100.915 335.143 102.054 333.833 103.723 333.833 cv
104.493 333.833 105.092 334.213 105.442 334.623 cv
105.172 334.933 li
104.813 334.523 104.333 334.253 103.733 334.253 cv
102.284 334.253 101.394 335.402 101.394 337.231 cv
101.394 339.061 102.274 340.24 103.693 340.24 cv
104.373 340.24 104.882 339.96 105.362 339.431 cv
105.632 339.721 li
105.122 340.3 104.522 340.66 103.673 340.66 cv
102.044 340.66 100.915 339.33 100.915 337.231 cv
cp
f
106.924 335.742 mo
107.304 335.742 li
107.344 336.632 li
107.374 336.632 li
107.694 336.042 108.164 335.622 108.733 335.622 cv
108.913 335.622 109.053 335.643 109.213 335.723 cv
109.113 336.122 li
108.953 336.063 108.863 336.042 108.673 336.042 cv
108.244 336.042 107.734 336.372 107.364 337.271 cv
107.364 340.54 li
106.924 340.54 li
106.924 335.742 li
cp
f
112.643 339.5 mo
112.643 337.871 li
110.664 338.102 109.994 338.561 109.994 339.32 cv
109.994 340.01 110.464 340.28 111.014 340.28 cv
111.563 340.28 112.043 340.01 112.643 339.5 cv
cp
109.544 339.341 mo
109.544 338.281 110.504 337.771 112.643 337.531 cv
112.653 336.802 112.453 336.013 111.503 336.013 cv
110.864 336.013 110.304 336.332 109.974 336.572 cv
109.774 336.242 li
110.114 336.002 110.784 335.622 111.563 335.622 cv
112.693 335.622 113.083 336.442 113.083 337.472 cv
113.083 340.54 li
112.703 340.54 li
112.663 339.92 li
112.633 339.92 li
112.143 340.31 111.563 340.66 110.934 340.66 cv
110.174 340.66 109.544 340.25 109.544 339.341 cv
cp
f
114.195 340 mo
114.455 339.67 li
114.864 340.01 115.294 340.28 115.984 340.28 cv
116.733 340.28 117.123 339.84 117.123 339.33 cv
117.123 338.73 116.503 338.471 115.954 338.271 cv
115.224 338.011 114.425 337.722 114.425 336.901 cv
114.425 336.202 114.975 335.622 115.974 335.622 cv
116.483 335.622 116.993 335.832 117.343 336.122 cv
117.103 336.432 li
116.783 336.192 116.443 336.002 115.954 336.002 cv
115.214 336.002 114.875 336.432 114.875 336.872 cv
114.875 337.422 115.434 337.632 116.004 337.841 cv
116.753 338.121 117.573 338.371 117.573 339.311 cv
117.573 340.03 116.993 340.66 115.954 340.66 cv
115.244 340.66 114.625 340.36 114.195 340 cv
cp
f
120.844 335.742 mo
121.224 335.742 li
121.264 336.632 li
121.294 336.632 li
121.614 336.042 122.083 335.622 122.653 335.622 cv
122.833 335.622 122.973 335.643 123.133 335.723 cv
123.033 336.122 li
122.873 336.063 122.783 336.042 122.593 336.042 cv
122.164 336.042 121.654 336.372 121.284 337.271 cv
121.284 340.54 li
120.844 340.54 li
120.844 335.742 li
cp
f
124.014 335.742 mo
124.454 335.742 li
124.454 340.54 li
124.014 340.54 li
124.014 335.742 li
cp
123.844 334.193 mo
123.844 333.943 124.024 333.794 124.244 333.794 cv
124.464 333.794 124.644 333.943 124.644 334.193 cv
124.644 334.423 124.464 334.583 124.244 334.583 cv
124.024 334.583 123.844 334.423 123.844 334.193 cv
cp
f
125.705 340 mo
125.964 339.67 li
126.374 340.01 126.804 340.28 127.494 340.28 cv
128.243 340.28 128.633 339.84 128.633 339.33 cv
128.633 338.73 128.013 338.471 127.463 338.271 cv
126.734 338.011 125.935 337.722 125.935 336.901 cv
125.935 336.202 126.484 335.622 127.483 335.622 cv
127.993 335.622 128.503 335.832 128.853 336.122 cv
128.613 336.432 li
128.293 336.192 127.953 336.002 127.463 336.002 cv
126.724 336.002 126.384 336.432 126.384 336.872 cv
126.384 337.422 126.944 337.632 127.514 337.841 cv
128.263 338.121 129.083 338.371 129.083 339.311 cv
129.083 340.03 128.503 340.66 127.463 340.66 cv
126.754 340.66 126.134 340.36 125.705 340 cv
cp
f
130.284 338.82 mo
130.284 335.742 li
130.724 335.742 li
130.724 338.761 li
130.724 339.78 131.043 340.26 131.813 340.26 cv
132.383 340.26 132.803 339.96 133.362 339.28 cv
133.362 335.742 li
133.802 335.742 li
133.802 340.54 li
133.432 340.54 li
133.382 339.74 li
133.362 339.74 li
132.893 340.29 132.393 340.66 131.733 340.66 cv
130.744 340.66 130.284 340.06 130.284 338.82 cv
cp
f
135.044 340 mo
135.304 339.67 li
135.714 340.01 136.144 340.28 136.833 340.28 cv
137.583 340.28 137.973 339.84 137.973 339.33 cv
137.973 338.73 137.353 338.471 136.803 338.271 cv
136.074 338.011 135.274 337.722 135.274 336.901 cv
135.274 336.202 135.824 335.622 136.823 335.622 cv
137.333 335.622 137.843 335.832 138.193 336.122 cv
137.953 336.432 li
137.633 336.192 137.293 336.002 136.803 336.002 cv
136.064 336.002 135.724 336.432 135.724 336.872 cv
135.724 337.422 136.284 337.632 136.854 337.841 cv
137.603 338.121 138.422 338.371 138.422 339.311 cv
138.422 340.03 137.843 340.66 136.803 340.66 cv
136.094 340.66 135.474 340.36 135.044 340 cv
cp
f
144.802 337.841 mo
144.802 336.612 144.252 336.002 143.393 336.002 cv
142.573 336.002 141.844 336.692 141.744 337.841 cv
144.802 337.841 li
cp
141.294 338.151 mo
141.294 336.582 142.313 335.622 143.383 335.622 cv
144.522 335.622 145.222 336.432 145.222 337.841 cv
145.222 337.961 145.222 338.081 145.202 338.201 cv
141.744 338.201 li
141.764 339.41 142.474 340.28 143.553 340.28 cv
144.073 340.28 144.482 340.11 144.842 339.851 cv
145.022 340.19 li
144.642 340.42 144.212 340.66 143.513 340.66 cv
142.284 340.66 141.294 339.721 141.294 338.151 cv
cp
f
146.524 335.742 mo
146.904 335.742 li
146.944 336.482 li
146.974 336.482 li
147.463 335.992 147.963 335.622 148.623 335.622 cv
149.612 335.622 150.072 336.222 150.072 337.462 cv
150.072 340.54 li
149.632 340.54 li
149.632 337.521 li
149.632 336.502 149.313 336.022 148.533 336.022 cv
147.963 336.022 147.553 336.322 146.964 336.922 cv
146.964 340.54 li
146.524 340.54 li
146.524 335.742 li
cp
f
151.844 335.742 mo
152.284 335.742 li
152.284 340.54 li
151.844 340.54 li
151.844 335.742 li
cp
151.674 334.193 mo
151.674 333.943 151.854 333.794 152.074 333.794 cv
152.293 333.794 152.474 333.943 152.474 334.193 cv
152.474 334.423 152.293 334.583 152.074 334.583 cv
151.854 334.583 151.674 334.423 151.674 334.193 cv
cp
f
154.134 335.742 mo
154.514 335.742 li
154.554 336.482 li
154.583 336.482 li
155.013 335.992 155.563 335.622 156.093 335.622 cv
156.862 335.622 157.252 336.013 157.422 336.602 cv
157.972 336.002 158.501 335.622 159.051 335.622 cv
160.011 335.622 160.49 336.222 160.49 337.462 cv
160.49 340.54 li
160.041 340.54 li
160.041 337.521 li
160.041 336.502 159.701 336.022 158.971 336.022 cv
158.521 336.022 158.062 336.322 157.532 336.922 cv
157.532 340.54 li
157.092 340.54 li
157.092 337.521 li
157.092 336.502 156.752 336.022 156.013 336.022 cv
155.583 336.022 155.104 336.322 154.574 336.922 cv
154.574 340.54 li
154.134 340.54 li
154.134 335.742 li
cp
f
161.814 341.789 mo
162.274 341.549 162.584 341.119 162.584 340.58 cv
162.544 340.59 162.504 340.59 162.464 340.59 cv
162.234 340.59 162.044 340.439 162.044 340.17 cv
162.044 339.9 162.254 339.75 162.474 339.75 cv
162.774 339.75 162.983 340.021 162.983 340.46 cv
162.983 341.189 162.554 341.77 161.954 342.089 cv
161.814 341.789 li
cp
f
166.514 336.122 mo
165.854 336.122 li
165.854 335.782 li
166.514 335.742 li
166.514 334.673 li
166.514 333.724 166.944 333.233 167.703 333.233 cv
167.923 333.233 168.183 333.294 168.403 333.394 cv
168.283 333.754 li
168.083 333.653 167.883 333.613 167.703 333.613 cv
167.193 333.613 166.954 334.003 166.954 334.703 cv
166.954 335.742 li
168.063 335.742 li
168.063 336.122 li
166.954 336.122 li
166.954 340.54 li
166.514 340.54 li
166.514 336.122 li
cp
f
169.074 335.742 mo
169.514 335.742 li
169.514 340.54 li
169.074 340.54 li
169.074 335.742 li
cp
168.904 334.193 mo
168.904 333.943 169.084 333.794 169.304 333.794 cv
169.523 333.794 169.704 333.943 169.704 334.193 cv
169.704 334.423 169.523 334.583 169.304 334.583 cv
169.084 334.583 168.904 334.423 168.904 334.193 cv
cp
f
171.364 335.742 mo
171.744 335.742 li
171.784 336.482 li
171.813 336.482 li
172.303 335.992 172.803 335.622 173.463 335.622 cv
174.452 335.622 174.912 336.222 174.912 337.462 cv
174.912 340.54 li
174.472 340.54 li
174.472 337.521 li
174.472 336.502 174.152 336.022 173.373 336.022 cv
172.803 336.022 172.393 336.322 171.804 336.922 cv
171.804 340.54 li
171.364 340.54 li
171.364 335.742 li
cp
f
176.684 335.742 mo
177.124 335.742 li
177.124 340.54 li
176.684 340.54 li
176.684 335.742 li
cp
176.514 334.193 mo
176.514 333.943 176.694 333.794 176.914 333.794 cv
177.133 333.794 177.313 333.943 177.313 334.193 cv
177.313 334.423 177.133 334.583 176.914 334.583 cv
176.694 334.583 176.514 334.423 176.514 334.193 cv
cp
f
182.502 338.071 mo
182.502 336.892 182.082 336.013 180.982 336.013 cv
180.503 336.013 179.983 336.292 179.414 336.802 cv
179.414 339.65 li
179.943 340.1 180.463 340.27 180.833 340.27 cv
181.802 340.27 182.502 339.37 182.502 338.071 cv
cp
179.414 340.05 mo
179.394 340.05 li
179.343 340.54 li
178.974 340.54 li
178.974 333.354 li
179.414 333.354 li
179.414 335.433 li
179.394 336.372 li
179.883 335.962 180.463 335.622 181.053 335.622 cv
182.332 335.622 182.972 336.582 182.972 338.071 cv
182.972 339.7 181.982 340.66 180.853 340.66 cv
180.393 340.66 179.863 340.42 179.414 340.05 cv
cp
f
184.324 338.82 mo
184.324 335.742 li
184.763 335.742 li
184.763 338.761 li
184.763 339.78 185.083 340.26 185.853 340.26 cv
186.422 340.26 186.842 339.96 187.402 339.28 cv
187.402 335.742 li
187.842 335.742 li
187.842 340.54 li
187.472 340.54 li
187.422 339.74 li
187.402 339.74 li
186.932 340.29 186.433 340.66 185.773 340.66 cv
184.783 340.66 184.324 340.06 184.324 338.82 cv
cp
f
189.084 340 mo
189.344 339.67 li
189.753 340.01 190.184 340.28 190.873 340.28 cv
191.623 340.28 192.012 339.84 192.012 339.33 cv
192.012 338.73 191.393 338.471 190.843 338.271 cv
190.113 338.011 189.314 337.722 189.314 336.901 cv
189.314 336.202 189.864 335.622 190.863 335.622 cv
191.373 335.622 191.882 335.832 192.232 336.122 cv
191.992 336.432 li
191.672 336.192 191.333 336.002 190.843 336.002 cv
190.104 336.002 189.764 336.432 189.764 336.872 cv
189.764 337.422 190.323 337.632 190.893 337.841 cv
191.643 338.121 192.462 338.371 192.462 339.311 cv
192.462 340.03 191.882 340.66 190.843 340.66 cv
190.133 340.66 189.514 340.36 189.084 340 cv
cp
f
195.733 335.742 mo
196.113 335.742 li
196.153 336.482 li
196.183 336.482 li
196.673 335.992 197.173 335.622 197.833 335.622 cv
198.822 335.622 199.282 336.222 199.282 337.462 cv
199.282 340.54 li
198.842 340.54 li
198.842 337.521 li
198.842 336.502 198.522 336.022 197.742 336.022 cv
197.173 336.022 196.763 336.322 196.173 336.922 cv
196.173 340.54 li
195.733 340.54 li
195.733 335.742 li
cp
f
204.501 338.151 mo
204.501 336.882 203.772 336.013 202.802 336.013 cv
201.833 336.013 201.113 336.882 201.113 338.151 cv
201.113 339.41 201.833 340.27 202.802 340.27 cv
203.772 340.27 204.501 339.41 204.501 338.151 cv
cp
200.653 338.151 mo
200.653 336.542 201.653 335.622 202.802 335.622 cv
203.962 335.622 204.961 336.542 204.961 338.151 cv
204.961 339.74 203.962 340.66 202.802 340.66 cv
201.653 340.66 200.653 339.74 200.653 338.151 cv
cp
f
206.403 335.742 mo
206.783 335.742 li
206.823 336.482 li
206.853 336.482 li
207.343 335.992 207.843 335.622 208.502 335.622 cv
209.492 335.622 209.952 336.222 209.952 337.462 cv
209.952 340.54 li
209.512 340.54 li
209.512 337.521 li
209.512 336.502 209.192 336.022 208.412 336.022 cv
207.843 336.022 207.433 336.322 206.843 336.922 cv
206.843 340.54 li
206.403 340.54 li
206.403 335.742 li
cp
f
213.723 335.742 mo
214.103 335.742 li
214.143 336.482 li
214.173 336.482 li
214.603 335.992 215.152 335.622 215.682 335.622 cv
216.452 335.622 216.841 336.013 217.011 336.602 cv
217.561 336.002 218.091 335.622 218.641 335.622 cv
219.6 335.622 220.08 336.222 220.08 337.462 cv
220.08 340.54 li
219.63 340.54 li
219.63 337.521 li
219.63 336.502 219.29 336.022 218.561 336.022 cv
218.111 336.022 217.651 336.322 217.122 336.922 cv
217.122 340.54 li
216.682 340.54 li
216.682 337.521 li
216.682 336.502 216.342 336.022 215.602 336.022 cv
215.172 336.022 214.693 336.322 214.163 336.922 cv
214.163 340.54 li
213.723 340.54 li
213.723 335.742 li
cp
f
224.602 339.5 mo
224.602 337.871 li
222.623 338.102 221.953 338.561 221.953 339.32 cv
221.953 340.01 222.423 340.28 222.973 340.28 cv
223.522 340.28 224.002 340.01 224.602 339.5 cv
cp
221.503 339.341 mo
221.503 338.281 222.463 337.771 224.602 337.531 cv
224.612 336.802 224.412 336.013 223.462 336.013 cv
222.823 336.013 222.263 336.332 221.933 336.572 cv
221.733 336.242 li
222.073 336.002 222.743 335.622 223.522 335.622 cv
224.652 335.622 225.042 336.442 225.042 337.472 cv
225.042 340.54 li
224.662 340.54 li
224.622 339.92 li
224.592 339.92 li
224.102 340.31 223.522 340.66 222.893 340.66 cv
222.133 340.66 221.503 340.25 221.503 339.341 cv
cp
f
226.684 338.82 mo
226.684 335.742 li
227.123 335.742 li
227.123 338.761 li
227.123 339.78 227.443 340.26 228.213 340.26 cv
228.782 340.26 229.202 339.96 229.762 339.28 cv
229.762 335.742 li
230.202 335.742 li
230.202 340.54 li
229.832 340.54 li
229.782 339.74 li
229.762 339.74 li
229.292 340.29 228.792 340.66 228.133 340.66 cv
227.143 340.66 226.684 340.06 226.684 338.82 cv
cp
f
232.043 335.742 mo
232.423 335.742 li
232.463 336.632 li
232.493 336.632 li
232.813 336.042 233.283 335.622 233.853 335.622 cv
234.032 335.622 234.172 335.643 234.332 335.723 cv
234.232 336.122 li
234.072 336.063 233.982 336.042 233.792 336.042 cv
233.363 336.042 232.853 336.372 232.483 337.271 cv
232.483 340.54 li
232.043 340.54 li
232.043 335.742 li
cp
f
235.213 335.742 mo
235.653 335.742 li
235.653 340.54 li
235.213 340.54 li
235.213 335.742 li
cp
235.043 334.193 mo
235.043 333.943 235.224 333.794 235.443 333.794 cv
235.663 333.794 235.843 333.943 235.843 334.193 cv
235.843 334.423 235.663 334.583 235.443 334.583 cv
235.224 334.583 235.043 334.423 235.043 334.193 cv
cp
f
236.904 340 mo
237.164 339.67 li
237.573 340.01 238.003 340.28 238.693 340.28 cv
239.442 340.28 239.832 339.84 239.832 339.33 cv
239.832 338.73 239.212 338.471 238.663 338.271 cv
237.933 338.011 237.134 337.722 237.134 336.901 cv
237.134 336.202 237.684 335.622 238.683 335.622 cv
239.192 335.622 239.702 335.832 240.052 336.122 cv
239.812 336.432 li
239.492 336.192 239.152 336.002 238.663 336.002 cv
237.923 336.002 237.583 336.432 237.583 336.872 cv
237.583 337.422 238.143 337.632 238.713 337.841 cv
239.462 338.121 240.282 338.371 240.282 339.311 cv
240.282 340.03 239.702 340.66 238.663 340.66 cv
237.953 340.66 237.333 340.36 236.904 340 cv
cp
f
51.2324 350.071 mo
51.2324 348.892 50.8125 348.013 49.7129 348.013 cv
49.2334 348.013 48.7236 348.292 48.144 348.802 cv
48.144 351.65 li
48.6938 352.1 49.1934 352.27 49.563 352.27 cv
50.5327 352.27 51.2324 351.37 51.2324 350.071 cv
cp
47.7041 347.742 mo
48.084 347.742 li
48.124 348.342 li
48.1538 348.342 li
48.6235 347.973 49.1934 347.622 49.7832 347.622 cv
51.0625 347.622 51.7021 348.582 51.7021 350.071 cv
51.7021 351.7 50.7124 352.66 49.583 352.66 cv
49.1333 352.66 48.6436 352.439 48.144 352.07 cv
48.144 354.709 li
47.7041 354.709 li
47.7041 347.742 li
cp
f
56.5923 350.151 mo
56.5923 348.882 55.8628 348.013 54.8931 348.013 cv
53.9238 348.013 53.2041 348.882 53.2041 350.151 cv
53.2041 351.41 53.9238 352.27 54.8931 352.27 cv
55.8628 352.27 56.5923 351.41 56.5923 350.151 cv
cp
52.7441 350.151 mo
52.7441 348.542 53.7437 347.622 54.8931 347.622 cv
56.0527 347.622 57.0518 348.542 57.0518 350.151 cv
57.0518 351.74 56.0527 352.66 54.8931 352.66 cv
53.7437 352.66 52.7441 351.74 52.7441 350.151 cv
cp
f
58.4941 347.742 mo
58.874 347.742 li
58.9141 348.632 li
58.9438 348.632 li
59.2637 348.042 59.7334 347.622 60.3032 347.622 cv
60.4829 347.622 60.623 347.643 60.7827 347.723 cv
60.6831 348.122 li
60.5229 348.063 60.4331 348.042 60.2432 348.042 cv
59.8135 348.042 59.3037 348.372 58.9341 349.271 cv
58.9341 352.54 li
58.4941 352.54 li
58.4941 347.742 li
cp
f
61.7739 351.211 mo
61.7739 348.122 li
61.0244 348.122 li
61.0244 347.782 li
61.7842 347.742 li
61.8442 346.354 li
62.2236 346.354 li
62.2236 347.742 li
63.6133 347.742 li
63.6133 348.122 li
62.2236 348.122 li
62.2236 351.251 li
62.2236 351.86 62.3735 352.27 63.0332 352.27 cv
63.2134 352.27 63.4634 352.2 63.6328 352.12 cv
63.7529 352.479 li
63.4731 352.58 63.1733 352.66 62.9736 352.66 cv
62.0439 352.66 61.7739 352.07 61.7739 351.211 cv
cp
f
64.6943 351.211 mo
64.6943 348.122 li
63.9448 348.122 li
63.9448 347.782 li
64.7046 347.742 li
64.7646 346.354 li
65.144 346.354 li
65.144 347.742 li
66.5337 347.742 li
66.5337 348.122 li
65.144 348.122 li
65.144 351.251 li
65.144 351.86 65.2939 352.27 65.9536 352.27 cv
66.1338 352.27 66.3833 352.2 66.5532 352.12 cv
66.6733 352.479 li
66.3936 352.58 66.0938 352.66 65.894 352.66 cv
64.9644 352.66 64.6943 352.07 64.6943 351.211 cv
cp
f
67.7046 347.742 mo
68.1445 347.742 li
68.1445 352.54 li
67.7046 352.54 li
67.7046 347.742 li
cp
67.5347 346.193 mo
67.5347 345.943 67.7148 345.794 67.9346 345.794 cv
68.1543 345.794 68.3345 345.943 68.3345 346.193 cv
68.3345 346.423 68.1543 346.583 67.9346 346.583 cv
67.7148 346.583 67.5347 346.423 67.5347 346.193 cv
cp
f
70.1045 351.211 mo
70.1045 348.122 li
69.355 348.122 li
69.355 347.782 li
70.1147 347.742 li
70.1748 346.354 li
70.5542 346.354 li
70.5542 347.742 li
71.9438 347.742 li
71.9438 348.122 li
70.5542 348.122 li
70.5542 351.251 li
70.5542 351.86 70.7041 352.27 71.3638 352.27 cv
71.5439 352.27 71.7935 352.2 71.9634 352.12 cv
72.0835 352.479 li
71.8037 352.58 71.5039 352.66 71.3042 352.66 cv
70.3745 352.66 70.1045 352.07 70.1045 351.211 cv
cp
f
76.4531 350.151 mo
76.4531 348.882 75.7236 348.013 74.7539 348.013 cv
73.7847 348.013 73.0649 348.882 73.0649 350.151 cv
73.0649 351.41 73.7847 352.27 74.7539 352.27 cv
75.7236 352.27 76.4531 351.41 76.4531 350.151 cv
cp
72.605 350.151 mo
72.605 348.542 73.6045 347.622 74.7539 347.622 cv
75.9136 347.622 76.9126 348.542 76.9126 350.151 cv
76.9126 351.74 75.9136 352.66 74.7539 352.66 cv
73.6045 352.66 72.605 351.74 72.605 350.151 cv
cp
f
78.355 347.742 mo
78.7349 347.742 li
78.7749 348.632 li
78.8047 348.632 li
79.1245 348.042 79.5942 347.622 80.1641 347.622 cv
80.3438 347.622 80.4839 347.643 80.6436 347.723 cv
80.5439 348.122 li
80.3838 348.063 80.2939 348.042 80.104 348.042 cv
79.6743 348.042 79.1646 348.372 78.7949 349.271 cv
78.7949 352.54 li
78.355 352.54 li
78.355 347.742 li
cp
f
80.6948 353.789 mo
81.1548 353.549 81.4648 353.119 81.4648 352.58 cv
81.4248 352.59 81.3848 352.59 81.3447 352.59 cv
81.1147 352.59 80.9248 352.439 80.9248 352.17 cv
80.9248 351.9 81.1348 351.75 81.3545 351.75 cv
81.6548 351.75 81.8643 352.021 81.8643 352.46 cv
81.8643 353.189 81.4346 353.77 80.835 354.089 cv
80.6948 353.789 li
cp
f
88.4829 351.48 mo
88.4829 348.632 li
87.9731 348.183 87.5537 348.013 87.084 348.013 cv
86.1245 348.013 85.3945 348.941 85.3945 350.151 cv
85.3945 351.42 85.9546 352.27 86.9736 352.27 cv
87.5034 352.27 87.9731 351.99 88.4829 351.48 cv
cp
84.9248 350.151 mo
84.9248 348.602 85.9146 347.622 87.0537 347.622 cv
87.6333 347.622 88.0234 347.843 88.5029 348.212 cv
88.4829 347.333 li
88.4829 345.354 li
88.9229 345.354 li
88.9229 352.54 li
88.543 352.54 li
88.5029 351.92 li
88.4731 351.92 li
88.0835 352.31 87.5537 352.66 86.9141 352.66 cv
85.7046 352.66 84.9248 351.771 84.9248 350.151 cv
cp
f
90.7646 347.742 mo
91.2046 347.742 li
91.2046 352.54 li
90.7646 352.54 li
90.7646 347.742 li
cp
90.5947 346.193 mo
90.5947 345.943 90.7749 345.794 90.9946 345.794 cv
91.2144 345.794 91.3945 345.943 91.3945 346.193 cv
91.3945 346.423 91.2144 346.583 90.9946 346.583 cv
90.7749 346.583 90.5947 346.423 90.5947 346.193 cv
cp
f
95.7935 349.312 mo
95.7935 348.502 95.2334 347.982 94.5537 347.982 cv
93.8745 347.982 93.3047 348.492 93.3047 349.312 cv
93.3047 350.121 93.8843 350.661 94.5537 350.661 cv
95.2134 350.661 95.7935 350.121 95.7935 349.312 cv
cp
96.4429 353.279 mo
96.4429 352.75 96.0532 352.55 95.3335 352.55 cv
94.3042 352.55 li
94.2041 352.55 93.9541 352.53 93.7046 352.47 cv
93.2646 352.77 93.0747 353.14 93.0747 353.479 cv
93.0747 354.079 93.6543 354.488 94.6738 354.488 cv
95.7534 354.488 96.4429 353.879 96.4429 353.279 cv
cp
92.6548 353.52 mo
92.6548 353.1 92.9248 352.68 93.3647 352.36 cv
93.3647 352.32 li
93.1245 352.18 92.9448 351.92 92.9448 351.551 cv
92.9448 351.12 93.2544 350.82 93.4644 350.671 cv
93.4644 350.631 li
93.1646 350.371 92.8647 349.892 92.8647 349.312 cv
92.8647 348.322 93.6143 347.622 94.5537 347.622 cv
94.814 347.622 95.0337 347.683 95.1836 347.742 cv
96.8125 347.742 li
96.8125 348.112 li
95.6934 348.112 li
96.0029 348.382 96.2231 348.812 96.2231 349.321 cv
96.2231 350.301 95.4937 351.011 94.5537 351.011 cv
94.2842 351.011 93.9741 350.94 93.7544 350.811 cv
93.5444 350.98 93.3647 351.181 93.3647 351.5 cv
93.3647 351.851 93.5645 352.13 94.2842 352.13 cv
95.3135 352.13 li
96.3931 352.13 96.8926 352.47 96.8926 353.229 cv
96.8926 354.059 96.0029 354.849 94.624 354.849 cv
93.4146 354.849 92.6548 354.329 92.6548 353.52 cv
cp
f
97.9248 347.742 mo
98.3047 347.742 li
98.3447 348.482 li
98.3745 348.482 li
98.8643 347.992 99.3643 347.622 100.024 347.622 cv
101.013 347.622 101.473 348.222 101.473 349.462 cv
101.473 352.54 li
101.033 352.54 li
101.033 349.521 li
101.033 348.502 100.713 348.022 99.9336 348.022 cv
99.3643 348.022 98.9541 348.322 98.3647 348.922 cv
98.3647 352.54 li
97.9248 352.54 li
97.9248 347.742 li
cp
f
103.245 347.742 mo
103.685 347.742 li
103.685 352.54 li
103.245 352.54 li
103.245 347.742 li
cp
103.075 346.193 mo
103.075 345.943 103.255 345.794 103.475 345.794 cv
103.694 345.794 103.875 345.943 103.875 346.193 cv
103.875 346.423 103.694 346.583 103.475 346.583 cv
103.255 346.583 103.075 346.423 103.075 346.193 cv
cp
f
104.935 352 mo
105.195 351.67 li
105.604 352.01 106.035 352.28 106.724 352.28 cv
107.474 352.28 107.863 351.84 107.863 351.33 cv
107.863 350.73 107.244 350.471 106.694 350.271 cv
105.964 350.011 105.165 349.722 105.165 348.901 cv
105.165 348.202 105.715 347.622 106.714 347.622 cv
107.224 347.622 107.733 347.832 108.083 348.122 cv
107.843 348.432 li
107.523 348.192 107.184 348.002 106.694 348.002 cv
105.955 348.002 105.615 348.432 105.615 348.872 cv
105.615 349.422 106.174 349.632 106.744 349.841 cv
107.494 350.121 108.313 350.371 108.313 351.311 cv
108.313 352.03 107.733 352.66 106.694 352.66 cv
105.984 352.66 105.365 352.36 104.935 352 cv
cp
f
108.985 352 mo
109.245 351.67 li
109.654 352.01 110.084 352.28 110.774 352.28 cv
111.523 352.28 111.913 351.84 111.913 351.33 cv
111.913 350.73 111.293 350.471 110.744 350.271 cv
110.014 350.011 109.215 349.722 109.215 348.901 cv
109.215 348.202 109.765 347.622 110.764 347.622 cv
111.273 347.622 111.783 347.832 112.133 348.122 cv
111.893 348.432 li
111.573 348.192 111.233 348.002 110.744 348.002 cv
110.004 348.002 109.665 348.432 109.665 348.872 cv
109.665 349.422 110.224 349.632 110.794 349.841 cv
111.543 350.121 112.363 350.371 112.363 351.311 cv
112.363 352.03 111.783 352.66 110.744 352.66 cv
110.034 352.66 109.415 352.36 108.985 352 cv
cp
f
113.634 347.742 mo
114.074 347.742 li
114.074 352.54 li
113.634 352.54 li
113.634 347.742 li
cp
113.464 346.193 mo
113.464 345.943 113.645 345.794 113.864 345.794 cv
114.084 345.794 114.264 345.943 114.264 346.193 cv
114.264 346.423 114.084 346.583 113.864 346.583 cv
113.645 346.583 113.464 346.423 113.464 346.193 cv
cp
f
115.924 347.742 mo
116.304 347.742 li
116.344 348.482 li
116.374 348.482 li
116.804 347.992 117.354 347.622 117.883 347.622 cv
118.653 347.622 119.042 348.013 119.212 348.602 cv
119.762 348.002 120.292 347.622 120.842 347.622 cv
121.801 347.622 122.281 348.222 122.281 349.462 cv
122.281 352.54 li
121.831 352.54 li
121.831 349.521 li
121.831 348.502 121.491 348.022 120.762 348.022 cv
120.312 348.022 119.852 348.322 119.323 348.922 cv
119.323 352.54 li
118.883 352.54 li
118.883 349.521 li
118.883 348.502 118.543 348.022 117.803 348.022 cv
117.374 348.022 116.894 348.322 116.364 348.922 cv
116.364 352.54 li
115.924 352.54 li
115.924 347.742 li
cp
f
129.573 350.071 mo
129.573 348.892 129.153 348.013 128.053 348.013 cv
127.574 348.013 127.064 348.292 126.484 348.802 cv
126.484 351.65 li
127.034 352.1 127.534 352.27 127.903 352.27 cv
128.873 352.27 129.573 351.37 129.573 350.071 cv
cp
126.044 347.742 mo
126.424 347.742 li
126.464 348.342 li
126.494 348.342 li
126.964 347.973 127.534 347.622 128.124 347.622 cv
129.403 347.622 130.042 348.582 130.042 350.071 cv
130.042 351.7 129.053 352.66 127.923 352.66 cv
127.474 352.66 126.984 352.439 126.484 352.07 cv
126.484 354.709 li
126.044 354.709 li
126.044 347.742 li
cp
f
134.933 350.151 mo
134.933 348.882 134.203 348.013 133.233 348.013 cv
132.264 348.013 131.544 348.882 131.544 350.151 cv
131.544 351.41 132.264 352.27 133.233 352.27 cv
134.203 352.27 134.933 351.41 134.933 350.151 cv
cp
131.084 350.151 mo
131.084 348.542 132.084 347.622 133.233 347.622 cv
134.393 347.622 135.392 348.542 135.392 350.151 cv
135.392 351.74 134.393 352.66 133.233 352.66 cv
132.084 352.66 131.084 351.74 131.084 350.151 cv
cp
f
136.834 347.742 mo
137.214 347.742 li
137.254 348.632 li
137.284 348.632 li
137.604 348.042 138.074 347.622 138.644 347.622 cv
138.823 347.622 138.963 347.643 139.123 347.723 cv
139.023 348.122 li
138.863 348.063 138.773 348.042 138.583 348.042 cv
138.154 348.042 137.644 348.372 137.274 349.271 cv
137.274 352.54 li
136.834 352.54 li
136.834 347.742 li
cp
f
140.114 351.211 mo
140.114 348.122 li
139.365 348.122 li
139.365 347.782 li
140.125 347.742 li
140.185 346.354 li
140.564 346.354 li
140.564 347.742 li
141.954 347.742 li
141.954 348.122 li
140.564 348.122 li
140.564 351.251 li
140.564 351.86 140.714 352.27 141.374 352.27 cv
141.554 352.27 141.803 352.2 141.973 352.12 cv
142.093 352.479 li
141.813 352.58 141.514 352.66 141.314 352.66 cv
140.384 352.66 140.114 352.07 140.114 351.211 cv
cp
f
145.664 351.5 mo
145.664 349.871 li
143.685 350.102 143.015 350.561 143.015 351.32 cv
143.015 352.01 143.484 352.28 144.034 352.28 cv
144.584 352.28 145.063 352.01 145.664 351.5 cv
cp
142.565 351.341 mo
142.565 350.281 143.524 349.771 145.664 349.531 cv
145.673 348.802 145.474 348.013 144.524 348.013 cv
143.884 348.013 143.325 348.332 142.995 348.572 cv
142.795 348.242 li
143.135 348.002 143.804 347.622 144.584 347.622 cv
145.713 347.622 146.103 348.442 146.103 349.472 cv
146.103 352.54 li
145.723 352.54 li
145.683 351.92 li
145.653 351.92 li
145.164 352.31 144.584 352.66 143.954 352.66 cv
143.195 352.66 142.565 352.25 142.565 351.341 cv
cp
f
153.263 350.151 mo
153.263 348.882 152.534 348.013 151.564 348.013 cv
150.595 348.013 149.875 348.882 149.875 350.151 cv
149.875 351.41 150.595 352.27 151.564 352.27 cv
152.534 352.27 153.263 351.41 153.263 350.151 cv
cp
149.415 350.151 mo
149.415 348.542 150.415 347.622 151.564 347.622 cv
152.724 347.622 153.723 348.542 153.723 350.151 cv
153.723 351.74 152.724 352.66 151.564 352.66 cv
150.415 352.66 149.415 351.74 149.415 350.151 cv
cp
f
155.165 347.742 mo
155.545 347.742 li
155.585 348.632 li
155.615 348.632 li
155.935 348.042 156.404 347.622 156.974 347.622 cv
157.154 347.622 157.294 347.643 157.454 347.723 cv
157.354 348.122 li
157.194 348.063 157.104 348.042 156.914 348.042 cv
156.484 348.042 155.975 348.372 155.605 349.271 cv
155.605 352.54 li
155.165 352.54 li
155.165 347.742 li
cp
f
157.835 350.151 mo
157.835 348.542 158.854 347.622 160.024 347.622 cv
160.684 347.622 161.104 347.912 161.433 348.212 cv
161.173 348.522 li
160.863 348.232 160.504 348.013 160.034 348.013 cv
159.055 348.013 158.295 348.882 158.295 350.151 cv
158.295 351.41 158.984 352.27 160.034 352.27 cv
160.543 352.27 160.983 352.021 161.313 351.721 cv
161.543 352.03 li
161.133 352.39 160.624 352.66 160.014 352.66 cv
158.774 352.66 157.835 351.74 157.835 350.151 cv
cp
f
162.725 347.742 mo
163.165 347.742 li
163.165 352.54 li
162.725 352.54 li
162.725 347.742 li
cp
162.555 346.193 mo
162.555 345.943 162.735 345.794 162.955 345.794 cv
163.174 345.794 163.354 345.943 163.354 346.193 cv
163.354 346.423 163.174 346.583 162.955 346.583 cv
162.735 346.583 162.555 346.423 162.555 346.193 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Max) ()
%%Title: (1805.m10.i307.n005.F.c06.1023148042 Geodesy contouring land. Topographical line map. Geographic mountain contours vector background.eps)
%%CreationDate: 5/24/2018 1:04 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3QS%g@5"8>hAr[&/-8?3Il[^-n5SdfK]NjToh%@ZQGdrrn_j!28Rr5mO[::k0,@jQ0t0BX-].3G/%%c>1L.]8(\JSAPZ-c
%3KG`4*q$N;/M6?mVe5[e5"WB9Djme7Y%*gBDDtu_lqTM+8c1DKSjT7[^DNOmZdH",pV\"?W=EEI)>PFm29`G`Bc9-q'&lHWpco%U
%F^YtXJ=fEFqN,DX;r6m6?lLdY=nd"s5.W#HP!?!+Ve4KEp,Y[hZ<MO%ll+%qFR$Nl2WtZ*=kLX0T2k[6P;FdZ^X8flHA9,kA'aV[
%.0?+$2R[_L-j:CGaWHQAU#1*3d,=g.o(`5n\(@8AZeuEY&mZlO9B$ikm@\D>8VWi@2Lp:b!4Jtl9d0cLB!^;IH6sf$+NP]K(]D\D
%(T0(9J5VZajcHWlK!HMP'TXH[+\hX.6:__kf--F(+-u_LfX#3/A[B:1)=-qcet52aKu<k0XSK6\0KWo!Ws;a*8=NB=E+kT_#!b0g
%So,BuZ6MVtIp%hadA`Qt?q.cU7l#`\)X%$Ae8JrYT-c<6cPANYS#q9j:,X")71BNTjO%PXUFEcA-5G6g;=Z_'ic#n(9WK@KEkm:I
%*NNq__Ef6>!$m*"kAJ<i&%PUR4<"0R5S2@5rp%d9[S[%:f/$XVc?\@lEB(hu>j*l&CSt@tK\]&oGO]Gg34oF=hls0JfARP:)beXt
%1LNbk_iYB1X;4S/g]*;tDq[R]d>&ff4*JB0BiXNWrjNdrgI9ST[9BG_robN?qE:mTc04eK[l\a-ROO`G:kh>leb4JJBteKY9!t#7
%ZIZcHn[VfffcB"cZKJam"CH*`e/4cDa!^u,n9r[(c%M`"?u`VR(ee.4XWM/mDO\Oeg<\$&\VAKe3Wl#q/H:6-%%ta^9'g6b/mZ^.
%]\*Lna=Q@BrNsJ`:MuI"2XQI=9ti[gFgY5E<s.i.[`[FBmc`9]UkfK6k%;Vdd:cY4NmY"4,u;2&n('T)gMRF3J)g:>8u'.`T5^SV
%%fY-4g't+;*%Wo"Oolc68e!TVZeI:lE<Q]!Vfgdhpj!;PlgPMed$JjuQZiDtXu7-iek5Gl/?P'g&^7nq`qW>^F]e5LY2U!Q<OP.9
%^8!YOm$%J*!0*PWMOt/(U:Fa@^e=1Xqc;#_b,4!2UJL-rf8R.0,ff/;+&47LJ6a,%>J]6q(6.M@O88BQ0HiUO:GrEL4^n,/H'g_r
%kC\.W=s`eeN6]aFIYrANs(F;on7*"`e$4f/SdC9j*BM2$*TL_';U&s@4(aEC&3LmL;"0)ZnXnZ6"<2epjZ.5#n(Ge"Uoip,V]SC'
%c[,P-Q$]o_]![JDm0+G:rRRkbR$q_hCHWK\3#s@MNZ2AT\q&i(FG'(<$P<<)*!eImkXK%.cQT;"E@5a]$eWIF:C>6Hjrr;hf8Kt6
%F7?9:$`L;Y]"8tYRndeQq47a*k&X4<8O&/Ch%4n6pS8)NlZ\5Y"4f3=rIu73l#`F@3"Y/[9'5;%d8?Nf1miYG)Df=RT7^#u\n8N`
%55,(u2^[HOs%*5=Hk';[h`NOaN$#2JC:(<?Ab4cuq2[H5\]-Q9T/#?H^->*e6n"8.qjin\94Lj9-D9J?"LP%3buq1C3-#uK@<-n2
%Ms1g-m'bS%+Ad(ZbHU;cjb:W\>nWF5&=6b2$fZG[^4D9>=n+oBU"n,u1CrTE$\WdR2bg!91_8^1U"o!fEg;Xc^3nt^[^t?DQueBb
%RF,-^Km&m)Eq<CN*m;f<\Tob#<DMMLmhEsU!bQ%R\Y/F$U,dE_9R/`*O\X^0@5d[6UMTro03pT8T7h^O_!nsT0tY,>demO9_m6H)
%[aFN,JudPf^LsPFB&GR=04<DqGIs0gMSB\XFSj<8fWFL0,F0^U'&C@]`\`r.BUde6a4+lX]2Im^]apoIL1U=N^c%BShE^NA:\0jm
%;]EL'hN(m\m**e1RsYn82^t>>EHIl.mo57/R4fHG!#k/e<sa?a$p=*0gj`+;Ahe#c_WOC]q[K<aYZoqTd;f?>lQHpoO)kh>lArC0
%1;<tME6*tB*"YWWs$"KNT.Z5rk6/\2hAmH^*nAH:TPu"(:X[;)fiG/?FdEeGs)m);1JuCP^L8I[*nQ-Zl:pIY1E?GZR_X$Og8r7U
%?`S3@Rg*h?(@(?KF/-[h:6T-=2__n2!#^DTRVIVgmRCp@-`FB,^`^4>6(G;&q*%7<03J"K[u!SplID>8cOF;pau2/Z*dQOiDB/Zl
%nu'a@IO3J?'h'lLJf^AOWem+58T2Y_TRBU^r6elp:\joeIM>"2jmsNM'0kU=$Cn*A#J,Foaq+=GB-,btfQJLr1!MpgPU!s?3@6rN
%i_eZp;7?==.-u&GComG<:1]\B]\i1I7:n.X1G^mk2b`oUl]5E8Dq^b*%<!#(@;)Pm%/F4ECp(FJ<-`niVZ>O8kqcCIs%W^h*R9gs
%".`G6;/_jCq4>B#)S\n[BD<1B.l'f1@!q:<qho>sa'"Q$Du"4a$NeT:Zi)M:OoLtbqkmJdB#X8`p]UiiSIHH:fPVd,R.,/'hnb8_
%P)SWi2,\P4<\n5>h#R$]D)DnJ:0eR+&iHH71)kMF6!fZ3VAAi>aJ@aP\L8#<*PU,m->[O^<k$m=8g_:Ojj7\eUraLgY/p5",<tnl
%F./8QDVQ;2j&@OkWOGVTdSM`pesck;kG!Pk'+p<Fb05`5:#?<O&TssT^U^)X[#;MbLIl.L^(2%MoZX6f2o'h8j!dIXGN7k5*l'a4
%HUc%%<GBc.QG#o2DRqi(7Cl2#NgALAO^U(=V1,cN5q.$mT[D&K!m?;S)[4Pjr.omn3J?Gk-O"%uC70g71\;ug;8P8:\q"VLF](JE
%0(_QZXL^14XP]g=EM<2T[Mu^+SfeFoaAI,%JJIQ0.53e0$-?JOJo]P][qrY'!e[Y>Ju[i$phRi`1u+YgD+lpp0NqN+Q'GMP<BKs[
%(UF:Qq+6gM#gc3$kp2-*?tL^50uGA9>`iIK"ligZ6n-AVU.f\Np059ed*2`11NsVRNC;$Kl'_(J-n\cJ)**WG/I\U/adE(6.&HBS
%(<$_:o<Tk:ZRGj.[J?,$;>C1,=VOq0AEp;Gr%-!T`^"Di1FjO>XIhq$7>kjrp$[2BV=^>(U::59<i#_eXO>>PR2T/6r.<Le,V<[+
%niTu$]]PHG]c/nBLCh4B(R*Xj\%9=.Q?c#aqc"X9i=+*bg+PB&^KJ,3kIY#[rMsl8RAaTng+>+%^%N2SVTe_%$P^hXg0Ci+p"E+'
%[8[B7k3gsY?(5H6Ag3Ga[G"ldI8-ceS[H#72V2\bXnH&-g1Wq=@06,hBg[^b'`?dMlqA,ok@4(+0iI1Dj8oL+0q+$J(sg9n7s8kj
%OTKsrl9O?"har*(s-ZprjfC\j7]p1tI$h]*O42+l<i^%;XOd:;WZ4),eM`Cnda`aG,CLq.l>Lo#br<>^jYKUkqj4j8gN]:4kMXT<
%F.(O1Q1LJAhA)`@hh9E4S+aHur>R\h9SV([HplmT]F=g\*r$\*cg]ftr8@B.caZY$!r9uu0@T&%IBOG%rX4;FABsALHI;N3*9)/I
%c@>@$s"opLg4fRMeYB*nVYj_arr^68aZT*%2qrKlipc"-H[=sqlEa&3JqO6^9POSEahIUu\YN)3@&JhbCG'">YGO,\K/>mGf`_e%
%1fo*WMTZG;miBFeK0c"B>r<kXdC#`6osW93=M7nem("kD1M\4bdH-;D_FVs]+l\EeSNl?tJ'r7As..bk^C'()rHA;Z%o+&scg/@;
%qX;)r4+E[=?V2cklb@@'19^`'lbB'<O&uDu\;3dREaJ@.dT"SX-ar.phg*Ij?M"-$0As\\YUYoef1agK#RFUOGjNt:M0V.""Xid0
%UA(qLPCi(tfkB$QIh#Z"Wn)LC+]uTs79r1QEkoW+"rF;Phl2.pkE^#Gh5=NP9tR65ir+jqP&#m9)7"OBCn;gIjnU,;G&*ZrS#=AW
%Z1Br)@I-*Np2>9LO_Von>7p?;bm5.qX(k.R=E_UK765$@@X!d^]63LdrbN2S6?A:72#akNrSDn)LE)L,Vrskc:iQMrfmmuno4K:r
%-_.&*=sO]B7E8l3B2asMd)[sQB-u:QPgMG84n/((_c/!*\o"bVnO_o14ZP3iP,o%o@uu0`&c6mq</VLGD<d0?"L_Y=E&_C"GaTpc
%k)#FMian^+R3u>'M3hQNeMg+5YVZ_^]W`pqahQ%502ijAc4_j<8\@aBQ2!Q+I&86AP\1$C9P9I$'Z3^p7cM$C;>]`uS+u(oUIf3t
%ftM:>bln.>b9j(gL2"D=_@6q&IbDY`Hh2sgK6>X](Vf?3'+M"/1TYflm;q;I`<pI"*2g\GR<IWc*H#>,YG\8S/q,MVT%h7VoA'6J
%VXJX0dhh4/^O9gFqpM:moKRCm;8-Y,mGI([WVLF-jh&$FCAq33e@5W;s#@WK(IaYIe"L:77fJbpCUo#4`S4EbVs+tXWRkI"V:%5J
%-k.3'lr#.UR`lie)#oLK^gEf'pC%8'NAA8Q$o0n4R7Cqs&>AV,\+D\9rbe!,*CXK:-=uXjd1%cee(laW6,uQJ'BE^@i4/<R-Kn(4
%"2^$r4$fM4^Qup-?afmWnefM3O"j!Vc-5?*Zu;&HE!+!?O"n&)m]=P.4HD5C@n[hQk';o2*b.\1)#p-4X_5.)VY&^)ZdM'coOU?*
%1$![^YOl.9D(I`cIKce2l4MjWhNJ#Dj<BL91H4)g3_$)]1lcCqc/SeGgo!CHVOu)ck)bKoD2Lg79R"_D^=b!HM0<4tT+l*Z/gP3)
%S&[eC+0Hl([.?*^e9>!ko8A?8l(T>&.]1Y!Rr03"dVX#jqHI9oj@6i/DbPHZZ73:<.HKKR5s<t^)e)SQMYUOLmgIIN]dmf;ae,bA
%)t^0D5D=QafPc;WS^!t'.kc"u"7Q&^-Qg2\p>FXM;mftZaD7@qFV>XBVZU;/J=2f-?Z(C^o&F%o5aWYeRZ::_ck1PJn(IO::hJrr
%kMghRl>MoHmsX=bcX&5qqnC0s(FQ3]:+h!YrooB^EphGo4IVa0F7X'_*mICa0_8sq\j2WQF&Nn"\SrkXdG-jQS!IaU>Fqs;E=KpH
%L3"siRtl&`X;C$XgcV*rLNCo^cH4rmS9"kXb_1%'rYku^mXU[[FOLiM?.a>2g+hC8O7+.9ICD..\8\2*(G\ZJ1j/TorJ\AnDW^DQ
%R,<rb^K4kKn!07_E8O02rA,7#9I@U/!(W'`Prr;f(o;Ps6_!GN;6kL4_lhFAh;6J4S'38G2^uI^q==3HOX$4^b_d76On!$]MVJj(
%4'J3TGa<D_kVP)!X\19m9RJML2V[]DF)dl[HQQh9DNX[=]87/,NgLNu\UFW\^1=`oF2iN%$EE!!Y&5FsYh,EN5I+^m^qC^A.JR/<
%,jG"a'r,<N-/3\=Gl[`N^i97$g6o3=mbbPObnJsHkX,!%5HSPT<@r1:F&IZk>hmD12W1(JFSA>`8V'9ooE=UCq,Qi]dNUkAem1Rb
%rE!li."Np*JhuZ9brp]iB.uX-oVFM=cAZu*,)C1<s$D\:HH=%_F($>bh5:0bgF`"i!"Oe.SYEYnoF%4a\PMjYD^<Y>Gc%%+0>9Ao
%b&-MCSFVnWn:.t^1f&;p6;Oc`?Ct)(@&HT$QODhZJ$6">#(nbg0Xstboa0n82__mg_9Ef*ihUG5pGq-r5*%f(G1#MU]irm,p"G+f
%ZB#HqQSY^e6ccfXS77112icAGUeJC?F9BFf)b9XKC?k3G(F.kKD4H'Hqp4!9=j/#7?T'mG:=$+@o!:]E?b2/`jG<9t$LVh\,LND*
%Vp&VXq&A0`oUW1RrRL@aS"qL$nV`6K&'+[^okDeD3W7#h2mdWec@SBQHIK80UUqV<igN<thDAV$(H7+s<NT%TZ>8*`_iFeeDDgst
%*5:lf`Q,03,&WQ!2"Pp%"M_i#)*o'VlI=^Sna!JS'*7:k?[<c:P0uS4QV;eC8c+gT2?Up]Dg/u,9*n.c_CrN_qHFY+Aq2d<Y7c(=
%Y7dI!IsR>U/tOD[2(=u>L\a(M<og[3MV1R*SR7W*RDko)i,Ol?mMWuuH1!Tj37`FSe0^[[?7E%!^K!=c8Mq,Y4e-01B!]Be]<fUk
%r*5Z7&spQbH8pS23;?$`TjtI@'fU&/QpRDERTD<<:>2&,"dp`%-Ga\d9U#.FkGaNOW'cTX`>X_]K_&:@Fah:"f,V'n76C;(99>HK
%)4l1G[E=,g+d"Z#Ri[UV<Xr^bG74XXHeb]+XjLL)qqk8?r2.m!EfE9\HV@bi!ZR#^m@rj%GP^-akKml[<O:^GmZ_.@TDduI^F"n/
%_l?TBaLW.']<MD:p.MePIbsR@6>T!h`;"M)!GLrg%j?19LOOCV8ru.ta-".38"bX0rqYsIoX@r#QcBKM]-*+=/c58Xq1^Z8)Je"X
%O//ek3(Lb06t5agZe[;?I5oP-r"G69<TRZ\+dqLN;8`tb[,;1?irpGigQ48eHYMD'kBtnC:].X3T:V_CG6$E>kde7a4QYJYa&C^b
%Z4(N4j57qM_mad%f^TEX)k_uT52GefO;\%k)oAF<WhcZs6DCD>Y=mpY-P6?#NgF;,flcXS0_"PK5Y(q:)^3/_'[7L)Ze$u^+M$K5
%G.r9D$8ZdN*KntX9G.4%M:`dIiOAjK8oJ-Qon$FS`dW)l0nY_'NDf_Y%6`P,4M1)A^;[>`Eq(<Q"pk#Cf4P-@0tqp-&)-+u$5od>
%nmhZ3ZY2::WrG#X?=1(R[fY<+dOt3^&;qio*[#"X@DceE[`5L\c2oh]GS4rmr4ZHkc3)8fDb]g6Xn&%a?$c:m!EseO?#Fd,IMeVn
%jAYLP3o^aCAk!!:l&L7aGuPN\(;<r=oCKK=(JpPZHUe2d0$lK0I=3Sq"XEfQ6O`o3G,]A.H>=8KM:;-iA;\-_L_"pXV$D4O[P/*P
%8i#0uGN-R@\l&h6E3C%]mrU6D_HH/JHZjH;eDDojd;[]&G7\U>-lViMqJXGLrpumrs7UoUQRI&.^J=l[c[[A22QY@$;<*P.LLaOa
%4<(2qdJ*]X=)Uh\)]?@OH1Kmm+rB5R:&YhhGOJEV3uN=5o&Kf[b-D`07HnjpIX:(Em,I38^niM(60#p[_><d`52F/AJ-G3cDVH8L
%;m^o0C1PR]n$lk-5>NVic+G)S2-pG`QSa1e?9::jD?X.SWRs_ilksC(\,Ls'k^Rq8^+r?M\Dk&]hW([XbOE.lf.jmLkD/:NR"+`j
%WNt&1MH7X[3VnG26qq2RNb+_s9u:TB0Y2PqcbZ2j%aD<0DgG1'Y2/<J[+o&5A>qkp#CNh+gQQLTYF@,M6het!N'tn&bW-"VQI.jN
%B"-n_27brWA,StsHR%j\+X/j'jLF)_pNrMAiWbLXhI"iI<Vo89o]5@^^HEQ%f8)@ZZ]'K`5!kZ=H:hZ<Qg@2^g#p-P[#K*O3%^t`
%dBL3W!0P[j[M=*[]PcKl]c>fa](I6&@i8(Dhm3P90OJuN5Wd3KWOF"E[fL'jN]dAD(uRpYo^MWDgZ[Q/nBf9,Hb.*dAO-s9Oj6Fo
%=1!r^fgB*)i"8)j+dPSUTR5B^)`XL+2>[hmS1nkudK97_4VME`8c$HolCC5@6BPhVI_RBt\l&I_IW!c>G0GNmJ%G3;3Y*APpe8:/
%]4a#rc$$kL*Q-qDa.B"u1s3,a58W\[k`<#-pc2u1n6W;iou#Pgg-:[U;Le=nH=_K$33dQX-UTm4Rqmh*??jNnX4,+<mIFITb]tZ?
%<<<TaYZdp%#MSO(Y0'::UXc\5+E)uZE3$Vci^0CfbNc?+]&.0\MW#P`%>]^FhimdN`]A#rp5C%$ce9\?JblKA3kT=`#JC.[Z]dt@
%oc="EJ:T:)rJ!dk$Q7c,a0#pm$>G0qQjuSn:\k9qI8AGl@5cu0=S:bPm5AYCY(m]e4NB\1::k!FB_IaU2G!S[:E0(DL(66'(@-Rd
%miIi\567G,YhHn_R-aSM35,a+4&DkCknkAf+keRD"1Sa""Q[BApChqa9\Zh'[KFr3*!VETfq#EOIKN-e`f]*Sg@#M]D[cTWN@2=T
%,-)WA`fOijm+/:Cm37'[s.j!,LtLs\2CUY9g_CM1Wmk,,a/^4i&K=F'k<0hk2;7p`\=G?!GmNQ(@'+G+/nS9%gG?_<T-=%oE/Rc#
%Bct74*J(]nf<.$tTctsB]2At.]-_JQd;@/U#F>;<W2@tAGB"=>pg7dWpK&7$*tmXYLQp$j$MS3Fs#*G>DZII`obs_)STdPTB,BBN
%G5DA2CNi,gnL/B/:`ur)[[2DX"u,I1A+=J]/9T)Yo$C"-p(;n]S)(&uIXJB75M@9m?1*3nU\i2KNbuGb$!Bt6PAt,\e?K%/mh>LB
%&n4qD!UYQ$3Ykl^`glU^ZNP3O#0OYO`+[*`rd]o?H@9<WDpfPN%U[TNML3A5n<oAsZK=7(f&4ql(n^FMfmqf-LI?9pa'g^uNL@!]
%3D0'-Y^",R-2Z^Dk`l^WAE_ia&g,Q0pD@Tqb9cIp89h?$W2b*'gWF-[Wj[j^+=Z8k,Tc`>%j2VkZB[Yn0USnqd2nS#c^<WH)&qo>
%M4>/YBG0LjA&+dJbH)WG\:0)PJ-_B\]4Q9dr1oh<Z+rLX5-[Mk([)3Sd_fr'(44QaqoGi>mE/B]HitnjU>l.qm0EsNlpcP%qYfiV
%hZtl_`2_InB/PE!nh($-Gc>@u53:;>aMFR23M:&ZfARROGP'4;(]>Z\ND=0FD&16MU5qAte:h#g,>a,B0G4DKCs#sfX0;Go\!;HP
%f3lhLDO3Rq/aUM[CY8.Z`\GLKq0RKFU:8u_Q21NX<qet1*pA5PfW&.j2bH;!RgHc:$XD*j[T.&76KL[X/7s<c7lqeR:H24\?gNf+
%HZ+4)0ANW&VCFOYSVl8"OH#@^7X"d1"8:bBp-HSOP*6k4[U-1Jk7p(mjm,1P/rN->$V1N4;r=n*d!Ik\I%S<-AJ+(EaB$][EpjoG
%lGJU-,9KU>Jo5a$k$A5S$lo&JVte`)m!qOh]]5jI;Bt3cF;0]e%<+dA#OQC.CU!iDOQ/-rVGI^!b7BfN0?EVh#S8Y4?b6\aGH:@?
%V%5P]e-t:oXk&7?6YBk"J:Z4_WF2/<-UgjHriCT?CGP4CiI#:X:DC^fRWbkm7!\NK2t"e`&dkfm8l,f`n%&-OIPbm9@(Sn/2+T'T
%#Mq25Ve8-J7(/RB]"Jr=gG?rK>N;O<H,10;G]l/<)8.#Nd42J%reJUB3\$&U/!uoe,/oC?UW1pF4fM]cl\j/!/lqjiXahK6J;YD^
%9J;APZ"OrBXPZ"8l)XTHjr2R&P6kBDY:sGOhsHXMb6#EGQb[-9JgK/Ha-(<".9,XR_rPNJ4AKlp"2_;b(4J^c^W6R#U5\_`M_R9K
%`s<XMo00lZ2qR913m:sJ(0Tc5A.8nq/UNl!oN3].2J%rYNH`[WN:o[L'Z6XC"."7`.(T$Yb!@D&<V:=[mnV:gX!eHr@6bk@9@!CO
%Cuif8`@S]bS^/6>bX4'>(8*MX+s6S]dX>/shWX[K+7?UEC:?m;m_L^FDlGT^jpU]s)m+ZMc^p0=-.@esQs6oO4\G`oqX*$+cS>B4
%P]!M$F/)u&g23X_3^ED^EX<rI_+WR(E"^>A1)We]!aa%1WKAK@kBQeLY^*L]&hu#jpVl7S?p*/rD:ZSSQ?PR\?!gl/=@T7$W1<7O
%'ONhG[_$r9m=_gT.u2MI^SI`*_P+EV99P@r]#gj\Fe)`q7d`WZdEV?-2qgD+2IMqd,jXhW^%QgClJ>)j\ga'CKXJ3n8qoY_eQ6Nt
%b?(p@RS5Agea)$to'%bZ>mJtk9fq)5:?^40gPW2,:.gE\nYaCL"Y>k=E;RU5B3S@.ML'_lEuQVT6Kdg@3nc67(Yu0jn"ScYW#8./
%0D3ep]B'AN6h$@iHoUOA.sDeE]Ff!cL+Ddt02YZOq([gj/gj;>p,T^pZZ8>ZJk^G&pXOU04tSuH1ZaQS*n6bsA,2e$75o4#Pl%\D
%rj3RlV+U=#C8*%<6oJOJic6/j[/Lnu-<AF?$+%CTID50N77nl$Nh<C<WfjL3V0Qsr:cm7fA(\BM0?5#)4"J-Bi3j`Nk*M\P!.Qi2
%?P?ic-$"GNNO;A/c+qn=A4(4jDHX!NdB/50:+='cl=#,qALY1I4U931/#IV9EojNjfJ%isr8H4AE8?I3e6J3SE0X^d-8M()Mq#<j
%j24(&b`1W:<YP1T@.V$Y',HJ>4#68JCC*8[<n;XhQ5epP3GBY:[c;MF&nDDs?I!ThSaS8C@;IQo]n,JZ/u.>8pLG&f"d\,)$Q4eK
%$#HLufr*)Qe,es/=AM*.fn:k!!uu^1"h(m=lU#Wi]#?#-f\2:KT8r=G2$Z3tq2XL@ZOHJ`mgljG2r"JL\oinD9Sp-uhK\UBTK?k2
%G9l9RGq-c?aeqD0Z>oB(15qL;\5GFNg"]4aCrZmj;D4>?/02_;Jqtrh;t$l:0W9Ai\pW;t&$SHiGDobplbhD_7]<ZV&FIV8<q<4F
%5q1#np]K9ba9ACQc4%ml*r*Nr>e8]d7m!9qR1qitfHF5BA?2I*"kV<-EEg2-M9U%e7oA`JM@p`'Jn6-WXo<&rg#1oG^)VlWFubIU
%[&k&0BVa!ZL_]W1rR]\L6-U"k44M%3Gd4B$3peq<`Eo:=J#]"&e`F5(;,^5n;akSF/STAhl^XBtM@=Yp0eu!aFuT-!cP)o)$pLOc
%A.M#Kb`ccq/O6;8je&"IZ/b`V@6.9=f/Wc&=AC6dbq#M[hk7l)]V0.I$n#,&fraT8?GX,D@M>sSm)(q\mad^u=R0K2Q&Wjb_ADq3
%rP%W"Jkt^Gh=a04f)lWLkQO^*RBBge=C"QCW\\m`'E#Sgh@QiG).%349V;0DaUSDWqq(_jWmt>#Bd3JdP[3&24d;G@r8W6H_qJ9g
%dg7KSHV1AYBNLtlKoD-hBd]7Ob[uAuh$u-e:9E8@6@)c@?NT3`HE'qo??T?lK$l?ORU3^2ab$\N>)Ae.g2!J^:5h>4Ke&=4>$DBR
%%^,@S=Cssr3uoB:"a0W#OaSkO@jY`'3E_3@glIkVdrbH&n#[0e5QS>f&1tHfi`Cm=YX<i_nr*ua"1,RSVq)6P/O8C="c2s8@UOOU
%&]q5]r-G`8YcO$D!p@NTL#g(d?80'\P5XHC!_mg>7Jdl2UJ(-s4r6P3h$aHeeTS#O.=,=U:igu=VgS%6/1)ur(K5p8nNOeX-F-MH
%ZjiPNDfKAD]YgqV-?]T1gT\os+PN*fiR^&(a93AP^+/r[E.YiBOl:p-'%dtt;oLYIBiPWi:PFSiFpbitU5$\efTI5U'usWN_hmS4
%\D[-%dD>Oc#9tFg$Z7=^p-^fid(i%(\f$0c_Mm59";S-m6=q/h6frWM-/A,sX-0XrdW!A,3't`[#l[Erfbn7_G/i?87(0+XP5u<e
%"Jp`^2FjGY;K2M#qRS#n$VJ2i08Mn!+hi\p'0li'`\Fbfi#7%j;[o&L*GtqE)(4YA>E&;"=m2a)VZC%Ee_sTLBlC;4$f8\Ef`>>F
%IX0&G%%;D1[7+LM''*G2CBue@5(3mC016SA)5)!8"f)7-KZE9.);e1u30sL=@TA1A6NJ1cRk`?/&"/c+7V'Ho&=LUIMn+BWTrcD0
%8J>?lH/53AA.p%?%Db*2!9/#Qq=\%HO8q5$dB>8LTa=*?k$S@ub>UjirQ!t4-,BR^<B1Ri5b1,rbRj'E<p[1k4TL9/T`)`V`!YZ4
%X`Tfjl`eV$dd@417:&t`4I5ugdUr?L='1AM\=>L>3ksHkCg1ju`5`_b'OHMkU]$:J0lEXZ%9V`-8FXXb&C;E8PnicprAX2">AE4[
%RuW?u`I/@FN.Vfei<(X+g&%;.$EdI+jMB-J1qHBY_2Oqnnn54T0@NSuZ5]k)^GaM;IAuVP*2idEGXbcUg_?>ia,,&$GW*e3C6%6W
%_Gp0Q`aKnX5h&?hlnkTrm[kj#4)9mq9b<N_mP;&"M\G`Vg"t#?lFYk^Zbq1-X:bb:IN'2Y(86dVMiZm*ic7#P"jX!FB6WK(Z?"C<
%DcjOhE2cd^$0mJ-_SXR<dF,Y#&hGgW/I`R4JYRekAaDCII(FPn=AR(/Us`MJK'U%g"'W,T<V<_8j6hLd[u#C?q8V60.V*3Ng\2%;
%PdNg:?oqL#qKM-1-fXhE3,lngM-AgeZ!hKfKc.SD;)K,he:IKal!^rX3c1)k\NN7\=B5!%Q6AnHTCM-d:>UmhQFA<T&*4qCf>,13
%(`nXV"s[@&lfLJ75Um#eNt9ukEq`2.5h)A<3+5lLHo^YPf73ZAL1-U<EYa*d8QO+<]:cR\8\nb/;,JUt/=H^4.^Alqjna>pV5E_M
%epQ^]X8aS!ktTE2J^*l,N>kSDAbY44\L9^aeN@;tJH"(sm,TRESkf.*c4<:6\!K+_hCn$$lp7m>N20f--\UeHdO%i'onES']+5D^
%J),g/N1klKr@e53J$(O@hCrPQmc/Fub<,W1O>,V0j^s-4RrX/f^E2N+0IV<Yom_:%k!0rH$?8.L'%f3'St-T'C,BsM[/_@^br\,b
%E@ek/IKJ5>FbJtH=!r)47+b]1$RRW8L&?H^D5YtP'2%R<TOM>tHNWCYFAi]e^)2j"Xb90,C4b5CLfF5]Vc_p%\:PI4%5*&J'k'1N
%_1Ab<RHhS8=sIlchW#Q(d'_efn`XdA`E4*Q6@LK-S=mfdP=<U;Ik&G_4$bU(,"&:,\OIj8PcoeVp=8!QlR?+M"%MFtNeh[;qbSLc
%7G;Q.qu('hZlG$ZO.PV=RoN9#d]EYq-3=PZgX!<ngpi;2*L*^o)`@6d&Q.7n]A$%t0m.fI-)9Q<im$M#1i$UhaH70$mYf\ImaH&'
%YbkAh9\>I(OJ.n-hm4(-?T_PTb$M=k%:>u&VkX$WLA6',o?_0i2qP6t4Ylhh4_J'2<=%c7-(s4>,\a]JZc'm\Hs+RHD*mfdE4@T,
%?Ti=<$XidR(/k`KlRl<h,V_TT>.5%>0f^/a8X4<*rsLK;AM^A[FjR;fK%f$?3fb#];3XR6pj2h,X3j[=n&KIH)g>`V?E4(V0@l4C
%,@1ng:KndR2q^'->Ahd8&!>Scb>j8`k9a$:lA\!rPg&(s8?[J9/%2K%Id_ZT[/l]C:Fdt[#Lf`^mXOaG?d*,8i>_r`Mjlm;`Z%XT
%!_cP-<jood=4'QCk?e>3q@VFH=&h>efA>m`\qJ8giq)Igf>/`1?a$7=VG`HiOp3"HBKhChet9'Xq"UXNLc28L?L\Z-DJYRjDa8Q1
%LU#;po_C@spppcIl`_<;Vj@g'8%IDL*$rmS#&^3qfGet^.bu@+V:/[S\e'1kW.4:-Jhc4Zd]<7,=af`sh.$pM,@h)4m6HLJ/B00]
%Wp`\\_sL8%S0Vle3#-Q@EOLa=,OaH)qA5J>ONBF[`Js3W\6D`&VA5C5oB?M;EZQ>3gnsM3H6n`_I#ZS1?E+iL>D6Y*LB6ol<[]MG
%a&lq$1RL,EP$3f'Z;`,3?Z4i\P!*/5&\A/&0q,rF?oki)O9]Jh\mN,l9,1p9ITk9ua*895N-"H26+^N4/EIDNedDSh%H=b3q+a)a
%\_Y7\;7t<9QJ\(IN7V-Wqf1k8iG<Gu<a'JH/+`e\Am#T!P%EpH,7%(Cp8@s@;&eo_4sif$?s3+f"ECOSk6U[JpF,FDb4T3K=+#:(
%eZFJ!EjFKMf>f?^Yd[V/qT&9o:`E>uCd6M3&Wn*`5,e;e*8+-0MS@t=(>#W64o<mb9ZJ'R"d26$_)047=:bl_,rTY)#7$_;e;"]4
%o"fF*YH4V=Z-rl3WY_^D#RVNn<][Z0=-hQ\11N/,?E'Ygc4AR<4%7+,8fhLY0[]P[OuCqh\Z9h:lTG7,>K*snD4QGApC%;k!_AFJ
%#kGL#NQ`oUXnl`3WYX*2Vu.98H;VOhG_i.s1X2:n]05_]PI\SYHDrKIT"-PU;)*MO%>Bsj8+:6VGEG4"9[3GI1&/?sh$f&9D_HaV
%Q?P(*HjdVcibMuoeRR$Br%,80/`*0riEtT&l`OS.,(Ke$YMNV5T8a6X9&\#Tpm(e5#1a#6]6:hF)HqP7Z@r)[6/dS#0Z`#+O9u';
%91Tush:pb^h)c(5VVWEZgrlS`J-D[*`'5EA:?"VkdDKMY\@+E7]\CT?SR1ok/)VF>9+Yf*)l.'`1%isTX5bZ+B;;\kjskP-FC]f.
%)!AZrZr'cY/m$K%#J9g\V$Y>:h"pMq7P%n_=(jiJ-k"RMF$Y-kEM0%QmH9%F%da^.k!Ii[eB#aO/sbsu$*Oesgdu+H<Yt+)]EqeY
%.-\di-2i7qi&JB+M6=d*3U;$]k)Q41l1RRq<ODLPTCaWb?ehK:a36l_)-@rbf`OtgnO[na/qMg/a>nbeZ],7K.p137<$$ROHY^sc
%Nb=@V7[baSVp<FrHF_okj&/)OTb%@f,G@3`dTk<fSVC%%psW.oR`q!lHHH-9eMPiU1UQ]eCD]e*0r93>)6^C=5*f:-n8#@K3Od5M
%mJ+iFII"/%[0Nq(V'\F,SG2nD/p"A2q*HVPBY\I6'uEK8`I@[R?>(O\M1aO[odE1ERILl)J.bX4Z,G12^fF^C-7d8VT@,gbD5A<m
%ToJSRXS_Z?:o(_#L@54iX=+6YdRNl<6uWba,:9OofK+M%YS#?-]0/93!01C*\;YV0QOCofrO_6g\TtqD,T;XJ*[NMpPr<<=gC5H6
%4C31m*67=UII6Eu+*r.IFEGJQN*#Wc+tlXC3,q:qXE?@%dpU#bh;)kKE18<m@Md.d]PP:.A-4.?kc]QrVCILd,t5n+V]W.-RAeqX
%5,Vo$BKLUomG$[S6q)C`p![G#@FUKVej`6e'N8W/\roVo;OXCS*b7L-7U'HBZs[PJZR3:PK2JH+Y1:DLhF9QZO-0"q$+M-/_.:+l
%3s:IFnAjjWboh(3?;+K*AXDj%b/;+><&:gO:DVrq5E4iB;WVl'3heZ<LOtRqR\B1$G%tY3Q0i46I5J/t1riZUZ`3W0\/3-lc!a52
%i!ZXVXbB=#IU:c)(,*p2&A.>Ch5c>),>jg10mX*%!s5aOiYJKa@+qN#:A/kH+kcsNIIJ4(HQ&\ZKp1%.En.%-Q7Hm(aI]N3QhXR:
%Y"qgEPPa2D2[TZSguamnk=U\8M"FSG%DS9Xcl"hq]mO+&,qJ[pJ0^T?9RJY@+4i3I>hJG!g@qk)CVMc<!Ba8aOt-,@m^;(<Z(R$@
%qiUNgqK_i^1kUVl.JnfJ+.qaO;6?ZrY_K<?D0dm%>M5"hceT$m13/ntZ`\[cV=1*-#k&_qLI2c7"ktE_)]tqYG*gX(bsC+f&_+d/
%.(LGhaeMKfHAeb#EP5&+-!U^;XLYmGN7<>B7rEB!7t.@*,PT$'XH67#+>PN9+MJFE@Wosh%sLNV&Q`J)B]SS4Y-p(h5'^5C'/2)$
%DaZOSfg']@arlMk-GVb+V5D\a]@loIW)LdLXIh#c^/\/?_5h>pjUK3gC9=eHW)kW5Yh;1PJfr>d/FUgjb"Z9GoUOtXK.UR'AT)%;
%LQJ4?!5ZHRE>R*+9>(%LgVX,Fj%&['jPC\S`t2<j16"bq4@Wk*4FcJWbI7s:ifV2b1At&5=Ns3\AC<p(S5D."_Zs/tI"&utlWjDH
%\o7Mc;pFe!imb&iDYU?/n4qR<HN5_Mq='66Z$i.&4F489W0pr?@rtC?Y@`+5!t1^'fu%$M]:RnqB$8X\n?f49BR,\7IPT3B(7pfc
%(g[&ZGf8(AGpMH2l]R+`h_#p.2XsSTmqF^gW87$3AIEu2gRsa2%BJTq>'-9IKLOHTYjc%P(4bK1ff2jNoN:/kYMj14FPK[)SAf0N
%)chgPB%+^lfO;[c<g#SQ3Ll&2bglk)p0lQrA[inalfknDGjfn@*Ss1-5W$C&V2j+*jInPg-u#I2].f0+QMJ-#MUO(tXMJHP+8(&-
%fu-Cm+ErOX5CV\>JZmE$N1(hOdfqr]JdM/?^MDuU%\Gb0B3qlrI*VfCeT'`"qr&r9i^:=hQYIPQBdSCUoGZ*.O%"H#)SHmm0,SEr
%EqK/=<'E;]\B9*\mEOgm^37c@qeCsNdkW*L.4QqVUJ5ZuZA*#[hgB<]N6GX!_n1.UYZbO)G`04Pn!3`_D1'rI@ed;b]6Ar<I.LLC
%JImq+B@F)%:m/TJSbe]p(1cM_C_cG)s4C%BT@*IoqfL\GmIQ6K52o5TMj[TPp]@ZT`fM:CW-;@t_2@^l2o!=!)13PZ<j[@(G]gj7
%j;==^2^/e`FmPjMb8NUicHEhF53CN1mMTHeO!-rpqZ,!(/MeO6+6(r%:EPlB-YpS:Q-$]HR50lUW`Xm$iEWVG#M03/XBNW+oh)e[
%Q*[q+oS(=3#6o<i58/IrjR"Jg?KrptfB%EQn2D)WoHDqM6U0M6pTCiJl/#a6J!ET1-lR&<^tK?qHpPf3N;E1D'P@i$'?SR_!FM$*
%QOX/Y3.0riQ0.uu6D2Zq,/t#.lR1R-n_qH$+3DD.CH'+'+507jaQT%G>/+3V)-4XLaMW\-0QKs_$P*gHH@h!jk]IL[gJW^hKdl+J
%FPHBb,*LMpohLX)>WN10]-a/':b_q%rLFMH_G=-X,R+;4l\Fp3m_d*;6jVgC+'BQVV&":I\[;s?8b78AWP4tYO$@lm[^X6:`poWA
%8K1<nXa%R#kf\jG,HnRt_0MBD^!gZi382i`o\o20g@81X7M5`OrqWJDl[MTS]k],+?LR1Y!g^+QD!LfAiW!:'Y7U)kA9dmRfYObF
%R!MhN^k\a"ph)nINCV6!\te@*G*&K^GL(a5Yd-U0VB/BuIJb!,?fRjrftjl4Zub3;'ZR=&nhm;8Li)pk\q#u_`jFN""[;akn13WF
%G?7,9Fni7s]bX@eQg.'bHs/bOiMhL\/Ss?HZ;in&3Xp8k6]`\1VA!S))8Dd%f3ml`qfro@)"<S=a+[^%6bZH3FP*',2hrF%M9=Z*
%T?=RiY,.!ZDBZ]]m)MG%G%XO.DZk-d_K0oMSVjTWJFD%#<,jX?6OK4&K>)S+YX\+2P&qU=+;"-iCI0d$*X^$.RkXS]cCb+3kAkpS
%'7H.3Bl4.qR_Wn?%j<cmn>sJt\5pAAN?c1jFoXV<"iPQAJMcA*B\s%k<t=Yl]l#j$(W&_;is5?*F#r*\8sgrSP2F[*gS5=p)o&sJ
%NLcAZQK+qRT1!k0)QH!Y#Emj7XjjY)\[EHl<?C2nE-XVCHtC8e3,1G?1%H:/4G&1UEZL2m<;Yq)FQQ\&%SHL9ia+U+3m@/>*((12
%ZKWT&>jRgVr,\XIJ)CcPpH#=<]\3n&Va[UsHrH6_]\O'+O\JPU=42(d`Rm/K"=1C#_k4WpcXA*Jh)e@H\b1F<i6#+%H9MMl62fjK
%+$a'S`Th,(N&Tgoin1SeqAfpc_T>!CS[Du'^:+l6VhE31N:-o>3Q.YUlb4*tn\`93Q\8oarKAr,T3e.^%siXCV5AI1]_CL[-8-WP
%hG1rRh:_8U:)=b`r+gKa?N8F7ZZe"&Y7YBEe:fMKH<9S)RkMHiCYYQ)7BdA[G5YDMIgRB`H^DDRbBIBuD`rC,>nd?/mue#U]Y&BG
%-]Yhi@;a]/]$n1ZqGV[o]64_lGloE%EUWc"rOFk3RsOX[MF#"$UM=Xk\Rt9JbBHt8/,FRM?Eo!WGie&3IBTsE]D&?'6cZ5r%n3[n
%QM.uM1[i"9;Bg%]o56-eW8?q/rF><Aq,Z#bD=IXF4M7!P->n2AhUHRYd@8EE8%j7Bm9=Mk\F&l/"T'olel[7f*pj+.hV>E"nX^G)
%Q8bErPe:YajdGkUs0U^t[+A75l\@'nbB\"ZcW'B38`SD!=HM.J`UhQk[sZk8oN',h=`;PCHJ\KR\*%U_YF`H$EG3u$>e51Rp==r2
%"`MEE0DO8k_hI3^Dg>d!G'UM-8F1:'_=#b3!dA<G(.A/+$-Om@:Z;6Um:^'R+VJ\K/o7^.Rg[Wheal,%G+)c/h]GAsRCc.&+a^hF
%]Pq+>PSR"5-`r*/hK`PgMM$b'@uZ1rLV3@iU"G$p/!5dp@%G+:9jdd8Tq0Z:d(I_03E(;5q9G^Q=k]kNr)W@)(X+CV5$knMI.FQ[
%n7bUlle?fG<.**BVe]Z1B`H_oQflf2lpZ?GQb,DCI"eK#T^U%d?h)t:m00,E1HI_+RW&%oKS(XS`n*7Ge9p*6=ESWBGc.jWZC\!I
%#4?\NMd5?$Bi4Sq2&Gr?LZcYDK=5tYOlTRZpV^0QnM"o*0:o=j[h^V`iSDK-NUtr"&bb$3<XoXTMtP,.J$Iha%4uiMI=-!DC&.<J
%]+jJ4gb/+e7VbT[`<&]%8'BX[ENYI3g9$pqQ4=G6r(D;m'OA:RkZogs2sS^^jX3](H?sh[/[[+*k-DI48BWOVo#Yoc\_1;Te:kta
%360o-8$*Voc'NX>o7Q/BbBds7Ye7]XI!r;)>W+Q7>-==bc#P=[&R+T-r>.!-h2C2`d+l-9Oj<D^/!6%:m7R;lQ<#c]q=7/GG'dl`
%_HLf[h"PT>.i%.qYgUa-*`dU[kRM@FQ0g0lC8dk6Xt%!q?JTqUHE4#ejDso)FQ@21Q![k2]erE_jo'@G[1VSdeR&/]_7pUA9E'o=
%+Qlh4fkpc7I5g6EI84ta\PU!+^YDUip`FAAJ`#06i%k;pL*j)U-(b9TU#d6NRW=aB?JF.sl>(b+U:GHQC`@.k[X#VgC`'WsFmJI-
%X_0lR"T88a>sQd'LHoBgTbp<aEg=GfHEn-m35"S\N.p[ti9=&G"aUQS.P.p?qV[:8$gGm_qI\*g=\j1hf(sBclW_-8bDGP]7kqF.
%/ClJ+$`u`Y(gPc)"P%HF(5s7s?N^lX'g$Xmhho7jgP`sW4`jj8p8ceM-kO-R$n9B=7OVGUj"d<\o@8cGH$46`A/q-,Kc9ij`l>m0
%\@E264Y:PbAY6VtkjR>G*/An#`qA$ar<BL$]^_N(064+oYt[tUo@:Alfgp2]]pt-FY9kp4ie]()/QeBIb,f&dQKO>,)uNan?fNpH
%GK?E0Wk]GHK[%""Ep(<fZP=.,Xd+F@D5S;h6/ql9\6KF/$=u#s$I;l4MWdju>G<>;+2rp2GUDS&pqD!N01NpYCfQZ7/roI(YdDeN
%"Ji.oF]mG5$7n`7CPt?t]NXYo?#d,"#O6(f=hdcLjP<458Ntlgp<0:?Q'7ilf2Q<u/\[unr8XB3Nc4!D_J0!8.5k3Gb-QQ)XKLAO
%MQ6Qsj=.@iqh%Q7Hs<PMjc7$OG0=Q8%Z`9Mc+Ug!G*%MQg@]XM8@&f#:V-!S.d2J0OON75kAC/C<SQ"Fbsd_AD0%kQAmLs\_s%=X
%W3;cJn<I-lLTSEo&seA**]35>Ph8]#P0&u,Ul`747`lPE/!6F>?#4P^5'\rQGd95K[8LVccu/fOc^!h:Xl.K)@V^=mm,'iZC8J%f
%o>Q?ap:`(qYO<NS[^VF=]BuAG[ES?^oc^WVG2$abmf\9"qTee3kAKImS^$O=l1O+4VetYFNT8iSBM9.BUA<=cDm\<$[q":l]6[.-
%DQHs?HrZ/3<%f`+V\PsB?eMMF`V#FD1Od^53q<+BXtSZ"PQFtd$QZ@+M3sC\:?6c8rC!KlH_+KTm$Eq$nPM6UIiJeAmk/@[AGbmN
%TA!E([Sh*^c(@&/ou9n\>4X5WEq.XR7lG+.qT,b1V2NC-m]JM8hqF?JgAPp/ItZ#3hCY!&GFo!:c5rl*,kdD3:4;T:QJ122Xu35I
%otnOg-Kb%eA^50cM9M0tgY)>qKqnT`dhgZ_(M\0k[<$Ed@.j;lHa%X@IsqA`Y7A_(l=F&)c;f&R6,6"VZMBd<>./U'o5s3Z^#t1*
%<]kA(34":UVg-.,'Mtj<UR74U3P(<#7n:hKgZ3A<0HE/KhK-R(bsHpYpc2>]aU'iBQcnaNp2^bXqqd2(Y0oP^de:Q"Z+ddPbFDN5
%MZ7d@,KHACLem=#\[Jbag,qFNcYo2oBDLACdpi=Uf\\<+(N'<YXg#-7aG!]V$e8R[Gd^X6pRT9A%`2l1q<5q'V\#i"bP,6=q-e.;
%n@Z&sHFiUdo+ETq&Z\sX0!;UYKo8];4*@Ohh*#$b#?E(9ebW_=.e'sH?7#'cMH>!\Jp-N=XNG[qQJK)(XG?3/B$-aZi@E`lRffpA
%IoF'7DVt<"9&A=@P')2">AS68H1+)ppsra3-sXDH43;.(lp=(QQOLiWJ*akOgfs'tfgFui/G5*-jjf.7AM*E8QSSN[7#S65hV[rt
%`aYfiC[=I809#41/oUA<\W^L`1m]_aQd9`lc<BbFU`K-tq2eLgbMSQNK8`Z.euMU.P7lIr2pZF?VR4[kAo?oqDDi,idu([0>cJcN
%>kT]@8lVmLJs`MYkEd9jord\aM'oDr/[s+iY;PU9N[<NX,M't>pr7%hA^N5\;KAVX;uS]%Htl_=>BPA);6HN=@qr^Se2A57W=uCR
%e`Y3>_I[f#);WLqS+f6q^U:AIYI%1Xr,&LA_/7lkC8be6mthj(Xgl't(:[j]4-tGACtf!Z4tQ<,4`8Hh(E$_VitXpn-Q9QXml[\N
%]3YG773A`2^5?_sb.mj%Qds"mNP()kp;i^8?PePh?C:WLFf7t.6<1[<k-pJ>ZB>>FIJkeEhU[VbWk*s%1lid&n3t@JD"5"7XchN^
%hXARp81Y6tHg=[4B:1$`kHsscoVTuV&((8kE0hAYoDr<k93r<[q>1CM*d7Jt@9J[T5tiMT`u.k0k:HR*5%'/^#Ns^]]<H\:TF>Tr
%L(t1#.=+Iag+^G'Mii?42.#J'l'="X9m638me<GW%0,@2ZHH#j9A#f$ff:q4<kfR`F&)]oe,!K0XO6c`^)2'O[m.b@R*Q.q"kVeu
%H?>DHV7lCP-0&QTHr&tpf'A7#5FhDMmJO/IqQ&9IX5h,7M7aXq1G&tfJ3N3:G^o^nUC\NAc'_auhs8$9RTfaVcM>5.?[eAu`*QU4
%LRG=`p^9K+7WWNMq:HB7VB-V^B=,ejZZ@tsMPIF?j3$]`YGrQJ]J"a2htp#fY'B)dB<HLAMW[.AdjP0&lT7j?8Cge+#<sX_o=QE-
%pjn&5r#fskTW@QJ)Z3%59&asV_g@!J,)8!S:/,P(@0TFDBpCY<,jCgaRflTMTLfL\.]6d?'U!_1&kb3M&*\\G@]L@*"@`&m'/-Cs
%/-jX<fE</OH!FG%6E26.F=cblhZZMR"]_6:3CT1;8I_Z'(QYN\+\g>eg*Gm>KO_9Pf-N1Q%OiCa7b#tM-7GZ7DADjrl3`%li1=K\
%VGe0i<XB(qb0sCZf:efVdWLtc#dQjf<8%Bbl@M8k&f;p.Q1PV8l\\3^FP)h691X)ZK,oe09T!2f&2+<*74G$)'$_gR+[sp\!Z#Sa
%OY1AlOlJh0*qfk]_^:aMd:H)TYp>&L9pTIn$ld;tUD-UJ7APo(a%:qpROkb07:!eX-)@Sn8t.Y;f.#G(OJm+$#Te._cjn-o(kF"7
%=9k;%&2-WoD%]j*%b3nOkk(&>+DfFO?(`c[pW-j=,)Wa!;Zr3kj^DW^M60*8!MDRg01$<i.`-p#"^1n%,#>WoKli<L4N8n%CDB\m
%.3V8\E2X]7FIb5hp-_.V2?C#?L1Pc(X2*2h.RalAUBmqo3pO:)3)"mjLF,`\.-E"Q+uhqi?.13[BcIsVC_?oBVnC+@5U"pQVTP-Y
%H(C.h*<QL&g8a[*km$2kr!MZ8<B=$N9E@l!X>40l/V1s&$4fIU8<H30L]Ds]!QukoF"6_cPspC>Wrc`6<Mr/6a^fT\@9"Bapt$u<
%6)#OZPGFqHWC0R6Y5gi;%k%btTPiD<r!Y-q=sT5$+4*h0MZ^.3pu5Srp`(#m6;U+$+kVnn#j#%D@8.kB.V[mm7_J(Y.2*8+PuUR(
%*Hb@m9q!IAR2<*7:2%c6$56>I3(tY5(.5A96]#7Q,tEdul9ZUfW_R^g_n:RF3_Duq<CUFh5\<B;VTKfodR?nR9d1<1+L$M+OGnlV
%W$9]<@(HIjdk]<9ML]06H)U)0,,M3=85(K6>cL;EUmaX2",Ou0NWrD'6r8I(TL[[;^^4!QcmhV?a^H_YAng:`Y,#&!AL"0r5DgX^
%U!lhD&<>d1,$pr72(Be2kUTqX=Atr-!&agE6i*dP`:UVdTp^EX*Bt*GBnE3A![0$mE0..>'-*U-.7Id<(RZg'<"-TpLsAh&UQQi%
%__PZK3M%sa,SM:ciomCmH%@&n+g2M5">-;KR4)T.<S&A0S4IY"CV!%o\0;H;M-;uK>X9W+!?EX\9OGo3-kTVALb+*P;fufQ,cT"]
%VA"f(#2PsAX@WHq5ZKFF;.pQ'%3<tMlOn%\lBg^R7:UXG<ts@6WuBI(6q*6C5TPhsC0_O84MY[*UcS>oUt11L"ACtb&sB9aeA_K,
%l9rL_<=h-%A3`CZSJ`;6QV[_aO.8>,+'r^kW_V-jIf&"?c0S]$J,>kt=nR+o01J'kjPOrepjqV$K",j:.8>\E\m;4ri);#M6B`VZ
%!^RkTW2peSa&)%)@dOl6-]10SNC#KaaH),Y8M%KNl'1!iW^Wq)5WpM>j)#6=5b%mU+DO\AjUEa`C?XYRFr.u'd0RQW%?uu-18?/2
%I\A!I`dmV2#@]-^YTo\oKgKVYN`:R22,9uQX2ui7"Rh#r$"s@Y%`AAZ7?K@(N&ln-<PVM4P`\9("VDLR]tor8KE_T=9[&Pi\K)Mm
%V*b8a6"D=3a$nCr"4<u?!r*8$8X>2t.A<oBQ<6O"Vbi.8#jFHjRn-5H/2KlF,]!O/WMiKC,Y=go#/gjJ<MP&<"6DiGK"7-aEsaZn
%,;p/,7D(0HPc6B&X[+h9#in@e_Wa%F_m':&<[#6kOb"8cbql1+n:E2'T1+9A2=S;@(nd6-2?BTU9J6qcoUJ[8T`CNLV`L6S$A2A"
%,mp%?G_7hFPTJJQBgg?6PDJ'.EXr^LUeNUjR3cU%A]bhk3^8.%.\K0<7#o'6geDT#[(l_e2pb+>r>&tO'KT*'@!O#T/'t]&hZ-M9
%jstZg/@2'3.MS\4H(Vk_W4;L3[11&U":@_PJGqIe!C^VO:dEU0rZ13Md(KLZ@pW]7*$cJm,R9lJ/\oQ-:)dRL)BI9qQ^"G8#p`B`
%o-9-_;i.ueP*ggg(*,t%*QgHihe5DXNG.@'<d:`07U7-:Ar7\'!m4'P"X;Ep,E3n7A5s4A8gNC'+qoMaiKaIA5uDo_G;ZrZ!R2sk
%#@LMC8OT'Y!!<`IGaGWQO@WGUUk4/V6K89#>:3)Sp-<5-Q3<"/+VIbBl$\WqeWDcLg/8l`0X2=[r;m]92MfF,j\[inlA1B0N0U&F
%0SI#&F9GT3q8=VF=.)$@Z9j*G4ebkN"LSFdJWU*j(snq46qs@n`*>W*piIYB/n*Zd@Ut%3!2k?[=peq6Khiu<LcS=SF=:'%`2*!4
%/3Tq4RIMWl.8RlUVniB^+$n6omo6$i'bF)E:fQR<FVB=/F^Cf&/PjRt3]*"ud@mQbUZb4a5K"q6Gle$s=<;Q?MBa7$oE$L>:eA_r
%%5h<3Kk!f6:(_>0NCcG[L$3^tb4B^XM8sRe&/u4^?n;9t.7t52^bLd<nR4U/]!-"k.#oQ^,q.^!!29&T3gEP2U[^Sr\5#:/T%O;[
%!sPt]m%3VULs:e#O`EcX&1?BAe/ombAAG:PU,.p"/'I6XX%5!t`aMP1$l.tIOX$HTbWJ*d>@8bQ6%2(q$4/PK_MKNfk@n<M?k`j+
%$DB$D%gA@jasF'%AVp2-W6eEA@hZ2VW0p&\nXu\oYVRHR<LAfGDSWnAd[I#712?rt86SjC&JHEtQm&/K!(Vknk%gV<?KmZ'_*J\K
%`Q@!KB+RaFP=d3$:en'I+XIdNN[-_`YX*&?<9'1P.m]GPW!^1I#N/OHC)I%h+<dnbTjGOM=<d_E&sqd+dNm:$7Ka)NC.u)[mccb6
%FeD,86;q@rbNTX>D?B>p^queD-J5>.NOT_MAXl4p"DB'&-AkK;1b[2n_%drj+eV*C<1"DB%&ijN*F0.:Q)K>.#oJ"=kQOQ%B2A_b
%#,tu6*!QK4('VVuVK8\q#6[T]?)YE2`h=2rUBj["RZjGXN/UDu3,7J2)JNZE.WK:F`8\#+AA8*paUMX1U8eVLZ9k'G[-%e6-A5$E
%<HYSq1kM>I'=Ui3Gn))&6AA2i6RIOANlrk3N\8[U&M_l@9rdRT)dr1]dNkeKYm"0ikB1F=TIW\Fn1&Gc/>BB55f7:uK`WeBbCF<4
%7V*IaVpIt8,'cTKf>*dgSM3N5A;YSr7<SY`WqZ^>iE2Z_>)DOc;@cmgSQ:;F8*!mp`FQ:E8r,t8"Cbe2'IFI3:IP[ZA"%B?b]0"r
%5d%!K)tZABK-Mr^MdSi=Q`<or:[GhCF4<;&G`hf3S3gM%E0ltS+CkC$6+N=`.1H7\1?dOFQ$'<o:*Pk2R_Z!lUsY\]5Rl#AdgNLj
%$u)AC1tp)DTT7-QTFQ'4A]3QT0*'-#P*<-rE@m?8'1eW<dbrbd=-8k`gc3F;W$4t/;!9m,`\.bX`.*!@%^Qs$jY.>H'8Dcd""/^Q
%,1?q,%gF#t07[(MZ,H06BLe'i3`:`s.0phLdAV,2RW9Z)V^P6VOF41Q1Gt1:LKQO`,)JuK'hoa.e2Y8V@0,o$%fJ^j*K!U?+H=>Z
%TIq(WW&Z,S))neceB??e2Au;L<&)e!<5:Vf`^UFlLIqWEJ1*+LKl."f":Va(BFROT]KO9*TJo:2:,.-k=Y+51q6i5,4n5BPAH.YA
%?Z>pWYcKquWC`<7)GSH(7Tp:`W@NbPY0.`+mO/8>7U9H]YYGfS`%_<VUe3HF"+arn#RP+?Xo]uVF;5*hM4;=C)$0@d,ts,n$G,j\
%26Ft]%Ds3i=;r"ZJD;\%.A8DMd4^75WoM6Z=?8bEE2(FJ-rST7Jn^Vf*CqAR`]Uoo)M:+Boa]CGZn`d[6iOZ^(iiT\)@O0&N8VMG
%F&M?IZN>oEY(Wj59M(Ab$LU>LmO-:'7\LH0:/&:J'H$A5ABImt\g=U<=gpeA$7Rn:H-CVN"SY$""aQL_V(h;2#UG</I]/-H,$"^G
%ZA[5;OsPgJW-"H;,8b0iJj]9rV/qd`dGJ?R4e63FJTJ['Ua])7VBR[$?mX9<5P7K:<(iFJ![`Ok)?XrOn<i$!G>_>0^feJ:'J2B-
%.9*]_"j'jYFU^2iUsK,_;.5;LWQHd3_HnGZ$d_Yi,)`>'pd;,CQmJD[9\aiG\k=Lc9bp<nbULJQ"bTI"9bt[R&t4\!T[&_7e2^o7
%oNJE;Jmp9Y&F,CXLdVUQT\)Yp7#Fa?82A_K1O5N<"\=m"dMW&"/j#1IBJ8M,PO'qXSB<oC<g?36#cL7g&S*jm@^ZpJ3hC>gY"COF
%<bWQS!u-b@LbLPZo1`U"H-kN/rEloe5??i&<d0^@XR%4&0K[QW^K;0jR1jh6'.3f6<X4J+!h+5jLi=n.X'c?+/H@;:@YcMtbWoSs
%K;S-;=t%9jQ;nJ];b4Jf,?M=V/3>R3.O_O:6lWD$+=]<9,bZAQ:*ShC1qP#TV6Rf##`bX`<2W&l9aFZT\cgA_i(3XB3Q=c^%cph%
%.60_h3n6&DBs^WkU^->L0O#sPD29a2Nn.6@q0K9t)X4+tkp;`hNlhbblf`/)XDWOp0SpD\W/mK'DaiG"n.?oLRn2([]!U*o@r\D'
%E/;=i$CXRH>b\Vk;4u$5<"BVD<oA]d4^"N0<L-Jn0`/$$`4%?37gWWf#ud^O>X9Qua%RVrPWG0<8L:qJ0du'YTIJ&9%]&0n3;k@1
%F$pOq_c5D;7m'h@+<s(Zdu%]Gij_>h(27I5S>DEKbb#8<m@UmO7'2PU!NF*g11LkHmUH$G\_?7I$;PS:E7>pGB-7O:/*G+\$;Nj6
%P1mK:djLs":<.+,P:Q`qL,cQ7-IHWd2=+G@68QIq(kl1;HpV[H,_gHh%Ush2gdD]"LuPD'8DJV;E[3l;@+pXh;8tqi84-e/5#Q_W
%b>-il%3,_3q=4k.Z05$iM:O"VoI+LnYX,=GR5j37$`kF!@\_\TdE!9UL*Atd`jQRc1+Sq0,t@JZ1-;@`0t'J-N!qUD@bs(V`$LD.
%;,n)<Lp^>[BD"%aiumhZ@5XJX*-#.-X9rntAH[g@FYRoE,pbZk!G5=G#H'A^'Z!18'G\[R@eE")g4kEjFR5eql5uCS<cl_$H;/P%
%3f8I*HRVJf:OR]I4#dBfd0MRj75[OBlIbAiXajpnAC=>MeOU:?+2\\\K]3XiI\*-T^fDhjY>N7IgBPuUkUDJP3Ug!9Ee&e>K%[$B
%=OaK/2/iUH6Gs4iPc,'8-!l]Z;on*W'>pOT/@T>HVZ[Y/dZ,mSO(*\A/#M,^A`+;#d\?E0JNK<A%>.Aa^kfDZ^kU!f.!.<LOpU/n
%>,WW]+_-`>Ud`U%OJiK9BjmUnS2:N?0JXEUAPmF+&"[CM3/ld@>#>oGAcS9-(?uih1*fR</Trib:ncG[e1OT[Qn6TtfadZb8hi#C
%Lq4<@DN<gs[=OA$=WNlSmNNf+O#]3g!,<X:O;9uO-:$W_'(ohXGnBWB35p_d"eL#pBJS5f';VAh*(UYb!g"kE_332^.*3sfcqPko
%;W&CKH8lhf&2X&Xk@@W!;.T;]@:nYHJQ[Ra5TiNrQ^qrC,-sm$.2Fn23T<_b8ot\bQu<5B9??N8-PG/6)%&)Vdkm$0E%%b2bNP/J
%Gp-$)4+"h>UnBZD1Bjq5]1!&eS3SU,82<UZG*uGq0Frb)1F96YZ8@-WJkN=+4Qb_OI^?]_^];'V<+D=45dj.@2R"j6@5k/UWD]MQ
%[%^VMOrY[7PJ^pUR#?8<aJ_/mkojYY%UNRdQm?OQ7S2VEX=4b9L'],kaT\7('O!a1F^A^_\r7O9?%.X7006b76CV*R'XPRVFf1$l
%CFUk,!NB'CkKH2"2Oc[V=Poo#35E-UZNN3:'3<"MBorraN[?8-CC)_j9U](O%l9]8*_((3@u3KW_Xo!Gb-<K*OY:MprY<]1ENG$J
%@P1_j3`bB33`[#e,d<<Z7FIt[9OE_Ei#/u']ZuN^aLY'cC6Vk`[hXHZl\*U4i;<l?O6+6?<g`e"a`.Sij8fGtYrIXVB]c_'=Q6)X
%QIN__24^>-,K4.nM<*#P<f*dYY?7\l;,K<hM6gboT,4F_dCQj'6qJTE8EWAS)HKlu7K)Bh'uR<cZ0ei<BTLe^["%$4!1_?6!.gOY
%FNeI\'MZ;.10<8hTG,<s&e-=$SJtP31m*)5GXaurNN0)-A0BGG^^tbCBh=T@dWCp5P4A=4660&lTmd#6!/cf"AVY+:N1`2"$XlIJ
%E)&s#(A0:Q[Rdc=;kbWa6lMo[JM]Ze7js0p9Y<L7MCLV[-I>@/f!GRGVoI2UZttfr6:n';,D!g)'-;C]kp[O2i]tJ/0L%O483R^;
%"-fGc>,)!XL,_6E=9'9Z$JIjjWar21NX8<O87:NGA;rF7>9]N'*aBiP)&?gopq`=$CVGs*Zn\V9+L@.c;kS>[HMe-b1f<+G/9*"M
%SJ98S,\W?CH<dAa%h)i[8S'#F&h.eA/CKY<>ZSWSK#Y+o,YL[h8+Nb$+`lGsZlp#%Q=*\6Bdh"H@E33sSMEq(U>jcN_)ZF%o,rWM
%8)b+BNe[NO4]-s2Qc2L?NW@Q#X>[!'dt9d6$8B:%9IA,$-WUh9CBPEFGtU7(Y>4$YE(o))NX76t&?Og,@H)m:P/]#*\VX**&$i"B
%9J?hQ#>*"1Et+F%V+nbS.ZnY'#-6stW9bWOjuR2s)d5h4'K(Ut&LVd9E*c\EIjM6r6HjnaU48B'\-/NISQ60b=<[s'T+gHd1?JnD
%kUjjg4V"@9<%nn">ok$l@tBHYb-kE4V)^]:?pkKPd``u6\95p8<X>F@k)'f`H'h@WkQt9D9KL:D-r0Gr'Q&*:WU?f,=V^O7A.;O_
%+uYCG31^=og7TFh.a0JEfjSbBVW:\e4jl^115loIQ?6[CP;)UQc=8')d%drfFn(Pn'O%1RaWZ?YMbmBt;2kY#C#[G[HE%eE-#PP$
%K<3O$"UWBU;E%"`d[cU>o6TrRV2-RI4H3)Hpct$2nu-e.N#n5!UJ_Z:;&cF\o1?ipoHL/jH%hfY=(Ph]24AVPLJR(<7Tn/b(@..4
%O!:H@H,h<FDcO_T,<Or*d1aJY<Y1ds#ct5)%2@32VG\qDoF.WG33Kk]Zj2k+FLnGq5n6J\*PgI,9Yr2/&d`5eGqAR7+A]uj#]s'a
%:b%[-RDPhp$DaLI>a7o/VH@713YkN(b:L\)cAa%[1qt[$nIF=[6t_BPU_oYOShVE1<?_c8&F'!-&KQ(P,VdBIfE*s*,.[kUTV?IC
%V!:q/1!,F:?XOW,;OZ^e;\SAHJQ`g\$YEa6RM*J,P*1>rUp*1,%O.L]6X?i>ISbN'Nf0E9"hDLC*W9&c)H<KcR5'PSfnc<DC>[*>
%,.^(/^_F6DJ:tdq[[pLaWH3lZ,K_]sMTZ4oPQdtCZp;R)$ot'-b3G3f3[m!#[7i-?irkH;#uOUs0Y0SRAk+d>N]t1.joJ/h5d`dG
%:@.5n!3)o1=GEBa8iO^>Qu@Oh4iPM[iYd,;(X]#*Zoin>#u,@oL/(GQMZQ"8/Wq#40lkX'L34+jDBdN!%C*`oXI$H*R*J0>*.oNW
%P=J]/A"J?%3b:aKP![@<c9^LD(NMc8*$hN2V8osPK[DtF$RP*)<"=5ie2*:j$k6mFVh/UI8]O1^k]Kf-M@)qMF`D5_C&!4X@1J$b
%MT=GWW&$@B6OB3Zj]Fg"<9+@eoSfJ9EmtL"GT!8AbmcZEO-jD>rrs8&Q),B.lgT!HWPkMQMHQo*%F(j2E>gR(6#6ia:aL[d)N(nV
%hS0^E5pm+I0obB7<,1>cdBjOA!97K.;Xl"8`rhKl-UX"``?8+VYL=t;Q3nh:@,k0$BYahrM,APa@A8?Ke.Bs=CEib8o<8GiPpfPT
%U!Q<*"Ca>:U1#)B9HI%O,/YnAIM,L4pc+GR$<dd_@+ZaPjF\ijO-bqQX0f)_;'2':5BaD(U8PIs9kl_k?/b#sB)G2M9?`76l2XdF
%F3]%qo#M'=5QSbR+.ht17R9k@VfbPm$)'VnL=ur[*#^[b4npJbnQco8E_[>S:[&IP$3N]]ggT2Af4dR0UW8;_=KoTFN9(jEB(:h;
%JH(,UhBg9a,Y>H"8rfC^M?*STMQos*(H.<P:]$a$U+hXelu&PH<&ps,Ug:HFJ3m7hKg4pJ[?8ZpA-5TQH>$8rB7ZN$k2B=EZ\_Z_
%jqb&1Jt..!=2tFTo("\rbf=]33od"lJ/eOKos?r!8k.$7%tN=;H^+r0?^@YRIT_G6o%XQnHI;VF.^43)@L+,`N(fro=jAlF7ISM/
%$Gp'WTMH.4RK8DK$CoX^dKr<cJ:@R)>O+6NS\&bm]&;c'2o_0sh.sn"jDB)NPu>P002M;Pp+q?",^9(>a;+*o4bCE`\WP"dB3D)K
%]f2)8^7?JH:3Bc#-]%a69h7"$q"qYp`jSt=c#,K3n,;kCmsnYU#$WQjfJb5eZP/5od`YqHX$7b?\WOaGT(Qd9U&F.<cR742QL/=O
%)CdH/@L?AcfHdW'RRLNo<su%/<=?qS_Tl43]WKMEY8ejjZl*M&@5m.\++KI'DEG\\%UGj2EQX)D9Lq=6kgeQ&EBRO7S98C2>R6(f
%FO8D#3!u!i0;%o;fe>,[/1=`=ia.$3&XfD;q,o-oCU$^!cb_3g"f+sO=EJd2W1gKUliSO/]NEYmXJ5OM.mn16_[_!IIU2aA)8I@_
%6-@5D!HK6X*0nKiUf;=>#GjJ*S-@c@PX1oFrE'9;L^kXD(>.V[Zj]!1'_$0%rVI3#?YTO"FfZ/k"kRaks'q-BjKl&D`s8PIN*+E&
%0PP'C#dDXFj_0jh"n4Q>]G5,%I^i"E.pTfLpN78i"LW-c.edP7Hlc+(+b66f+$F>-A9&E]j`@J<kQZ_5=[&."2$\\!`R_hV3HC?<
%;r<2A)d\eb-f&=3P[fcg^t=t&WE4ZABdJJhC']$mVa.7YXBr'1S*q)6E,..1SnHdkP9.[t=(`*W8h8"0<751"7Ab`fHW4oE?V0li
%U0#X@iY$Km!e#%M>jkH'6XT,qZ`hdlNapNg]g>;nLuTo:kd(FTrT>\T==]Gtd2b4M$o&?1$Iu'Nk524b`5[)rl<,JCPRbcRm1Yer
%AHt8p*s0/++HV/#rf$*oj\lg4/J+=-Jbs0eV%7MCo,_2"5d]]'*npsGKV'`E9(k6>pnLo#_e-F,$?5MV]28'"nMN(,Kd&(mQS0+_
%!upN&NRC)rFr#@ng9MrcchrIa:QF)t]UL(sC^D60(R.oM9H!Ec2@>($*E.Ie\T;T/+jJ24oi^.%?<tk>[&#.aGK7Mt;?Xf=`Bjuu
%l]t>nD?:i/Re#OL&FJ?;MK=A%.*'q)rdGR(8s`5pn[2tH+]%oS2nrabd9M;R=sgRbcHN"JhkQmM!.o,F2Uk;-@35qab[O&\7r8f0
%Hl:HjA-^P,?hI[ck_6[f99^7OSj+q.gr&\%i:o>4Qu:B.grr/HK&$YqS(,cKST0EjmRh[5[+M6U+:9UNAu_p&J<<Zfk8!VY(Of2h
%7I^-K$`\-[(icn0T!qN+)"ZHR,V!9\$t\9a;n7;I&?d02=4V^FhCiV4J[-68j+eOoKP&<ci@hPm4)6O,I-Xl/AOfIOB<\u)WDL$S
%^_)DaSR[[P)?GnB<3?h.4,?[Jb$_'!K#lPXJ,QpQ`:NE([\7IeIP%Lu3PBKpTf*#FqchNf;,bfPA=&n)po-$'Y4jo6;Ztd.a^dK`
%*oC@h2Uc1-'A!gnlE=YFrVc$M9O3ppHh,uueaKi0X?Yn.57Z,V[ATYkm^+tT)Z1R8ktdq%Aj9A7A%SbTr\S:K!X]`q^3a[-@]pEa
%*Ekb)'DhR93`,7X]XY=E*g"Fh4g3l@p$;:#!#<14r"'ODT;1e!WVA?s]`=LUJ81#=PJTNTp:fc+rZajL<j(_?;)r7on1lu]9TNM=
%[JUcPj*ajT`[2(N,Rg`lQ5de:B$NA:bTDLah7FZ+54\t/B&-98k,@@Q59h(^f,"-Kh'RO_ZDn]d`$a+(aC(?iHqDoUCnt,r.sbLM
%p<Os6L?&fCM:2<9U-'F`e?)*ANE4<\*pdoIC1uO-#UZPNlQs*R*Po:s"lcd);@I0)AW"?U8"TdVpZ[0W%JtTmQqA0gE/Y^F""AdM
%K'-rq`dp>:%R2Uh&Ra^ZplVUWl<fqqrD#:+drrNP"6d"8$AnnNd%j3_/rpqJW3WCO,,73$2.lWk&HR<_8A+$J>d\X%IX8H3SbO2Z
%7:C3#X3OJ*$7,5mIbcd,oW5^oh:g_Z'>mPng?#n]D6H9ICtTgK;[)pU<GC<i>48@GKQGI&mlTPqklfE[OX<7LOFg=P+\F2BciN]M
%?BSN#C3gG_qGG<9XksEQOkBp$jl[e0Mn%!/Qlt26=#>B_1uJ9.NM7k<;[>,uLbS61qcM<Z'<ifNoEP\#Ymo@UI#T95Sc2IHCCd0^
%bIL.-,o9mp!$nT^'.)e<-n3+a1H7+W+8uX301G:mMnFn2E<.s`^`9D85lCsL"O&diYhO4&\rrCrl&:[O+U$Mr_O:79DG(:%nuACD
%),3X%IXuY>2QeWWqYXL69/Ysg$!K`m"/PiDjdOB+Ihl?*g/O^C8DRH[F9X:mdlmQ9oRM%9Jr)-Y-e<MLCBM\7ipF'cg+8JYJSR?j
%L8:A1N?f^"kFg<^Kbnk!\X!2bebl<a3]!3gT`@=lK9b;nRWnM('.=4p#a;*16V8)NOW&"d<90]hT4JF.Cd37#VqZ)RmJne\eW51)
%pp^pKa5B2.bPt0jr9CJQ)/r"C<Mhg"rmt0K4YfOfW-d)5B:P(H)*54rb&p5(Wf0i93dlm#]iq*u&;NBXQMR6*LSgFdl\HS_r^.hc
%\)X?_=Lj4AJu8^ih6.g+.[b=BNM7\r_6rAd#jO$c\uWnST@YCldO/>FVnl]7^[f(<k3b$g=X@AB.Bgu4\4Z#Dr#b*;hQY8>QM\5@
%oS>#3\Sjqm+Lsf;OEGB1"siuBKG`4^OOmClW8VZ:f:Vg'MOaj9mc,TpAZXun3mEa7pEde1N\Kob9:"C3mm^;cNuVa3qf]_QkV7]V
%(G':0;d):i^C]t/o&Ct2cM/j\$P6;e:Uddi83@NZ=a$Qd[MiA=7:Sk0\c^#-"O'>h[/Hk^,)isaY%&5??9>Fs/Y_l&:F'fe!9?15
%8l3<K"-\#LMs"_7n`Npu%Dr.;Q^D-akEUtr@HFiis+Gh-hr@Y`E8ep!%(uSmiV:!l1BQ<\p47>JCe;=q0g>"'k6IWfkHteL4td%g
%I@8:+oX;(iqr1A@(\IRtor3\,4+3?A]tb_&O+0N6nR2VbG"'<.29cN!I-.hA#tJ5kY9(qo%G9i-4=[.e'l:]rPEQHJ*a@$gF&)Zt
%NnJ:d)^-5\H)iF*dX7)6NHHs3p7mYB^)KGTi3N^)(XnEu"CLcE0Im[ZH,KS]"u?4mBQ+JDl)PYJ2RpOM%/dNS\B_`[he>QKUG.4g
%SlQ!f#3A3sLt7f@!)V!KWl+!1l]as7oeSR`c@[S3U.Ki@<]7VJieGi&cPAFC:)0+,Gj.M9T=a(q[G0I],.\[04rGSCV5'r^i4MSQ
%bSD3KV?/,C*aI%HV0Qq-HN[o4Qn>k>O\'Vn7[L6%+FY(nX0=Q4Dc9t\4opof]d7m3d.Jkhq5C370:S.8O>k+\XLSSJ-)V#[5q>*K
%"%k(b>)5>JqUESL<IL8,p_kpWk>G=3W:\6T@%bRk,GIc_&e<TPZ'2Pc&J<_;J"bD/-@^^f<km4D)0Jd"8):J<.mOU)2P,C[*WL,<
%rn.V\R$TNFht&s;l1;<>_HqBQPr8V7cf/cP?FWBd8?X=1NV"84F2U#r#Rl<4?@r3'\M&.=(2QT?Fl%8pah?8niRrgllk)l9Tu8Ds
%c7*nY(4cecn<$lBB,=Eq'`![\/C0n5cm$';$@gs.5]T;9eZ4^W("2S#qX;'/!N4P;\lL/DA^r8pU`cGlBJ8LgFI19]=$7Fj$JBmu
%>GCg><PP?HkVm1O.K+s$cA`'B,m&<i_E"(3cbY_920P`&D/nDuK600Ed_RBPg2(?n2Y4-I=\Kg,)WShmE?6&K=60H`V,Ut?Q$CT;
%%l).D><^9U*Qn3SHPY.Y?-JndZ9@>kmL<RY0!m<lfdWrBV+7@QjALp#$`p.@8A_?,\qsOnEL1`JBNX];X!>H%ch$"Y@*Qb&C!0:L
%;Z.dr*p\\,>0B#/rZLCJG=X=MC:BV*1bjn2M=<<jZ^dMglOSZ7K3p_@7RgM*X2[+i]^>_IdsZh,H(Re;.k80e,g?OKc%VsLF60s6
%\p@BSlrBP&c>f[Z-bJ;J"4>:0$9NceLVTPeoukHgnUuQ`WSuJXBb9Os6=5UI^b';m)ofTIa4p':dsuA_")n-73^)PBpkuWpNB]mI
%><;m89(;(Ze_DAdi>eROkT5$AHF*J"h$W1d2oMsP!D]Z%B7in%-`PB0:GV5@1j=VCrM_q=',6Cr1UuBDpX4_2s-gjEUKhNg=ff$^
%mR$t]:rc`H*o#7=7$7W<:3d7BCcteY0g&Y$OeZ?$>H]6%Z>Zn1LZKS$ji@>`gf2'd;gN5qbSgKB_1%j$R9$E\2R@A5$!EKJ&m2$O
%.pKtOj^N:"_U3#L"`HI)&_>4^ClP:G$8f5Nc4RmA[a';eCs!.ikGfjS.h7;<<T't)-^q0`:/H*0CT5?$o'@H?;5`#/Mn"l=drqe:
%V75?T"2=WGl472S@@a-`^QpWjm*C.Go<j.B/VLML/lSrhNB^4WIib0\NNO+egMMGE,fe^)MU?S!R!?"r+h8='bsIJ@`qE<`VJ"73
%J+gaBXt0h&0bGJ#UJY*o*ZO?_<u1Z!.W:s2]7kuCPFH3$)ZKm('3AN/H2WC"\;/"<(I$0fN4=7JR0#+DA+mX>c!DG[ra*X:LI:qu
%7Z8)*4qD63^-pfW\;TDFfea(;4?!'Okk\>F8J0q8e%':\HVolu]:>J,M_u&9.*($ur1>:#HCN5%iNSlV4JBMW,aNIJWG[.RBIQQ%
%7pQdrc<7b:QdjN6LInlW<27*K&-1f47BK5Ug@[!XMtNfk;74/=+7e$XQa>;gSd/Cg3Z*OjI'I<W:]C=HmkdfpHb7IFNU<M%nTR9s
%Cr`t5ElNJ&G;dGs2t"7dBA!86JuKoCFW\5Q%B+ro$j%@ICDJht4C#,1(0!j"RFsY$>5;o"mG6MJ`Fdkg?ATt&9:&N+L-&/Z>NW#1
%6]3lf$\NQ8,JMJ1g[<[C#gt.:0Y;KW&%,kaA+.f.mYciAB0BluFJXcQbhJ=NH7/3+9-)QSc-=gFo#SW^:j&TFj?f*?XSj[*@\\?p
%rh-'V0+0K#VRZ<S>`$c]Mml0&2".''q/_\C9O]['!5Icr0^I0opFHanXmo9H#RBL)V':KNoED^iWV>M&S^g9C87<ZYYBS*oX=Qqq
%//ZU.SCmH`Z$]P>rail_5%49XI).P84Q\ebrtjduPC3mc.Eo07.oJKP&UY`o+=TL;k8dcJJfa13_tA\EJ(49KM\8\cY#gcU6?XR-
%qGU`>0dlt\WaX@ZQK;ha.JY!l6om`lM.9QhTOSYWCW8f4)t]%eGXW<MNJ%cgZUCM$30:mUFl9$3%P[XL-##R_X"ESZ9L[or7pF:O
%r8cFhq59QYA&pZ0SNld"*qn"QSa\(H>Ld[TgX6Li)Z'l.[]0?SLBFm2@G?Fu+]D+Q-8/[C`]9:l3?04U-HGOiBu4K+R_HrF0jk0_
%#kH&F4VFJfSW!O,W;Kl_q^ElDhRr8<n8bH6]2eO(Y+KM$Ph'inU8L%Z0!-<qa9gQ`Xi`ZkiasiH:$a5AXc4,+/tF-Fd(XX?LULA[
%]gFo(:d-PY_ZFO/*1:A;1!94sKe4,lB58CU!@jUP]G3@+Md!-@6RTE7buu\&RF(%U]=GoVnq_u:=S`e.1G9)K]]>6WGYP"*#DZqV
%iajO]el=*>Sg\1e?2uK-1:JGH/Y1ir+f$K+(9l7o/T-&nkdKq^DN5cXQO>6sr#?k1U)\IY=`A0NgUKG_F80ffNqdb/I`kBuJ1+cf
%[ejp/'F\O8-n;!qNFHXNJ$/?po4_99]uFpt!r>I^D`*OY]cGCEI/\IbpK]Pm%#"gmSHJVgT/c;L-F&mOaJ!a&PZhQ)h`[GY)hPQl
%/BP8.Ydj,UA??pa12!(!E(E6-at.rtq7pMr';f(o,#`:I[5V<LfY98+P"++S;hOHc=3dOCJ=LM(B"c@_6c[F7>m7UX,rb=Ti'Jpc
%B<.l+S])N+9>.-sV_,i)=*?2+U>W*M7i`uEXQ_JGRNC.Fi`VH^3[hL%\&Yb%9aqeC@N3?&;Hp`WYYWn!5bL)922gOk'eZMM2HiuC
%Zf0<G8gJOd.??H_ZRe9nnhjM'B7&9b$ZadCAdY5DaEMr*_0U<UM"p,PoIIP-ci`KaFGco[VOD.Xf4;@:>'Y#I[SlDWK;e9kG4-p=
%<.6m<e2M1J.;*11hmBTBC/SL!k)a=WH$88Tk8q14H*+*)$%MbmiRVDEf3WSc[=/SO1n+hca[eYDFCq"H"p<8D]$kYg]e!e/j_=*P
%fCR"\:rh-Q_*8!DQ=@=&?$uI[V,"0q#AX2l$RscqLqAU]/@r`F?t>&ZSa*ktB(Q4S0>`tgJ-_C#)')@)s6hNsmk=Q1qkg)Xcosj?
%B]DAhKUk[qhV4i`e4;grS[%n8QZHeH4hH-do6uu!f_`_bptob'+\m:=2om+X!.X+1kK2'#0oAfjV/3orMiQH&`8KQT3-,r;[%j@#
%L@=R$dSqfl-(?$&48Ma'$SW'KKo6:W_TIB+H?nU[W<FM_j<k]=!&_k9jQGg5rS2^`rEn_d:kNCoc8$#1T'*M_Wg!+TJ-.T"ihSiK
%^`m=L/n-blSJdVMo3K5Y-.di*p$]9A'n6<,54";L:\)t)e@XZ4"V`UY\SKeRM3qErA-qG>YuFal6A(?,6+h?U]C',q=C-nh,;sr;
%<8-O-gfkNH6")DmVb4MsQ*S]N/W<RLp]%e#l^sp1_<?s9^L!u6K?WkkPon]-h<ds]&t^UtkkOnpI*!WA`T1$*hur\*56`C:3`5Vl
%*tfFHWkBPj!lN`i."K@m*eJFZKSA]S$?!i]%LDYT;hFZL]^52uJ>%\IbilKU-Y2's1n`/&\ZLsNX35po\V5L*i9bii"fRY?P%r($
%`jQ9t<F7S_h<7?uXfI1!C@:-dWEO,SAWm/a:^6km(ZefuKhW[1I#/kX_\k)5<u3gpZRt%Q7cipX\'\61;72V^HdgC#<H)Z!-QV`r
%os8Ft,gMQAk:l.iBBC(W^Jbj?Jp#\Up8U"]a(-<t+Zhj+!p%(ncstHEUZVAJ%<#8UFD0NRrU>VMO!emgB:#SSKeKo=G#V2c80H4"
%[:%QI*\V'L4$uXn'Hk<rX/L$loH0O+J;B@#AN@TAe,Bn+6c)N0Yn@Kh-XI^Y7aA)"fNgM-f[6_pJ4%,TJG!Gp"BVj&A,^L\]MRI'
%T-L+O/B4d'^ij@3K2N[lcPLJ#rQ30EJk7EbQJ.lUhf.(JVbO[[XZR5-bHen!K\j.Ims(>^O&76'=c5VUOVKt7A'aW4<IS&_iZR=3
%rAjp@E]Lb]Gf.0f`t4<J&YYq0g//C??D1!706QWrNh@UD@7[\JdT9uN[QU)C>b$SS.>c!J-TqrS=,`*r0_B?!?2@+NB5*,+pXi6i
%8>-MIXLO;[*JiV<rKWh:Yc@CZHAiElSh$)+;`_JAa:1$nRqKgab0YfZPG*3Ig8DlC1b]5o3\k!A?E,nsFP6qbBZY>H-#5q7K9?7E
%[5"_9K,U;Cgem"UcsYf]`e^G8EP8*-ZQ.0`m.F,[_+cQY;afcgp1'g-)K^^:X?rpaY&Le]r-HQD5L^MG=aXW]B%H:n,P<tdYbA)r
%Y1*U=S,D1kqji]&5&5^]]5<UaSX)&[js(e<0Vp9(!m#oLWB.<bqYAPNQ.qcMIH0%'(e2Y\\L3-HX1X!1,I:G@n02sF^066%-a&CW
%8dIQKAVZW?_J<5c0`>NXUl4>d2FiBSUH<fYFikJH(#b#ob-p;2QBN8J`E%$[h4l.hHgUNF7GaZP$p*Ms\*6hchurUP-;`7dejU)<
%PnJg')2dUfa0jQFmMHVYRs]3^]/,nN)ZQ.h#7Xp#J$BBog\HK#EY%Y(KTn(cM.\nP1\=r%a35>nD0a^(-ots.GD6?g,K=eYp+%;A
%.nU]pf4:Vl6'2@>15*F0W.SQarAAqi;CL7JD4p]Qks)QakLm+GVeoC%g?24c0s'D\]<nN(%7fHRf+TR0:]q8*(5FCGVo#dT4^%lJ
%#)lfb#B^3+['JHI;OJYYE1HglSiaDN4-!_JJM+`-+A,kNe@>1.\"T)0ZT0br)>iS*(>2jPP:\!*hEefe]3a<p7\$Ykq\Jap_.0gn
%>i)tT>YLd]rY\tZ1>to'.S'$Of2J!fMB=sh%/I5>[bXoKYnYs0;'`OYhlTu`0NQeg2fMgN"%"9iXAg<F=Rsb>Me=6,bmR@0&[[rJ
%=-Sm<6(HV=aUIrsULjEcp2oc+W^F47gXID@U,ZlTqHATM/scaabp:`fYdHTc.+]>o>5a4H]rhcGe:M7q(QU._3Npcf$t\7/@%GAM
%s2J9A<CfNH-OGadTRUO4gTm2Q8?5ZQQ]Fi:43g;ES'A!-VUtG)57ehk8,-@J\=*<uN1OKjN!XhlYCe3q?mSh@1ZPP4?2Be9+UhP!
%jc.tc=j#]\%B_&!DC]ge7k5cfgP,sXPEQ*RXh?/TE8Y8A:W;q1#9U(p79MK^NA8SKe*LXplctIMH'g/[Zu!pfH?k8M,M.Z?)Ml&W
%971]4g32)lZY`@]?\(%D1sAsrVqaGVDoQtqSM)>8f*a7JQ=fD=W9WES$NG7\QXT7<9"[jZkum]5!]]]gVH1&:)/\!F!JZ`U@\^l3
%K/`DTSd/F5+S3Z7B?!jN_Y9=_LmUf.RH2fh*-G@f89.n#"Wb1I.LdgR_P<Z8Ii,[_(EY^hcSgWP;Pg&??UlY3]Cl9WjU?>`LY/"<
%"5nWKV6"pde=!oi.&/lt:I\>(rh7s%*@nDGo/jeq-r2/EV8Ohg9h#19#kf:%pG$1N9#5+F&;eK2K?%aO/PEGU3'UH71Cn"+lGf!=
%F2Y4:dMm8j%%tp'@W)*G_B,rn)>[L<\0)[XnQj9fJHh@C^&`HZHTQ?\+N5.I>bWDID^i,@3H\4S.fn,#8"DAEfQ!e`:.F"/>PDF2
%-P$3-ToU&jUf)oOj-t_$@-4`m71JGf;O"IGpW`C>[emuk9AP3gefAZ%G;c/aO'kRdC@tb)g%7WtJO^Sj4#?l6A6!(o;L7;@@72LE
%bskWm=Ws36]\BE97gX^Mei2fQ5$h=KZTPsai^EXTR@e?7f'GKrZ^Aj\]V!/-$YSH*iXF1@hY,=)2K*oRcc$5KL1KD'^[&CZP^EE>
%R.8nX&$;+L.PTn*'X[@9j\i#b?D=gc7>`LP96V97i\'Xgf31ns*>o`kpo-uTAba\AU>CF?Y:UFCJuI8SDP]hA5<$@h@)fH=Tc+R:
%c1c;s/.?LSE=JRnSB+erQY,?kq'`j>eH8OtHq9YugK#GYLgmsOi6C(Jd])OrSI?*R;Z'J;]QR?POR[R1'Y#ChBP80P"/[tofDJX&
%D*,m_M:(Bi5]3sd7'W-H_`@@rXU)T6I>=I%*+HG.\a&\-`"h+L\NsGBgYWUr(-R6Il4S"@O0urp/6&2d].aTXk?HVEanrAQ5faIm
%48P7Uqke0%C\RNN5.pW/W^N2hZ;!@3g\F"?p$9R.Rm$JG;6"$rHa2B1T]O;EhA?`<[A3YT3cV#DCAX8XcODZX^Yo#kLc_Th5h'E<
%CH_WtjKRt,:!]"Z_QhIO&^'plGZ?G.37KlKW(:'sA(D]@kkWV&>F$M1!Zo?F=&lL^Y9B%9CMgaGF?g>3k!?W(b8ROTN<bd#!=lqG
%6Q`>P"P,86KK@Roh^LW!CHQbI)j^[-CguLCrWj+.3*H:Dl72HCckO.rX[f5D1pagJFmL&4&%N%T"61&skXiN$d6,S?c^f\#eQIJ2
%(2hC!fK$)kERqYl,*@@Rl]R+APV2iaXo)*s:kfV<&JtV[[=W!3_'GRhoDd_?<+"q%JlC,TMN94J"+jd%Fd<<'fi`R`3R;;2'D=E5
%W<@hiK!.R$[A<@elk'Nb04qDd]?J]I;aKig+QRa$TiO1(ZoA%V)j>)bAFpF)(:1n7egpGP:[BiUlat>J)j=V!6&\lWIq>=COn3'\
%+TP6G%W0V((AI]JM8fBM5R&1n42!nKaY!Y<=2Vqh-""cl;`4GC4t5N\^;6FB<WRArToir7`:7/2&'p;b$mQ'-DQOPME7G9PS*>#F
%:ZeVmIOcDUD0TQrpq>'WBupjTAK^j8I!(Z%l'ZHu'uS="7^5;b'Xn'EqR5ZRc&fMc_HFDd>!<t4jUkAVcChQ0\O)lY0\LjW])LPq
%)h&m7`=@^C41]uCDsoqa_qqiI</FV["p(OsKQoBl0KcTASGmqVS;dX#;e6[iEFN7H,7/JpIr-'u31<.R+&8d=rm/ZPrSWu;4KUBi
%kn'XIKB#'CeAGL<7VjhK#=fM'cQ+gW_;!t@!Sn8cGUU=a/'/4+iUb0*(k\:mr]@b);?lT1,.3],Z>gO7cslY98+/SGkrl?N\[;k9
%T*2`n9Vp1bMWk?XR@M[p8>GrfWTBba9>bio(?MUX1q3m5q8KNXgJ.]'^t.(THIfMf^k.rlT2pPC+=puq#3TP7?`V8YPYP$Me#aAR
%*EpQtm[f=pSh\GCqnXH91BN^KHHK(ueNJ1`gLJO_jJE<[S8`V[:dK\dAp=`JN%L&C_M4VMn4J&NH;aq8B0l<Rb4/9od['o?(2Y@o
%3`l1LI1=gugdK`taBC8'&2U>\.u.<hP*ktEHfFY=Np4_'_m1=mW/]=@M8QM@pkJrqL&phV6k83,VK5<P4\LhEV3^J6B(.D\Gaan$
%d+>OC.#?_.1U(E*^n?$(c"R%=?ImHeOo`+GYnc*\<@er7e2XqsW,_,dQ&eqG`f^"p4O6t6Q;mdU+>=Ej6ECB5W#0+(8<)]+3Q^1\
%mjmiH>abZ[&CY0=IZgd2jB"I<.p0<YGAXKaH:7*>pI;@-SLFBnq.]@!UZ3sSSsH$EC6TrBD=\^F*KI6`@:4\T/2PoKfUHG]>PMeJ
%\m7H?rmXC&YSY(BPbq1+hs7#F$N]>O+W'#fKcnoJK`LZ`4q3\(iu^A\@pJJ4/m%%,*gFAQ\acDV7s0@e2]NNc"%BpbhW-Fm!n/0i
%cZ60k=6O:&*Pr$PjPO+;hFZ-%Z!bL+\cUjko;9ORD3%ejg*aWkhquC25_l_7^8X-=aHJH.,'OQ^D@:``#U_503t4l+WUS)WQU.#o
%481)MaQjkMVg"t,53DUY1cu18RL"n:H5,Y6+L9I5i;@q:a<Y1FHJa'#HAkaknI?sjBSIUpIV.s^.84Ba"0]6f(j&Fk!EK9m4_^p&
%=g%HKc^b9afFL$Pk=jW?]QL;[_MW0lHPc;Cgm3"dQ2dM_<03GQ&0kL[$hHg6$Tr!HV9a+eZQ+=&H0t1Abmr/G(g6O2:\MAOMZR1l
%4n9CjH<+3Xok'@Fe%9H-S*r$f'3*Xmn9I3jGeD!q1#ccfZ_g:ZasMU.mJp]3:(*Q&g;m^H7Cr4D**s,7i45@&JocBa<L;`G)MI"Y
%)KAU&`bOU;UU"NVo/hD%`TPf+rUhJBECL9ufUjCTi)OTIUbRc8)r_`TcCq*p"k%WYDX%tfHAo&dO0CP-KH6luqD=H<CK\U/,V`DR
%Bf;#Q\<=+ZNTss="CV5#-^hhV/[Yc#m5$#_ahY*C:9LB8buY=@>aHor.eOfpQCb(pFB3FIFn*SXe:4WqOF+DU/sTWu5)8I,3p7<)
%l*\AGN@ZO;Tesi`%9*igAr6F9G=eE73^!XL.W$"VQTal2b"Vp9]sghU2PYfTa*e*0#(?[(Ne^F6k:ME5!n3;\Cm9*[\m=X$>uj5X
%keFA`<Q'@*n!30<^Z6<TAf&gU9<N8oMnW4HAq?Uqa-;IGUFWSOY4l/See<j@E_pRB;T>UH<h6o="a;@.NWma*Wq.uS_RE"kb_YF!
%p<B]FfMF2ij4M(LL)!B&d-mX9((!q6V0BtBdJd^/jr".JasSTb.Ql>l1H<)Mc@:W*(Af&MG]tnG6UTH(",3m(@'HCcqmn:bqu"#U
%&ajNunZnI3U#R$I!sG2K.5"pi='6#b&pcHX'DH,.f2uG5'tu;?ga340='8Wee-$16IRm(Qs4=+&4J+>Mlr+3`+)F5>7APA>b.lJs
%rseT7p4/0WD)dLg4D".9R(Y-_m:G,-`a6(2(K.8'q'H$_/4I]RXrai+OME08#U)Y3oIb7aF(kb\ASe/^D1b\MC9/XEGkk(D_=XSU
%2B?Ua#%Uk=aEOUUGk>&\b"EEK^(F:`m4L?EDD*#kg_qUN-A]FR"M<[>U;LE;&qMk(DlmIKbZG=R*:W_U**3XBFlfVb^2D9b@@TR]
%QU.e;DG]K`k-<`'nk7U831#\I(Er;;BW#k</UY!l1TXO%D._YsU*"A%U3J4gH"BfIk[bCF5a@K2bu`_T`1rkVY:Cgb-K`rr8ZND;
%`a8/Ck`h6nk5GZ.7.rK99[-8eZ*V[l>h4br0Q7K/6>-_jMMTi0EN,J8%LCj,>IRJJ#prhs*lYQF.b6q.m!8S/[M"H>c[F/TnpbHh
%?-!teL_+)I`mJH_gQlLN0giDmU(S"3;<$2lh(!^PKW\46h]p0\fh$a9!KsI?;!p,LR::MA:/=%J%?3l'(Mrnh;oZ*FF1.in)eB\T
%n3Gh4?EY3@,0\uRe$K8V0iY;?Bm>XNm3d=/XE6Qc"'<*&"Ub02*!_?Wqor8^;J[7d1.VXMemmk\+pDge,^g.JDs@;3?&hS_[o]$Z
%Pud_qVg$qB-&WVf&d&g;BLNR.q84Cb)Wsq"mnTM-;2l2t25p(RXg+]l0R05?-FF29LHCQTS*!G2RhW0,Mn,#2$FY9<+RP1Nl")]M
%3`L`$_SIZmkcEYjS>I%50jDcRanZDJ)\iOVP-0JFjo!2!Z\V8L1a-K;%^^<90$`e`;>:YTI,:h@e=?o_EAfm&P*G)4$$au.040r[
%S*^<8%$"hY_<LWg+k#&DUj=BNIJsg,5atQpG@aVk0g<t>Rt9j-<Wm"QYSWo028_@0L74+s0U8!*m#b*t)8e!EMs23#o="Q["dUtU
%`.O-=-a@:R)]X\Q.#3l%Y.,FSD32-)PV]Ym%CNhY5VV46KE>l=>RVC!<&\oXZrnA;$,g@f_utbY::USP9>8r#\qTntD]:1:%b>1/
%B,kPdIb>h+%+nbFUiY'>Z`U;iHQ=fl$knEu<c.s<^oB)+lQHa&XY)Uif&eU%<WXil!_7VLr,,OVh_Ppl+](g=7WT.TCYfXs-\2":
%Qt/N\<li(-l#TfS>2_hjll!:U&tQ3:V!<JppIlsj(*B>,T*6tfJArd,KAc?BAX<"s,_II69bT!F1AjoG-pRZhY\9Ej,FYRQ`;Go,
%e;L9hBBRjR@f8`2kbZ4kFX]W*9B?2k^G<Z9SA+62.4-bS+RQAs4r`bZ3R7H2MJuu<K40UD\HMRM(l2P]g_R7&0JDn2g*lJ@#E-]g
%2p?1/JKl]2din'kc0#RlSP(,[445AuAMT:+LRUJ_H0_ufYpjCIE^?)=Z>f!fG3>FZp9SA@/.Kn&G/!#%Q(<Va/%PRVQ-J<o1=_J?
%O\>HA2J)L+MdFdbjDUAYHht9@-+S3s6Q=!5)Oa8(DnKZG^K7Ug!4^OQ2.YiV\B8-q4JJaVWa$Ah=2T.#<eRo6="%@UodRTDYP^D7
%+e*Z(;r7)tNjUOcpL86L\QZHjmKC)-n&D^5\5HUOg;s$Re;sU.U/ECg6J`fPdatqe_]fY=e5LKdcZ9S1<#Fs#/:o>%,)m/S^Uoe&
%b;gTAbc*n_#NMf2*3W-((XCN4=&55JJQekh!WcJu:$M,A6oe#VAoIPuhPQXR&n>QE>WpZYPC1Yh=Y*RE]O6#?@=d6[3CgMn?Wg%^
%hmlnl.>7r+\Q)Vm4?EPYbC$E!Pg?i7DDN"rnTb3?o(gRDXL+@Jii0lN=fLbT,F8=`gRL)H7iJ!)1DR.`rKqp?r[tuOHerlml-[Q-
%MSa);&%r0`rR`ZpD0?RfiNYj_dbb(W,Rgq6-UEK-+e5H2<;\]=;c[Tf1RY72QZuSr!6ng'Fm/R`1fS3D&QaMZXgtlnjdoaZMEK1h
%I.5QRH[=7gG&st^'%;bj38C#eZ(LZ7_(KB>4`ViY6kI0TV8f0/;;Gn#<<fSG<DS9'f!`I9?]&!Yo$R/51f>=#)Eet?jautI-H9^>
%!O>=Ur/Q2#i.jt*j0\d-:J&]D2IAq;dY"g;$eKMOB>DTHS,Af&6%j7L,8a:G6>&;b'Th\/Re4"@@#AB_cd"X)gE3)LmA54OC$5s3
%U(`u>WXJT=\3i=l8+'!AqHP[S?I=5,4p$$!h#ZLI3iA-_H96R*8WrnnN#Q?;!TMl"B6sC"kdTdU?]C;bTJ!3^VC$3r&)mkQ3ru1&
%Qh&I*A7A$9C`\D>8s1q3s1iGA0U5aY;+B+`I?LLd:T"r<dih5W,n!A3/c\6(D^f$_BklRQ.XlS+<9k%iI_(+G/@("7@D#@QesBZ4
%@;0jH2^Ku=D2bJbF_`gco'VGti&>Dao)p%tInG@#F)$bto=e_(P>/q3FS,tHqnadHcfCV6J2sCW_-Wdd2/+DXoo@#Dl"TatJ/]V]
%V.?rV/@LDubkB30UXI"`#TRrC*1DG&p$/7r:lD]uAMa\!m;.p#PY$7NRh\jZE5sau5qe#7*i1<E%Z)7qk$kEBDa)qQn`bGn^,@Yb
%<4=2cZ/iPj/cNEeJ)StFYlLi3G`&L&Zk@h/V\.jR)*E5m\:?[V]E!/jAJ@"2Uts:nkV\n\!X\JUQo-US,"o7(B39<=C;;6M/5fN.
%#D*84P[oVj?DeSaGr6LQ^bXi4;<O.<,Zt/^jssqsLiF9X)fl_O%ZVT8i?[-c6?_eF;Z[>\@)T"A1PRfHgk)ls'>PnB(AYYh][mMa
%<4mR])HU#Lr6Ph=OI2l?CK\o8$6fKWM`[,i=!c=0ZZETB_IU00Y.O*eB(AmNh2MlFh5e<A44h[Ie8Y[X0-"&/fV^#;AbbEin]gm8
%UUP;4R0O)<(Uc:ID]\$FE]uGR3qLQ1\RdbHfn;JNQ8.n5:"DLV.q.^=lJt9&WqQlA*`PY=DP_<7Vk_-bg?Y@7m=,-[Sk"'CIPJh8
%;>c\#Ya3JHlDR1M$-1lA>+inKP%e".;`VbLl&5t"=%q,a;_ZsmJg8=#GZgXk5]"'sVJ$>G:ASG\^NO>.JSW0QAgmh;,?X[<ciC>f
%]6?.I]B*>$L3D7UiM7F`9#D^,\NF^t!8@WTT%,'e%5ITLM<,nkX\5-E@Snn\[MbQ-i)[C2Ld4T_b'E,q,I1"Nr:6"eVnSQS>Z!`L
%gG(1g]8^jp0N]qXf0h7JXA,g>6-=6/4XUSAQ^DA[1S^==.)EOR=O`F?-\0X7c_%`?<iEF7MFm%G8n?!^3s#bpRNt,n]>)P`1_f%%
%*c,Y-M6s".60nYn,m-/ho2GNp>J'-O'4j':rGdmmk,JlQ*S9D/%eZoS$V=*]7N=S4U"V#dGBR%jq<oZ6Ni/3U'89ehEH!p6@DZ[K
%B-2b:QF,:IB1mO$f4fA6X+X\Q'>h[YA<ubKZ,9:;r(o$@]<BIh.8Uh[.2.*UhkH<Bd_^:W`[9]4^-4?q@Pb%KW?bUH_sr%2@4*Un
%b$kbNdGIIts1s&O[HJ";V+<@=*D!jI:b9B>j0b68Fm'u]`7Fd+%Zc:d<#Q2s<;qW*lKEt'RRbPT;3lPi>_"K2B.'a&/U4oS#,4fH
%>Dhlj`Q=+:a_?K92%EKOk715cp,N*^k:2r(ogD,bjBViHhNtF7ACqK0#1JOXONMV?Ng5+\PD*'<4cQH26,e$K>^=83V7lDUetX3b
%N/F%i`)ua)CJA0(=4EpqpF?FbhpIN,:&AIoTp@GP"WgXenYBF!bIpOGrZ.$1NX1YaPAfJt+"jcBf1QGc>_)k-Pa&4\0T6j9r,dq4
%_#j)TD&>fXai_&9PhQW^Qct>%fQHn"&9jLV%\tW$Uhfj-p1,sp[MNs>j@br[=1dlt/trDVeN-%-K*Eb-hP,jG$TcHEKl^MrjPhS9
%LSPjK2lMj6(HA^Q'sMsJ7p)N$0V@L7T[Z%u7L5/1:R_cT[CM%daOlq+R/12)<kPjo!j<<H-QHCI.[_:1e&1],17bGgW`1B(4j\J2
%g+""seV9ZLkjIP"!dubC:RM8Q1J.%sBX%U?Ue=8;<<N;`TQK1Xehc,,+@X)^]8jJ%#Ij+;h1$Jr-hD83=SWdI+o2g"Zt.*M-3qYo
%LTblniZsfcpUoI8P;kn2>iiGEQKaX=i-U@o!BB?!BunU/M2)U^grC0GOX#AT]]/^OE-T)WrDm\"rmS4!T;Z?e+lF8;(.Nkb%V36e
%_V]Y[K"RI!YTpkWo6P8&_#>3h:*!*ko;q!F^mO^fXb//uf[cj7bU3*a8EJ?!DNr;Xeg`VSc<c;_PhgEIS/B;J`+_rR&\DSgZ6rB&
%l`+@EgL@J1Rt]+$C_5C?Zn6D=aC.Lt!O,#h7bo7IMan]_4PJ.K*J([^[(Z+EK]<($mo:uo=6V$]!&1)BYs6te;hZt@D`G7uI24L#
%d21an,l^6Nq'W9@+F[9O9.`;jpr=m^D$4bW-nH@5OER)JVMBZs8\Z,`H-uo,(f@Qu=K'Q\F*.XiG"A*J3ad@eFe!'PbS%d''#!FC
%:ZE*m&Hgh\HsC?!HBh)9dcP'AWP9jBd%&PkD;r*aeT^EbAma!/Geqlk/o="k,fasIY?6$[)W1rAq1L9g,ari#[/j-JC?IJ+n^]6]
%L]Y:(m7mGF3Sh4;^*`8E?MSl9g:9HDa'4>gP"S$CV?WZ!HJd[kY>,oUj[!iRpVdZgg(#Gt-f2&@F&Q@8FdmtZ_ETEYE#P3k'Qa[b
%9b?%!^l^hGh/B^%hr0aE[eX#!ST>Bb>UC8(=kU]uGG\8G_UE:t17%/*VOTco<'jX_K;gr?d\L\I&^'nN#^eiOe!cfqB4oH:d;4;6
%!+!8JBfopn8c)n`)U9ks9Bo>,ceYnPFjT%Sc]JWIKS(fieQrsU@0![TfGR*2&'doDX<X;C@X30/pugQjVO4bumeLQpq4+=)*Aqou
%JKAM5@VbSG%FZGk'(2&G0G>j@Zsckk)30qB@<I6jl5MBUq&W%`-i"1d*`%&O'/r@Dd9#.<E5?VU[QU)@?59ntY4P`0V,XbVJ->Xl
%WKO?M<Z'Q%l!gDq\HOOg@UCX%qtMFcdVa>]TbP@$7sn"8V@2Qe7f-/,*Z37sWkCe'TI060o%>:d>90YsdibR:Z7&`-q&3Ld*[3p#
%IX*Wq76ePAY91RBV^7>6BjCUJ7J+JXa.8`"@gm[N;406El?&M&Yq%D61[u)s"5/cLIj2SB\3hbF]hKV/f>fF9O#u8mLH\DDOLp`)
%.(Kj<_<WXq#^<!U$uFd3ELOUXEYm8hkc3e$WmBgC^Bbig'\'3UlqY]Fh[iG[^au\nkSZMOBGMaV?`Q@P\&JD#%>cuJC2r\-8el9V
%V!$Nf!5$^R-P&@[N!NqXaX\=#$4-X$#=tAWh/2c(_O\D6&E'(6L+#<N5rb5Kdn;mNZ-/;fT;EnA'uBZ,VD13&aDl?=3+o%XH0lb9
%S[5P(FfB".U?'PG&f6N2LU@@i*,k'RSi_aHAXo8:9;J9Lk=k;$/G"fC&!Sj)r\IT85TQuJ?__ub.$9sLl)_;EL8_`d>KK4N1lFJ/
%"C:/`ncp7J^ffmdVcRG3([(oohKKmRp9=V'8G3'Vd5,E["UB[:./O9Or@$[L]gXHrpbo^WB1L$$AAd#ea9B1YYo%Zd]:2Y`\2<I]
%r?9N_<Au`m,,B#i::NQ9'V0`/UZgk)e]\KCFrY9Y>9u#&?lZ8;eokQUKG;6&6[qhCCGg1AW#@@A+rbLu]8MbrD.NfWZP+Rh$j8>!
%kb6Q]:c*"3G((.oR2mW]`E@rh%.oH75b]Tp%38Ma^+o"g&`du0Ps4m#O(G'+)UtTZ?U=s&s.M4GDr@BU@=\fXm+-Y$h]h1G^2!,5
%F%,[S[Q#Zs'JE$mrKS9"]g(fZ8E#Et->s)&ZeNXufaLSa`2K@YVQ2g*F*Ak!FB0$GH=fRR[DC07KDGkK(t8nu&f6=\;'c^8_0BDp
%[Y'N.<,3gbW1Fncc'L\bO>dp+*92o2<\ETfJ-91C%Mm/U#r01E4E\VdYM4+^"fn\T&TcH*Qrd&.fL?^a.r\nT`.eecW>uI&mcOjt
%Ge#Z=!,bBL\1736RbLumn*'J8I`A-qX@,8e561!tW8+ZnF)F0+iV)'k-Q+maH4lAQm5/R<pk"(1,YrjekSTPihehs3'TibKa8YId
%TfVdudTkTZg,^)P-))nE>m`W,+$18F.?k^7p^<C#%AuKBoPigoBr@jV</<c-m$[1U*a>#iY.`ni7KdoNRuN2iWO[4J/(,;!5?\@V
%!GeuD9#1]tr)"j)#)89BRl_+gdqoqKdiHQPs/LPK@KNF?'GtD<H3GF$(2*\/N_@&k]>igeP3-<&1m8B%l$BrTn\f3/0O":gQjq$V
%4j>)kQ<]k\01-D<]=Z]rWG90-(Zo-'3J/">Zh.8u5,o:k%^]t#77uF^@n%0C.Z230$M\F:8e;IAW>PZHZJep[QF"ak/W$t%/.M*M
%i(&FM#@&;eC8nH]^RR>OA\Q39?l*L<NDeH/C[92mW@<[R-71G[dl#\Sr/YYf9i3PLf;A[Jo(!JkFd*[O991*S1L+/_k4H$mMcG^/
%ce_Y2;?b_/R50@_A6);q#e?'J+o4#=T)pBdKu(kiVo>GCQJH9)q[=Q=>pE[Cqf?UY$]YLZ+UAC(ZX',,p`-9VVV^aJ<DPi:8I[^L
%OWZ(4lRU_Xp3<Yo_7Qk?fJ_i()38'7]gtM[0a+2.-oIpb1_nKJ6eS>CkE4]6-dB'@nZ2GJ;aL*pc2:j:SWedV*lPA"4s-.fY7/%l
%9J@aS-FFna(g0<!A<A3.HjI%LffB[t!F2F!:@hKB>+:^?*B--X4SRq!;NVT2'k)8>fd6=af@Ha^mH`<>5%PNdfC"-2PG,X]GN%[n
%-r2ks:&\_CrlgjjH(>p#U%Fo(F[&r>r0X![D/9qlpb#EPO>1Qb;]DE)V/Mu-Z1'MclNLI0f6W==+Bc%kP4M[Y98g,^d]^/9Rc)Mg
%5$jL42jKMM@(lf_573B7:bc!ni^fQk7nXRPauS/OK(EGDq@NH)JHali.n+2*/Hu\(?\tG!C%r"<)e[fG8+ERlb"RquZgD0TN[0\<
%l1$u<-aXG9-R5*i=e=leCH^:B+!Mc\hdj:<E4o9@i7)V\Z^iSG($j3Y\VM028+85SZE>'-p-pM5.j9qQXH-5"O(fNc.U+*<`[?fq
%Y#eE8!->hs2R$')qT>%@RH<6.B6'uW!ADF#Q^@\r*@_Yc[9k8,]JiM\I2ucK1.mtmgQg]_9jRCt/Os"$='Xp:Ko^PZe`61$BMPHg
%``(VG4T%9uMTI$W>u*R%/=M2-H>_oqgQ_SODh)Y!r9cnN`NZ0e>n4m-hKC0e<>dFn9ui$Dq'<p"4/LnimYaa?0H&=f&Lb*-4`Wi8
%)6lebS8I#K(r^m!N_Yp7M-/^qm/%s91NFV:(A;<s`*VG?8[Mq*K/KeJbq<>U&cYP`i%)?N'XUO#CTWO.,CW/G)E.%<F^th`Msp7e
%b^+\ti7N6/m;'T",qVH0`_\D(=im"Tje8d\Q.<+\=f*tO/.>OFZD:kD(^FW&'_e$#Fd;E.M6&_d!'$nm!`7e=8uX31Q)9k^N]/Z3
%J6LTsr:ScU!L4U*q8Ab(=s=?`!h^r\PVt_uC/Y1j90Pkr=@W[j<`S-:k<sY%Xu%Z#;q,^9#3W@Xc"#O#Zhb0r:LP$_gj)>ij2?iD
%[BA.,f_aSR=l)HhKKNU<;LqUOnqb8TL#@i>V:/XaNlnuG8n5pmTWllTo[QLr!jNEuGsSJdBU\D/(q[hO;^QeF/O+s[5Yk&-?USN\
%f;Cf*5h_Ue(\sU!;X43dS860u[&$UQL30,E!J]#W40dm2.flKAN^^4h7-Ng;/M/rPSW[HA=g&b@>-.J]lc:5>To7;eV[bCc5i/cj
%108a)=HBqhS7"2ED"g^r_[eBEoXg82RI2H*V/Q5-;$d5*EA97TQLK!5fY'ZqJ5ZX:PM`XZQ#GglTM^M!O@ds[2U9bSI+GBufS2.q
%2>sfZ^)s]@8-'$fqjG_I-J9sMfC.?d7^XGn8B\Z[`BdrP.U:$JXQ3OWc?H?jUHmBI=`!-02@kU-:=l6QI)tnY=n6bn'"^F_Ql]FU
%3BOI-1O2fSP<)4CdMh/^rMq`djXX+Y<\1'iT!Q!+Z`Ns%6ra-rouJnaq$s`2_WbF$&j#F[@\_O(R5j]W"rR;Apk%[A\-t@H95i^9
%o0"^<FKQXe\Zc`0GD.q+LeNh:YT"$"/pKd&pSEQHD'WROkL!X(/`oU@6K//oPkr.CLB8qrbu5FK0u:\G.NZ=Xs02TZ:'nOPe!<8U
%j!;SZY*k=nXYl6'1>QecKR&8bI]Lf%qU(MU5MM/-6ZP/!?\Z5"F#mB!QNJ;?rI4T<M_e@qc(%iiO;/X%k&]`EBO`:oX2GO[@I(ed
%>@F-bariqHdbL;YXK/!r)OZUeT*7,XOK>Y?9_tt&W%6GsCf!dWPn_j=mi=8s@]-dtj=ibK8!-q!@H0@*WW5b[=B"BR!`PaG$#4J?
%6h0L4k5a>KL@dPK=^Pb3=,\P]jjlk\/l[0@,IdE6ZFGoM'A5s6c/u_5,.61M;C?h=OY_VSVF$7fU=A$`$60'PGG!edS`OO1V7frP
%^02t*SBp_&^;29LOlKn4:;FaBY;6#AA8kL"M*c7u7!"sS8J>Ec2Nl*Vj:jE&:VC9/W&"t[h#="YB80<-SY9Di_%miq,_ic0g"JI!
%3IX%@>#WX=>)9^/T5VctU.LO99<(X-4MPCI1uF$$eEj`Z-WHJWiAeI;32qF8!T?-$hP9:7W$Qp;/?PG^li'#DUbH=cFGEYLG0):G
%77)l[rTkCd(5m7E`o]CBYk/gu:+cQ:,Qm\_XGP7i.Z'E5:R6B.N8(Maa*=C%-.FVlUGr]!V]`H]`R%"G$epP+Y:[a_T:Oa6Q-d'S
%Vj$-!P(XMj5(>a[f9&X$Tmlu5fl/KAmQam+k;HC\#gR4-](K>=\#Jqt:-oN*bCl@GiVe7G&n2Z+J%">mf',n=ObKM?H%OumL=c-8
%8DZpi4B,_8T+aI4:C7Kk!@a5Q'!!J*29OeFe=toX8ncVrE$[eJI79(5\&&mlIBSiYs$/8Pcbq29%J(\E3Z2;Jpo\Sf,JBOiPD+g>
%>D!N.Wm55$J7!9"E^`^O(X@gm=LSGPi8>DL+uGuU.8bAc>J\5`L3L<f"u**L\RpCOWZX#uL4tf%Zu'^1_*,pI8^j)fiK^RSo0-V5
%75:_^J`dCqNH`f@k.-XY48u=RkIFK>nrdacbF=H(MH+?ur]DhY'Gkmf9a7e2nP`p$KAgZoR)kh]W'A7b3=^8H\mT.]l[p2["dD4U
%UG1X:/Q\62J\QNFGLBa$;mc>ZV\l0"r#i`t5PEu()WC#Z,YsFBe'jbVm*dLXr&Ln-cC*!Boj!k8nj7[ARqfW_^;R%]L/W:)2@.#I
%SYZ9Je&gs,J>`=hN=LmKE7VHRMEQ-_cJmO8oYV)E1n1Vc&]s3+'X"6550^2/S:/KXT`)/MA;hodIJb+XV>C*_`I14mDDat0odoDR
%CP?qd,2OWD:El;2rec#rf:1e=Vu"k^*TI[qPF68XR7Yj3YO0(T&CtL9278S'8cE_RFV]n[kF#-]U`B()F<b6I!!:4'#J6R7N;:!D
%8$;&Kq^!8br]1<2nZknDN+u484F!,I!06)n-4VOS:@1kq:`L"Ik#5!qP?h`D'4CtLT9%iCemA^RlnL8S5WPD3NGM_BJkR\=N35>p
%]G$+Lk$D`KMEXGg_(d1:4K.9TYM*[[_Y-tKn6I%[PC5nj*,*?Y6U;?>3LqE[YnI%`iOO02ccSf0e^I^QVX+F\!.L!0E$cp?r23<s
%Mu$>GqIr'(B0BO_Wtj\UGH*N&6KPe(]H95=1f"YtgO5B%Q]7siLU/i9@g&^\M6s<'"1Z+K]SE*tYDuXRI(ZZW&64INFOt"*$;Qs1
%<KJbI;W;;1^1W8]Q%`JK@Dti=2FLZi.He&AL4i<<9&3I_;Cg;nmB@qT"-ZHN=jE*23/qA)k?o(g4%#sEeG0g-<^0PnOdm<k=c#%Q
%.[EYM$9&pt](B0^92Q,t9]BE;iT!HiD3K<qQ3<42V"lVKr(GI59WF\,eY&76)6d,-1u%eiH5s(Z``U5">T9:0Z.[OGqo>D--"4Ad
%pg?`$gQ(ZFF)3QG6jktdp9U3[nkFhk9G4p0,hDFdN**]Mj`#Yuq^9O#VOU9'6lFQ,`Kd"@pU2?,kc0mqBaWgelJEZtNLFjo.bCTe
%pfePkA;4&lmc0C.1!=/!giRK6)Ga?p^h`O6FTIZdoi0_K/_H4)dj"h".C-%a.6>UtNV:G*<U9Ao5dQDhBY3885Voig@_Q32+hBS`
%]P<b"RSgkjeL-1ufE3URqMrI0@c_;>FZiYf.EYCYH#[&=#@^e*mj[u%?&h$FId']UQ"tQGrejP&JIK::Ei[U-)^A,GP(gH[EMf?Z
%>\?BFck9%9Zjlm1Jqm04(XoGP$mQ603#^BK4\d#/C7Ggt`!#cN[-X1Sm?ERbcA)Q/'_<$k.?PRO$D#VS\F8p>ngtQ*&<PJ=`c2%;
%ZRDTB$YiL';Y5;4ocHJ[hnglCO-%Na:GenP,T18I2m]!5&^?X$qskdq31=Fgr(&+SH,FfpcpCG,oNiVN\hoSu)Js4$:fi_.10IOY
%D<C%E,u1;7'(G'jb=V.t?*?$p`E-2:3W:Hkc#F`,ZWB*jY`cY-J-h&5@P(,K%clOc]bB>=j'!OM1.t9W9L`qa;5C!T#/LX"":p%M
%4srcrG@f;TP3#<!n&g.<C`)96PsiCA+6Z%L($la_5\Cs`CYiDX0jUJGQ&NG0YC'$?bjG:S`TO'>'d_paTVU,IgcS&4DBFc)dChR/
%GK'<.Ib_)R_[[)E"]`\,$m2d*(dM;@Z>>AQU8jbLTe?"7ZG#*#p0q-Q=(4L>fRCde$MrD4cEK_?$6URL-L/2@2uO)-!`F?!EZr(8
%2:s^OR$h@l.F0(`U=NZ_;lp,&?lH[&m)(48Dg\BL6c,F=[c;"]XVmBe$lm<5F*bJ`,LQ+S?3q.odA?it;r=!(5"!SKHF;%=?e4S7
%K03i]N:a;g]iRY*$\CoHi2A7<OWsqm#L!5.0gt,L`:!]/c_hbE(glCnWG>u5=i]]@>L@*-KghJ/_^bR7FRLbu48hIU]Xg+nFqA6\
%HqGqb1"V?RLQe3^BiOtlG\WjeX)i+grd&.W3q4#&AUoA$)^n($5BJ?hBr.3B<I0iOd]_0jDd'rDbonm>Xpd(=GA",bNG.aKA*]\8
%(\rNfaP*KU$G&R$Z'V0eYj^_RfW_i*1W0cG1C1XcP/8WqRI(>O?rd3Fr9U:^iajq^B@NGDeDeb%m)q%Uo1I^$>CM7P?rmoMI)l<e
%5'g(a3Iieef#IFdo3Z4QR0FZ@=A7K$*g6Z.G5)!^X2C`-#q%D(NWA4]fZj&mrqoUZ91MP3s%7T?,As7oe]*<hIYfT0<I,lO$g(Pe
%N#lgZE6G$ORk=cfps7Ltf58EFY\rrX@*Z</!#:aaRUSGE@/MNn,HB?'1h#t5-;*Hl'BNSp/1bdoNd)4R]=R34k&]2Di"2fk&%/q8
%3ToFN)&2#_la43ha#a#7:mJ#VV7$C?Sk:cLlc%HYX*Q5:eM5J`e')Lr-GTcF6pf,\A*Fh)d4t7$cY#K(ZdI:DG+p!3L*#j$AtM;R
%\qjnWdi/%->KtK">5k_j+=+0YT]?ok2Y6N!j"9/AdbqB"0+r-H!;AR-a)bYa/EiGqeQR6S!hP)tStN^Jd:aWgO4A>Yf^[l]:rrFp
%E!B[EI\W:R,ta8B)QM@#7"RGfBr1o(>^h/dF;PnXp@YqVELIQT"8Zs[?p&QP>uttdC(BqEA5WlQ#_O)ahs^JY5b78%,3l&g+U]uW
%B_o]-DWVnNrU*fS,"A[ZA`,!@031H`C;<Q27F,>RD#h(#!JY3e^AkRC3(5qDFF)Q<s1$,8)!u`26u2BB1k5jXbbOA:U2"'d;f(@=
%&l4%E.ani)Z0n\$=SJ_7)).I:'5Mf\:fFt>%^_=^pce!4:GYFBY\2Yephqo8ddl]&_+5=jg"p\FZG%0oM"),1IIZaH75YLbS_)_j
%c9/gI?^2(84MGmfgp-/I-meT"(l(kt5MtoYcYhWc32)R,#kqKK%8bVdj)aRXK)qJ_3LCY^0ZgGtL!@PqG4Kua-uIJT%3C_$6b)]G
%`=OGUkVUBGVibFu]??nd#Kphsmapc';B%RElkcNLPZ1g?K-<Da^*%^VH)Ld<FA0D*n"`[al>uFFdYk&sh,:akb`#X]d&SH"i9g@%
%eFD2#rf&%54K&5/g<P9][>q>X;Pdiu<ENip@^i3B$83kilu`FTbDX:#jA]ChGWdk:)2juk>64HrO0@B0\Pk7iij@P+GC7liGJ$pm
%f&8mX0m;W6&prbchq828I'PQ2<5Uh*F8)Itc<XjLCKU#*/JSJ]rH.DsV.(G]*1mS/YV+mOGYH"AkD7l0+Cd"ZHakj8PU1qeB+mm4
%+J-Xk:0fhKnF\QT"7N8.5TlZX<h9NMZ]VXN)O4,.f]-3gC3B:VAU<cpktWr(OgBqejRAq5e59HDW/?Qsfb7t*Z0QBI0^=nS]3`_,
%!<]OeZ\$)*^TAq1g?%KMQ3]KUJke$*(Gb#EEc.;`AB'_55CXbB@e!'g$tDFI+@'1BLU9$XQA:UB+'%O&nUpoEOP@-<8a1_X7]p`U
%dJ`%'N`WZ38"kH5_c4'E0lTfP]dLBD\"fIH,a3U'5d"o>1&)JBH<'.RIf8W@6HQVSfa_L#%l/3,[%k%Z/2AVrZ%"n^p%!**Ock0K
%'ii!-KZs03S4@m6gGrdE-KuDdG#imb)"IZ%W8d*Q'.t!AX?6ZOPZV/9]@tQ8oCk!F[UVHe+P$TgRO]RP`>p[9[K-Su>s#K,]]6C]
%c>%+n7,AeUZELXIXS;(dkPf7:N3uoF!YMX&V_jiLOD)js5.@r+B"_9fbVj!I@],'F(bA<`Q&60GN5QhK]:Dc9^`@O@eW#Dt<n"2K
%9"m5`PMWeA/LX(=HZqXNlY;d!"t!4a.[SEXe9_<Z3Vnd<1k&1tFIlUt"K@0M,HAOrc4j<_gag\<rrd?@Qd?r*>;Vt&g^"_jY<\5q
%m(UhJWJD.5E3c83`MkT"?;+]s^\W3k^$dRs#/8(B0kbOW^*)?G1;0ah)EBVYr@T0XpuSiDTp\;:U]>`7dG[h@H.pQ3@+J<ak"Pl'
%E1s>9Ug+s8ljl\o-T^^*FJ-d>$U"OHM-.b;%9[Hu9d]rZk?X0?Fpd4`SpO+.c:Y/m87r^BX[/K#IB[>aCla]W[(V_>goV.E3XP>"
%DRcnfK%+N13S7dj`,3rmZ)tatT%M`;d#!t]g<S4g4\b#%g0?HP@-r)5QV,T_nu0"12r2`#Mn@t,T-Q_0W)MIfB+2@<J*4T!5a,U/
%e6/l/E^OV]A)(D\@oZd5W=0JVD.D!;cbL02A(qSLQI'Ht;h-K#?BD\D"lEni:XT-dRRN<"frrZeXu4$L.G-hD*cEDJ\9flmAKLnb
%b9?\RW4LSKnT\!MR-H@ST\pi'`OG-4a=&Ak.Wn"1jC-YQrPd\cp-t5k*2RO'GQ@T!0T=R3<=k:.:_@(*jr"6nRQGJeRutM<>Zs5!
%9Z!e5@;7G98&/'.YFHH+Qh5`OqrJYb.",,nHP_rH9$QnQq9ZXl"nL';.`FZ_1N62M^YmDY527$7@iUL^aeLF3\F\G6<n\+srdq$,
%H"0Jt:6aSh!_B=%k>ZgQ!2bc-I]('B2YQDQI9@)$lqt"'=/FVmW1kNS47CuSN&l(7XRA=GHAY*V?0pqDqCs^fItF:pk^]SmD3m^9
%l=NCaH$s%YJjqFh0fQ#U1l1plnTVq8$CNP/JK:sTlma[RJXFVmJ`(P+a*J<>cR(onH^6#?9*_u`G!d_rLrB>0HeD<fNfS1;O*i<d
%6>Frg$XU@[-`E*;?\JE?IVA3LUa0Q,0TYMol0CQ@?#9KH&s7_oY&&<N=I6_@in(TYi1J`fF1U6P?Nc.:rdDi!<BpZ8IW\!KD4/p%
%X<Zp]?Wh/'"Y'@%/B4Vl;"K\&g<UVS.T1mUF-]f9E"N_/6T`[r5:a@3T@1e,k`C`fRpXoqJk^WS<2ji9:]306),T=M\QJES0B7it
%_QZBl2k(*LU+&Eb;3/**%3lJ!Sob_!^mRno4El/g[3iMkVN)3();;;(Ys.p+rtucDWbDmq/g32K?9c'RNWBnt-mga[C]b`o-\L,o
%Po[dlY5\5?IG#"Mg[c;)6g#21PTZR3m.W%4e)s^X**/:31jS;s_l8SoJ6p>?QHq^g6mcJ?/dnKQgQ_="YP?0sZ,L4,AFleWD<C9/
%HZ1l,UY`\"@!'Q#>bI#/hb$V9L:NN5kUc^ijZJ)`Xf-Ca-(f[B9q&W%O>eA2L,^qkB"2eFP2mMgFKVuP1+rf.=0`76P5)fIePE_=
%>_^96_V?^"G7kJONqAil<3tVNH%LXP66X-JlqO;pIEJEX]GfWOHf:lPC?aD[S[$DU6W9X^MeX$+bT#g$Q^Z5P7Uld+[ST/GhD`ZD
%9qmt-5aa_5c7Yq8KG+E"$fGejI2fd3Za@d9CHX1S$h[Qc@qH@-mm.8RT/)Grjefn!pM6;dho-9HU7)A@\VX)%hLc@74BdqR07;<,
%?GV/G^53LoMHIXZ7Q<XFJ`..*)pcl(O>f(%e<0HS8P9NSa#r0Nlc???_oB%pmidHVDPPAm,X@BbK.C9H?a1fX^$XOb%#1rpE`4VU
%`3E%rQm@6)m]S:AgILW)pOa#u<a@pVD\N48oZBAi]r]O36TR'A^%/9X;cS?b7dq?%E/[*Vlru.^85_#j-a6QP[A;EqLs"P%cCCL[
%]8'm'j(aN[T+tgIL"]tLGm)NRT<b9@eCV?)`_CNWfCYa<G!,\ts.P9FDEWZ3QJRibIQhLZcDe$R/e[YKE"e6VC6]R&C5_h5.[+Wu
%A=IW1;\!2^[ULW8NbE*LPe]<fki9jaIZr-oqZrVF:L^GO907O\?h;6#q:'"+M"6pn4Kl[E;cHe*!uVE:NM$DPZ)IW0nH-L`,62Mt
%cOZXC+\u7J<-P@!U_B$+](0jB<f>e3fI*9]VO,<C?rZhN'B[qQo;0SX9O"eajIoS>VoKFbNS]G*2:0T`Q*@8DD`O4;_fZ#s:*/D<
%G81("]1m'X<pF^?rsJ#CCu"_R4UCbsS'bE9VU!+5($r04mmSTJmL%N@/#-ajn5U$9A4ML.G?i?*ghW)T<3$'Om!mLF7[-iG*]?cq
%+sVYre4Rk0@ToV5kkU#0SB]b$TBeR'rETG8:*XW@i\u26Cqa[YD0FA<8aUOabP&`Y+cmO.pPs9cd$0KLdjDJ>JW$XEWuJ,Lj5$bi
%"fnl.eamU%#`\Jt5sOUirV>`T,O?G^g]\:Y&T3X*G%RY/bn=U`,#Q-bP.2.m!##et.UVRO\CXFJF>gh+^oE^L9'9SS+Fblo!]#M7
%SEDbp?4kW-?'>3U=D_V^!grIc->cC4!7X`@r+?s3i[*uDrsj<'^;[l2M7[igjY*=>1GD/abuJ_DT]`NYLq3HPJ33;A]aDb62!;&M
%&(+RAXi+nm:G)U8(5SH/5?fnPCfHLP/\`pV6d#N26YJ$0:qYU*cGU"@R`WNPHTdE+$bXWVfPF*F\E'e3SJ%OG7O52L2ID-4TU*t?
%+)u.`PTOUj,Xm]l\BX3`K;hs5Si2%/G:,]:<gN2;0tRb&9<&R$Yal'>qjB!G$$3iAqYo<bJh((aKj%d'['_"&"4!mc0d5`)]W4dC
%=Ku:rTTkKLoi4uh?Y,DKA!VS!bP"$=F@"_aM7)tZ&fUl9,j.!]&&QLD^97@e!6h@dBi.6s%+/oSoZ54OGibg=bcM:GpV[@,:3pM8
%eEkA\ns_!8-MTUQ1Q$^(mF8i0IP"Hi=JQ_l5B@mECGpM_!"<Z3HKhgn*#H$kHF<F_!I#F\RE1cUnHo&jJTbt.HW:\(D>4[<f_Zo6
%Usmktl3%G!Yr+R`0WP^^fKY7gdhP5H1\`agr24X%crmQjc;lK[4<*hge#Z?B_V!fmcc?m)Gi;b&+2'5kd)RhWWlV@WTYUZ\M!X.P
%j7'WM(bWcc]7O)E4"Ia;$VA<T7`(&HBDZd3-e_/0gARSJYjN'<bUTACr\P>*:gS[06+%uQM`JjL,9FkV'NIr(lNmO6IA&-cj,)J/
%HU%\/:.]6f3#i!AIIn*X2O7P[CuVuM&Gm(mUd$oK_XND>Ou=L7Y5g^LF]BOmIoa%j:ZW63(##RW_CB^;eSrjbhQ"3BQhNus4N%5W
%4t3Xq\qNp)=*=:8obrDeotZU-q%(`Q<gkLLjQDGDF%Iqhbn#1_0(?W,IS^QGH$<)9e#0['(DEdq",GN]OlFA5$\7oOQlJ@t9b50E
%KgcG'6CH!`U=+IMa:lhVRmJ=*r$iP(m`lKF*OPpg)Ri97Su2WQlnQh"**!@;r<\e-#a3n=rWc;@W"g/J@/6]SXsPZ,hoA7u@Z,=E
%>;MYrkPda85H:4D-b][".$'!4$lq^%7+`,;+WQIAHB5EOZt_cP3g)B&%Ors@H<?iS1_d-c*CJqQ&8/tf4_Y;MaoiE4\#6u>LWjf"
%O`O>943Nt78Zia4,K1c`;Wk,FWE8@04-D9K77#0.Q"6/a*TDAu_1`BZBRTF^heW@8.gHrBDkC0-4*_\o6`X?L]Jp%o.pQ9:U@:\+
%?uU<ZiA)$)\/BL)B:L)o[P'<OAQ+>;"sp2&>=U_?D*;n3o^Q@U#Ra1GV%6AF_/B>je)4"^mcV>!Vl[+8FHI`Tbl-IiY72imO)D/T
%+p`^kc;tg4"(-C;ZLWm=B++%X4*hace61gX0sMg...HGGm5o8gYU5N:kVc63L1DogaAF8A#gB4h7$GU'fdCDQ2"<Os)uaPALe3@6
%pOjPVO%##C/GTRJaR/4.mkQhF$$B=h79h7`9k6AoCH,5(jC)[;odr8$9_MkY/l?/7<uGG&3C^]UmE["F;^TiP`+el+C#=9P@qe3K
%i=+tlRX*[XrY8r$c]`R"EQ45/'q]1pK[]Q7>`d_=A?m0/Ki9qfdWk3<>;s3'8+CC^&JKM'Wq4<egSA8r4$jYs9]/5U?G'bt,@G"_
%V]V6b:J9ad,-%P*cTVOXbcoT0o@dnH#'SBl#);G(5BgY.fiVN<L^A`$Ico#GEmGF6?."V^M>A7lOIA^1)P;]up/n/_S[7t/F)GJh
%U/HpAEZG2"b-@7aJfW&c]duLd0$Zjl=*iA?(aIaIbPV(aEgN#Qbgb/..?10$9.DgGCbOeR3S.=AOZMSfk^g'#9<9:LOnnH"dYk;N
%(M"mm(F$sP4@=KCQin?[cIO1MJe':JO5rcBb,4(a&a(c&[,t><3&7)R0)[C)Ksmm)AtcQM0Nl'2buj(M\&`utNIPX]g@MHSo[*_-
%=CB.lnd*=e"L0gNSq#BNJC_YTQ*[26jKHSE10kP7)sF*"?WU24^X?g89j?2F't2+k>h^(=7;dGEiFH&ocPES!#eXk3>\W(M]L`rX
%hob.p*0m7m*AVMBTK3KglSj&lqcI,La@D`r$9YQs$@,"<-R:P'JK`QeoKAto7+r2A^E@I0fE*)JQqpG(:PCpuJ%"]":<_<^#O"!I
%(M>+<j*GYCc:8hM'D()TJqD!;1uZiLlXbEXmXru)+VQu][oo!YVGBT3AZ!bJ8SZ,hd-->W,CWX7o^8TkraT%.s4Y3e?iMK*4IATU
%"qecpFarLf6JpY#j4[r5?G^PZ(H0*bD/M^`ipOZ64j=JRq)kY,'_,(1NhL;arc2iGBDGmD-._@Rk\;6^g5g$"LMN5,NM!NQqO4OV
%Q[ePY*fd\/-ui&CfRuP`n6cog>"9G4:,P,j<nChX9gKJ1&3d^30s*:jU>?m'(7!3<LlTdg5"F[Ue8L&VY;r,!-M+hlkLj!*AW[Gm
%/'4G]6f$i4n2p'-ED&u3.]t-pPt:J%)R;3q:VMW9\uS;YaG8d(_1GYiT_lBG<,3@W[#A*G'iia<1V1kA$ge*)$LN$Z1Y=!tj)`+I
%P25e)_OS\2i]D*XJuXT@"pAl2TYYF].I^71;_G&0qJhhA(FaeX]>BtY5`BALLqm"A03Dgp;K\2M9#0!#Gt;uoo>_E0-(J#5eXT42
%cb7riqlD1uE2GV**AX90;[js1JH-ql1a$IB:?.o;A$[giVVou\pZ2r6dE%4ne9<,TTAteuC,N/:P8=]flEP<bgGh!lPWLV\_rC!&
%[Fd!o"0<[@G\9%YPUea(62%Q=@GW\@$/J0+X?d+[Yn/>s0gZ;FEI(QjVkO:.j5$R:48AA'd\%??a;-4=V5n>]#:h`_5Pi#_)YX#d
%jaUaE28=i?#;%9jD/M'?PH_pIl`m0RGR\,Rc>NP_8;"bP:1r6J("QT7;;S&nPh8n]_$46Rn0BuDB,nb>nUfI^7f[u7i8F\;JIs6B
%55%uoHY7W@mrOGKL/H1PKeuP;4CI[!@K9^%NomKCQ21;3.Y)#0TV48TkfiP+Q.CfRSYqBf^A&?d-9P0I9KeQ5iB*2CASMl-SR5PF
%;4b#jV1OEXBHm"k4N8%.X@QI:8XS;=J[tnu@U5X`]:c`%[PE?.q/[cgSU5Ai7<@e67W"f;*'6V;SY$_jcBNk*d]VjK,?&]PGOr`e
%=IQ0<0[k]LCh,3",M@liiDR0WE+_1.ic`l@''W)?7%$W"NLIQR?#el5hs[Q"8,Q2m!>^q+Imkm8];(0b1Q0r/Xn7NM^t4<6/`pAq
%=t.[m`YESGGUod4qi6MJoU$t$ZRJ\Hh$tL!'Mo$Tbf"<Y=n7-OZlBGW&sh0]<nL\*'4EL0)hOk_/I%&E0-.f.b3!$o7[XF*eoibO
%MW1TW#AoX]XmB<9G?LMW$G5Wo4bo%WJ(+T#-ld^7=NC-DD/^(7^h*9kRse0Np;Pmsi)\j/.?TWdPAbc\cBrEj3M&ni9Q9Y#K*mtt
%*"^/5jN]d&"k*lrY0rt8rFJJ)_b]"ih"r4R\)Kp(I7b'diJYV)F>/F.84]a(jg@Kk2VQlP7at?X0J-JjGk)adaU#[I&^MHipL=lR
%4@3fK)_JEn-NLI?Gbm_YjV-e4F23WWFr+A0p!Cr+cE;F7?K/)k"A`./&8q"],Im'FFd-NB3L>))1R[7DNZ?\:h:5F)jOdjAeN_H"
%4QCASV%#C&Pcj-G;j:=O=6bgQXOJ9UI_QP=Z#$j<bl?3Y)rPC/!2NQ=Jt1%p1KV>Tc_I3_*+.?l'Mmi#B4)s(\]53**p,.^-'k`^
%5\i%Gh7jU3QrlI]qYlg.N".b#bU+NZH7oA-hS;'=#mAR4JA#/4>dm1RC3VIT*^c"4Vl0M6<I,+Rh,U=%2^DiWU"3-Xgl0Qh>e/]F
%4cA/sM'?34)#p/-l&E3QB'FMslXYIbs461UQ%(-!\oiY6Y]]2k:m$#=3Ht2V(oiZV@u[ToB,hhA\.3T%lK1/\n*0Ak&:cFWS2s/h
%YK.d2+]C5+U>7XEq@WN&XQ4K0U7A>g_foUg=rIio^pB9B(g1U,j)_L<`bT"_n!.CCofGsme&BG)gXp_///(+H7t&\5<QPS8#&M=B
%ql!P../p00ZIXp,OZ;PL6!nq[EdTj#p;,Bb1@_N,MW^/tnIa^<elo])1T9K\^b%WqnpXZ8iPBbNp?s`7R=Q`poEc"#;j>@g$Q'TF
%7=n>ub[]dk7M.,^+cAZgRQ7e`TF4\c_qY6g3m9arHeb9>`7FWhCdgOc)8Fi\'grMZ3/rhJ+M<G_4*U9/>[Spg<U7He-;#\J1=>Ot
%$OfUXEea:R3[cjrf)r4sTep\j((M':_rD5Z5gr;B.#2Vi)TR<mFlUb\[3[)I01N8uoJtl[B0Vh>4U?1bF7H4#?B^RV:t1VIrA6SD
%)[WOhY^*THLM9(&W`nLW]?[=s;GH1AH*(g7aUVTB4a0a^#&`8.]/2D/=#l-PN?K,M2$l!LQf]u02emN[DgjLIY;aVjk?pB[Oi^Oa
%TQ!c((fU7^=;PpeRsMm>/d#9(oYdZ`Y>r$H$AZR-pE*mlYPQP'(g:s4b2M1]E:&2?.NSN%_YEf=T?G-iS\]p"3MUcq/!.d`5Oj.:
%a<Lr[]@4Clni^PqW66a5,;7pg[:W;#@i#rK;3=M$??&@1Q#e2/k#RP_F"9uX!/,^92DGW<dgd.&Im<8/)We(E]nA$`^_+hMBg>,k
%+/KPg/,e:Jde%!$1c2im,`0"`j+2D"a$Z'=]5kd2qt@?XidlO.O-&%I.(*#7*_X/M@Ogp[$>EprX%BB'J[IoM&FW/S=eb)j.r,nl
%OYL&HXS<_T#)<gZh@Dn3b%A/o2?mII?9nr9=(PB?RW78KSoc&HRo65[O%'4=<EAo;VnmGdH7W@MZ!nhM,OV+4N$N@m]<E66Oj.IG
%,Tq529B5jj;XW-Y>;Z%7-<,CjI0hJ(MS!j#P2csWr&[u\M%_eT5!*Ojo7N9p+6"X$CB<cg<piO4iCDV1<JZMEZGJ&2`3dBClTMt>
%l_K^YX%f"Ec>M4+ctdm\[8P;QJ!EUr;a.eKi>,f+C95%SM#e+IF([]Ynm:UJ#!gat(T>1>ppPlKLLRiA2u8UkNgpQMCWU$Q0FWT]
%r254)?0,2,UV7sF6:4hheHHVbr@E;d?Km'p!A?M<k,E"_Q#ii_@\Ib[13`uoV!L=92"9?HiTlb6n.jnr+[T\fK'7@pmSdSQK=Ss)
%RO\>Xj94E#hX(]u[XC.h'.3`6Ue1dY7cIHch-L_PoLM!"2]DIlhR\Td1..U%!>7foB5V<i%R;oe*eNaL,r%<pTt.[i/A2#U@-N_R
%q@gZ`kh#H,@R.e2<7Y^*GulQF/&I8hC6=E;CTh,m=!C.kQ)fFu<LJ(M:^4-QjFiR<LfXMt.SD*03e(/]Eq^t,JU6AU6kQ[KOkEs^
%`ec:>2T-7#GkT:gj<bcjKc6-(qR+ac"\-hDY[a$G:.3n_T$;7o=O9qgM6L!2Pb$SD1=@Mpbuh65L1u1?jIN;e#0Zg;.!H#/G,A''
%I[T0MbV/EgHW[6j5e1[rW>(6#Zf]$T7s#LH?O<4-D[1WY(V"R5_-&]2'U@#taDh]ApjNgrokfdu0@V3[m]Tp$=\OdF^:H4d"L_^"
%B%dIdXI'a$R/VQ,4o<=Xj(H\;B^17FB7][oL8do^TNJW?:7BB-B[90)dZ<Y35(hOb7c?2(dLr^DLsYf.rr@^N1B[T.#b2^5l(r.F
%He<Ml4ko#,L=(lbdtJnME@DrCZ]T`Vi6kl\</gqL\DF<h(`=2!Hs42^i'D!*C9YrV+09#JX+)F>pYW.Q:+]EcY>rp3&$kmd(Aap?
%qIde>-VS'&Mshs8`lNZ0$31]eh0ZPF"#R&*2"I!pfJs6Gf'.N.E8T%kgi_%4@hXQ,K9c8PV0fm;E>_`3W$LYSNiYR@(ctCa8_s,C
%noO3hq2KZm;Jd;o_Wb1?6RIq?D9Iq9=<%2s![L0/%aQA>aEMWF38/*M^r%7KLT[22\B/qq-cbZ23#8'9C]GtIbW\(?*he!eU[9fu
%J$)-@2BWG<K:ER-JKl-l^#![tm%`^Y?$2ED$UHcI.E(_\PsM3m#aN;bXZtqEp,I_/0ulbm[/4A(152Y<ol?8@F`rH)d?[UOLHjb6
%]'h2`Pt`%8:*t4Uo.rlSmZOFLA<J`]$E[VG;MI$ZPh+A)mf6Hf*%9ML9^6,3P2i&cEKtkcPM./om%#e<Oene85iAaGWE?=b?;@GP
%)LctuMNc]*Us"eNF#39pC6k\\_&`CYr#h'f;!9K%G'/0@/*GW3@o)Y`ImjQ5`sb3/Nl*4:pm04GH,*+uGZqBRQ&5=PWE;gl5fOMq
%mAVd_-er/jI=F14oK-[k\?,D/@LkG(%48!8#?e<26,a^+hqHOn^O.0X))M%Q'.k$RDY;DMK:2ht3*NMNhWQTH7[#s%A/#.^Nr]d:
%.it*`Xi^96X2J==/7NA%66\#:)@Iu5[<iZC[K-@="GT`pK/'!hP&TW)FNCVE<b%ZR<W@O<GNMFZJG^9t!nd$7BphJ:?ib0-W+CbA
%&.n_f3Jufoj#Kq!$%j^X$VlW4mdVi/iH("_4PufdJ@om],U\&>TJ?VH?M%(^MnTH"Hd<m;Lkn`5(#:W7\SBFWId$mukuA:!k+8*M
%8`KUugVg9(A\@*4E?7WoJLIZL?lUK_$M;"X:Ci'PN*45c#<'mHYBTZ2Q*<[di=7Ce`^Id<a@'h#?Ya3r4L[7T+efR1Iiqsb=8uUf
%NF<-A`Ur6HOdL?<9m]^dO\]srF(l>kX:C,_/,Nlg!mVU]:!^XT"k'Yel]!>5Io):KqpilgQu@$;KSDJ1gYCb`LL%7/6`Iam;3/5t
%[!:6mDQW^*Re/V@!:=nYJY2`H-te_RUO,:BQG#cJ+]ko`YD!hb>gd!Oj']c]RK]N]/qNShO*V/P/"h10.02TTr\c[t7TBODRhdVX
%R_8Gc-Ep(,q'HlnrfXU.Em-/%<(q?f$TH77U'!DbWE_I&?tj'-2!GaF$g'^TX`0:4qD_TGh35mn6Y=nVfhoX)i,tcTWjm$rguYR=
%U_5O$\@IfQb!>o1BXm,^3CD+XT@<2<ha"RVZ[jYsX4"C!\c5tmrM-t#Dd[*ZUrZq0@!g29aD+?DF*6gV/La9nTQ%H[3Aa@BOpqSp
%ob913,F/!/&_CRBZ=4W:1'LTUQ6,s*(59FYKIs;WIg8iq.e=p=qIru.]_GoU:M2oRFD^\'QL-/;3M4#&GGoRnCJ*:leZK@8$SNL+
%H,"fu6\0+_3+_IaOIO&n2b94+ZRKZ&gu.V-)ZrS1!A&>a&/&6C_9EfQgbL/CG>(`uP&W+<K5s^6J!HQ/#+gA:f?f.b4m$"GXL/,n
%AYG*';0d"CnU9ZYT!Rdm286J%N@,5BqH]`LC"m!B097-9Wc".sB8#Brf_.!m-QQ38#I!Em<Vt'VV@ZIL)$l9L<Bq`Y8Ml%\FDMQQ
%b+Njh3$l)!3(\Z8?ObkqTP(V:]9mIRnQE*m>H_([3"&888WJJ*$>\OY0VT._;/MkT4(rTNJHGLC5fQVY]\)Y'n8*XF<n,?@>X9V?
%dCn!+(GS4S4AK)&[l69Li<?4R++NWn@@4E`@SA*V3!1KipMZU6LMQH2CR2`O>uUTXnmZK8,]uZ$mL:q'ED85eXfihENni_*Wf8.>
%1&^ZE_eFe*?n[[48^jH>C[#@cZ&M?ciH[qd`U5.M/=q)Ha*0&hCZS/,KUI(92Rh_N;1g"6r)SkkR7PaAp79O^A+mDi>FDs$Y5<M&
%&:+]Q]<d4@>Epq5k1,iml/s(;9)OeM&\e8Q.>eG]jP%W$HgpiBn[=Jp>;);)j?Og,4b'?Qk71u\,G*jRDXc$e'@$StJmHCccoUf6
%!nGG4?>brG%8BI9BFkm^o'O3YWF]!E\V\or`%Zr(i-3\a)D[/7nbrs789TK/egD1apf5rKpbr=">^3KDS4koW9p3:hac=rK@s>%F
%Kf]cCl-dYE'oBHO>9:0\Ub,o5ZiV",^4d9*rEN>GkuZ!f:RF*0e17`=X[e$SL.UsSa%e==S\jej;&`/XaX$%F@2eGtn[!!X!)_)k
%fR#qp\)0O(S%H18I')Ai#`)7a3&NuaB/VoP,t9EiNk6cY\Bq2Lb.6hg\+g,TFX9jE9Kq<R'rp/>^-uM<b6BV]V]bcuoSuki^'p*D
%#rHT$^?$7[0bMm_k4'GP_-2O]2bUp++S!RTjc2"kmQ5)pjD-ho[q.:@dcuog&a#4^C\nTQDhVfF,PJKffZBs^MSKH`/6L`ZSV#eF
%Hcpn"`N[+BHUSD5'OB>#,#@`U<)/#/RT'pkjf`Wqpq];5rp=@/MTMUu(g"-/dl]<nn@&DoB;P5J2Fd#(@Sg:ecQ3$9Hgf)W[P#/[
%L66"gL^3Ja\rJj[0CrBK+.Y[@!b;Dug2ab<bnZ!60qc7%6H?M.fNmXJoH='A=(m]^MO)>fl!&00NXTdi4AJbJmiBA5fCgG,"9mkl
%Qtt(.bUYa9Y2.o6gR[f7#L03k_UYqrAL"r?fNb14<d<</_7m!1g6<7H*KS=25^9__Q+dq0:sH,XH`FdQPt?Q/4X?MTa)ltEXUprr
%.R#lNc!mZY[V1pCn+1#Y2q1)'Gp))b_bm-3Qd]&VU"?n^JkY]Y].heepJ#Y*(6s@l[AX#REsje.PV=^-`$*+9W8#SGM<\4\D9$B^
%"qO//$?G<`\mWZ&?WR:mME$0aDBGn=.e<\$84@k&?q`!YLYa>Pc@92[KV$>X[8]_'Wlg[iBWfB(%U)I,KKhBS%[hBA:t!qQ[i]UR
%n;,Ao=YhPA#ne=S$_^bf-<4!D[(:'V;S._T=@^1jO>]UIau'!]IF)C%U8>(bOK$oWq9]5t3W9k!Nnre>HL?%81\UgbG"aR*&JOUA
%1h?TQ3/C,8\s.M'&t5XmEP?/h7F@^*O_]^Zj"=hTY;n#0,Ca9L?S80NaRd0a>q;_,%@C)O)j(eA[@#E66EpB^$Zhgid'dd!3Nnu^
%Ce/Ch:OQ1]5>.Q6/TEIrHX>8gN@ZUumUEd:]p1nD=E--aA<GuiV1uc!\Gug$Yhs4<QTpn=_n%Wi5$)"$is8gdT-D?L(R.PN2@XM4
%gL`oL"<ior;`M"UU:)S3,4<l`0V060r*aq$)&H]f<nb\kfT-e5jsfUM'L9nTQ=hq"(`b_4[noauTlf8(e_)SJOXjkgR`PA2+[rM,
%j]PB].+D9m:VGLdnnJ2pc]4H:KmD4L7$04cB7"VSWF_Uko$>:46QAbiQu5*:]2la4IV$*K8t+a%d)9I$<G1Fk-g2e/i*!J%pZ\b_
%dkXXl-SsuI8'sTZZChT.\)^KZnf8@9DV%pJNe*-'M@\uTI64:H]LQt\KM&;dW0ZbJmS4+u9fGNo(RD1La+P)%hY1+k(G:bIig<T*
%8a;7+ku7No91Eo`k>j)G00OUE?H/=:QTIRI1fgl2A^0#((EW[Egl8bO$'i87]V3N9P$5Y.At7o64X-fh>P9-"&ap$B\.P*0Ofi\q
%#(r+slV-XDn`0iWX0c<>1#>"VMH@_6:R^Qd?qV=;.uG#7mID,-0!e.Y[m+TMDiO@L>3N_PADtZS12KoKn0U[Ae"p/7n#O+bd9M2.
%AR*%;gNb;OO$hc=_ISdR3']Red7/K)5%EnMJK730]",,!#@ip=l/nbR6+ZW-5Vtq>)AEkH,V'a)_+s9``._/C/'EfbOha9gcFST!
%Cg3YsLkitgDQ0-R]N*1F+q#(#maA>(OaRBP.k:BoNl"+QiM'^<X+.T1.eq/m0a!_Z0>*@HV/CqL^lA:5]X1SL(r1*`_:U71fMdGH
%WY8g%5YTKn3uGoj%,n>@X'3ak$L2A[C(VA/L,5Q058@:pc<E&k,Uij7-^L&cQ8NG.9sI]g:I3^T0OBuYN"M^O[S`=E)AJ/*7G1fF
%c4rV&`'Od($3Y*eOLQuW-lCdt\J2I_!7S)A]"iJb"Y.s:Q'a5t<ltn)'u8>%nA`5\`R!23<SuJhSXS[=/j9R,GZ/J&Ohd$\8h8EF
%>9I1SS@H\u#pSDT.:$sa<L2r`YP/:JGR&7<D]U,+LLXRMPMh74^p2JiCLpDScV>=ogm01*%iRK(A1lEHaK`JN&@i]U#kC!W.PI=r
%V?D+U9nUbul.K.1PiZKZ'0>FX%sQ#I"h;Zu+KQr'e$&\W)7Qj[.coX;.e1V$CsO&mIh"pAY-$<A*jgTLB1a.'em()":R&0tKsc>Q
%^;HS%4V1]&.V/$'X6HWXHKs@+Oo0Rp.ZgXLZZXGVIYr^S3$R=Inm7>tVa&&<1<8fE[&pJr95!ntlXrL<?r7GBW\\`)``Fe!-TVRo
%>_NiL@2H]IM$sr_i<Va8r#*`D`@%c_\JMd.Gd\+>\/,WU9(_Et9"0ao9@2CC=aZiB[*/%n&Il^=#adU[?@m&_/,\`5k3Ys-,Y=/9
%95k'F#9+J0"u(2TN.#HQY]9#Z>&qnW@Pr@fbQOjTjeMR?_F.CgR0X+ggB8`BNHl-ML1NTul.EASPu<RB3Ya05N^PJ*C73?u)>-[2
%mV8e"G1sX+P8-H,cD`Hn$DGoVNqf(SP@9lsg5R<PO]X#5GGot9[9BkDRm$";NHW8hRhMYn-h#_+UU":Of1:%RUV=(q&cO7HUO0o2
%8Y#TZ@(91.="2jcSHXc370$pNK5"OT8+fl1$EHQ&]]!7=o1Z9PffCHf@\H+T3ca"MioX9le%!oM6-<+D6!T]l0q(pSYghK39i5ce
%7T<hG1C09C)=!#\^?\hV'(,Cg]JGhcn"u*/*Dl?07+!0(C:McWWr39fg^"=+j!<U+5kM.g]<i7FnL.[p_S5suH;>U0)*)->A=6r!
%jVK`92qWGM2LFg00%mV4o]L[@b[b9F4ACl9lCU$*q(kD7]n:IZ?pE,f=\bZ:>@trZX5"c4)lQ8nRg1plXFG@o[5G\;.gVa-#i7!:
%J7i<*]MP3@gL8HKbT1qlHa2iMk\!p:ia`eoS"C#VceJV1Z(Bf/M;)8he#RF6@sXX7FX+S$LsS7cT(BX.7aFsDXos^\)"6"'HJ-Z,
%Vs*i_#RBB=&XG\>cBKI+F,n5T&][a\Gi$2D]!NR]jP!aUlhssai&k_i=b9W%!sGoZ,dn`jIX<tlP8L`O`^&WtC=11IB'9gYr2fY:
%6VPt)&SPOaI:Xrn'#lPlJ$2KtWJg'3\cYTO(HHsdmit!tikQOm\f`rE?Oo^+\8if18p.6(ER@dXUCR:is2n?Hpd6(=m&8>D7u4jF
%p%!AEeq$],R0L\bn6VBtjj9%iEgjm_-fVJZ+m,5[_]l>6[T)Y*9?X,rObZL\;jF._hV:Q*VU^d;VI>'Lh4>IpFV2(b)oLtuO`&SH
%E`K-cc]i32-qkq<jP\oao!bQjr<pt'(BE([Fq*IJVQ36:P<4;OKLr\[G)MteeoSQQQ`QXj/WeX_a9\Mc/)obu@Nk-q"d.0H\W_iV
%)MpG6O=?"R!ZI=gmF9J/Tf[[]ZB=7,L9V[5,HQ@(6T(G'23su%fV09G?GRRLBS&@>S]]_VMG<qoC-jV#R,u>W/fc=@U2!QIIFgcM
%?-cI.4Z"&@QH.\kJ%R1sfQnu,9DeJ6lL;M!WM"+u?0sssb.f]Wq"pdQMO2)\M@crsEc(RM6q<B$.nHSqe`!mupT*fPf-m_p>qEU'
%cRq=S2-I6SpC?RJA<sCaYh.KRXc-sPm#,09bbl.p7250sk6PeClTKYXg2H6'l(@i`krW&#hDa?6!iNoiKIeUXTC=+CRGhM+JXkqf
%AX^3SC3b&9l-8_q8.P<B+nIEW@RRZrUH?+lVe1E(;H_fnQ^NW8Zk1(4BX/jnqMu1tY4'#mo,C:Iq([SDR\r@i6ol50D%&+4kQY1N
%TN>@O>geWbbcLE=,W%;?DW2nV03Em'TTbU(\IWNN*IS#'>:%6i]URP^RF[3XVS'@<iV);P3_HiK:#66UFlkTi@hBmj&?<WH[!SEM
%Fh?-I<%N/#Qp'bW9:2^TL=ZbHKZ:nV:9IZJfaq"gZKb8Cb@qpUi()Eonsh:.mW/)oHDq[d"RS]oTHY.k3uYeOj@H%<0<4gW-bIYU
%2_o%9d[0R)X)]t.%ej8:f.1nBZ#o)oN&(AV7t*r-4^In?YPL2h@/sl5CW$4+s3GRb00?dieSCg]<@du,]3I/`Pq>VG47g''*"3l(
%L:W(74W"JV9%4_2c53J+.uR:[6,`be`Fi]`5hhCgLj+l*"p:'/Y2'LZnS-6>]aVbu?):m2Q%PDFRMu3P6Y6I5"iAhG+YpHiXR.F#
%f:4eg*b\WK4^8g),0GhdXMmO/H&utVF9.9cV.7X'/Mu0tJ6<+=@@80u0d%LTBZ;)<"1[>1fq4*hb.4p*eo,0kPs_/C$#JgqYMU1b
%7OFgB"!JRWdT?"hN-Y@#0ZRpIH%.@C#T3+;NgcaLDbLa&7^ZYAghgs(AtlRJ2N5ONdStXs/6cgsFkN4!p[!8&Y5?VQRZjgF,$+j3
%(knZcET(%ehTufKV=_)qebDDf):C3)m,=DjWN(Wn-(lJ*G.+Y'NKL([Xd!UVUOW/em"KH@fLF?HNklK?iZ"LEbZIjP#bdeHAPc4X
%#EZBk2EfC"+&pl'%N<:FWC_3]r'1]I^.Q&[M1h$JIt[kA&5$+^TW+Ll,e+2Q9lE7t!MMoog:tKI074?Mp/_m@N.No*5b3u]FNuF+
%,JR!B?pGNl4LH][abZHLY&,419<X3mO[-'R!]hPj!)0Z%jDjda<*p#+jpi*QO'\<`=Err,Vh:0L=;JbGqQm:BSg2fCQ0t32Wh<TM
%Q"%C#X_.c*-p-(L+tmDkkVY;&:sWBe.a8%QPiM%Gkj6S/FS@Z+'7Ua#`7moc-n]RE#b`(rUgbO]OiUmVoLpo`(!/,UApVSMbX7B?
%ES%F9<cV$T>QNOg%`UDR,!1Tc&;R(X;10,SH;2Y6"dKgj4U\AjpsrTN/2F/UauX_q!tG&ihI0Xm3^<bP^[DWDKbn9IT0i%ED5KBg
%hjr/jq#pPU0tA'gNn)80*6ICYq2Eb:Gt%S4*V.Z7J(APajX#pZOGg:.9P^HX8#](Jd4,\j`Eo$jP6j7Y4L_4=2oi8Hmc;iJ'T:&-
%BaArA(DgpcOS^q2T#+L@@nZYPb%$gl!4WV5Q^XRKKkg^0><Kj!.j#eZ)mC;\GfAA_%L'Gcn=[QfRPi7#),["'+01!]`[:VYC0DRg
%=GU)XEYc1MV9F5LMat&WlK*mJ:;EDYO5_F4-ObK:(;G'UR'a"sr,&LRs42ED'>_@S/%cur=.*QU^C5u6V.ba06e]\e`[N?\ps1Kl
%/(dnCI:]hdf"6e%#"CB\`4LB=1r1QOD:;*'n?0T"!4GBAI3j(o8/WK?O0mSsj)-<ARIUMTHk[ho$f"92l.#hZ7urG'aMln?fN[^"
%Yi/Nh^+a$7Ei><kUi>SqB%s-NB=n#K)U7m&MDjWgkfPgj<ab65ennU0<%j(G^Mu],1Kb`J=%V#:k<,>Ws0Y/Rg%OBHnt`;ANc-'o
%Ot3dO%/MIr4^oOE0UeDOYS:iC+pLU=7bR+]oA7$q&SDKJl1e<u\dAWF7X(I:cW&rTBQC2[#UXl+,Z=bEaH@%^E>9b_q1R\(]##4g
%gH!=,4eHgLl/cP3$-ZL*)mBmcJ6opc\As[ge,]i*E[?`_d%q9t]?!#X-9%l7[)*IVWn$r:*=@MXi0;8uQ`71*EkkJ3KVgR#NI?T:
%/-keopP.Zh*&:KQXt,,HgRfhH05RE>]?,ZgjEuh";,lgi06#;\nbsEleR.<+[qLn`/)/lrrRg08d6d*aR#hEG\FP*#s0B<q$QNY6
%EO6p*2jcsu-;P1Z1B7mEeK#@if2N]]+H(cYnl=+77$%D2>bf03BWDK3JW%1ARjEL,.TJ6GOuHjKUf)M,SBfi9<_Co1[H!lD)/*,*
%!/`6C<_kR6Jms$a[V/Imi1%n9o9ldm'Qj]^#I*@pn5UjG'Kgg<Cnc/gKnDUQd+T;7'IBm-k5XhWgjkeE#gBG1Jk8t$&$Zb!QVE7j
%:XgH&>H6T@mHTp!)SFc[)1.Ge,5%'FT;5Z6`Ida=47c@d7-V,VFYZJC`=@f3TqbKu&Ll6\.PXOTiBlesfY+(@F,WYMPoNd'2B(Ka
%BaI\13h0j]f"hPf`3BAoG"\8kS?U`?X;2;2Zf>XEX]U-2mIh<gK%pGJ_t*]qeJ>U,jl))_51BJf)AR$HKH4McpRVtfdJ*_&*Yk]C
%qO.FuAt<2tDA3^d+c=$4r<Jjk$jNt#6?kd[NARt)l#L*pd+Be(ZD-46gmncnLdVg8"I)O\!S9^Bf"!KD=MbhG;f1'K9?u8"PZG(M
%1rOuAjt6$60M'Es.HKj8ikJ*P)8@IiQ_&[`1WHPJ\%BLtaf!!M>YsK?htSENq%qa=>r%*,4hS?nAPI!?277iK]DX$.(<eiCSp)1l
%8>1/_50AD46:A"$+=RhU&@=?<)^(0'#dJDTPZ2mRI$3BCpJZ.QCIo'N:6K^rCu/Yp?mZ[EIKhDQUpWStg]/PgFVi2nab6@D\5c:r
%\fsUuoFdKt2?b<d@5pN`Jb1b7'&X-S4ia"V]6`BtMc`r[-Xsb-q`lRV_(")aUE$#mXSW7q.iD:a`lqGnP;$u'2g;JqO`b(>Eh;%R
%TZ>+JYP:6RVJ-\hf\7[X3Ss[]'Qd_f4=M:7^\^=;"Wp=9\q0Tk3DBF0n"UnLGQ+GR'K@?a+(ojLi0+6)Cm8dm"$rk][TA6f`p@T'
%r8U7(L*+@8/o\L%-etca;S`ds>%j2M24b.u@FlA=&3`P;MZ+VUF;goja8>`2aUHD$Hl%2+fm4@;4cMFk'.qo@EFE2uMXC"-Y9L'!
%os8_70N]k&^r"Tm.cB,$&;V-batU.52%j#dpCf'1^TCYiY\(P9V+oDt4-(OFSfF3OUSKUPRJ<iL$\=15`b<X%BFJnD;2m">Q/pDR
%D6<os_T>kD,@h-sf*qq\4"^Rb',mAkTC)SrVigeO4sM.VgK4jjEkNoi[ZiTVTfn,D@tXJ'T\3VLleZ6Flq6VnnZn(PViI]ij'cU5
%Eh3OGr%-?3,i-.,AP^3:S)2*Sr>W<%VJ!am(2oD>lD*='KLL(c5.TCc0Pr?9PQ#`C[8=oN=eEr#<oYq4AAnjBI,CtR^otGaX7\RZ
%maEK0;`Qe>H,a!sJa.<W6-3-o1q$qf$\V2f?oib:c1E#Fru#X&.nh\r:uI%8[N=Zn4Ise1I$acfa![[Uid`m6kr-jdL.p5W*JcZ$
%M=Z`\Zlp;f(d&\\H^KqG)[(@`I8atLZog]YP.sR]e;i8H&c4:GmO$'0rMo'iK]4E.N)$^Ec]7E]$&uWehH-.V`*9p,p#e#9YmSC5
%NM[!-W@Q9@$qLib==>)k/^0Cmm'c^ON-+=%;Em7<+WP+gJl5pC5HuWLO(eAM)cm+(=oCUKUJ&L1`)6adpL*-jYmjan8l=^%BI0.c
%O_NHG5p"9%O<,OYj:Do2IsPP)qB/1+.9rplUA9c^;&9_i61rCXfG,_kbtWj8Ju:bFM91GSFCYDI85hLV]`CI:9'ht,o5<Qs6Trak
%CKkl4)qKRH;ch4\.hZ`KgY*WM?'u/pa:OuS`q<X*(fcta2QNiT$,G?!_Usk.AZHoVK64Ob?;h&ILC]B]W%-!I2R,d4G!+=2n<T_p
%5M9nEjRjB@BD3&DlhkUcC?q^2b#2gZ6iqgAf=1-]M&;gP5<=_mVUsSipU_&JFDa!NmYJ;%qp/1l8$NOK6(H#%i(k=)_WnY>N>C\\
%SXcb9dso>g-Dg$B.-:.SG3E!A%%"DpUC9ZVn)QF1([4G#>d<gaQVLepEM*Y!4:*F;B?lRh$7'T7UbEkY/%,]\"[b6,-S!sEXB/\f
%7IUB4EZ];P%7E9+$u[fETWe$94\38(WKtXCPVK'[\H=YK^Qg4=&g27frk<L(I9Q+oZoH\/I5*ch5@Z$T1JfCO1/GlJMp.a?&NTs4
%8V2NN#l;jqqlf)5=.J#SaA)"XaWBQO]b`\*T?QDs4_uNo2HP_U]7%5'jQ&@+$-B8>GfM)rH17l0rfV?Cd]R!elL-;CQTnbLA(Fd,
%+b]@sRI=ALfrq^4RO6N/I6teoFQGf9;,i["MuR4`5@^#6kS8S`h9D>F21;@S_Jm.*ZP[F!WEX"?^NZQVo`c-92It(hG%>M^6nVF"
%1k`J8Ze%LE-K[:)Y6q@n!*4/[\WYX#k_7K6d,]'_\\]oZVP'%7r([;:/Q2`A'Pl%RlFGt>Ik:#'@BS2A3Z9YJ>k8tKF^h!e#WKo,
%gkX!o7X:*C'\5P79JgHUi[PTXI]%q_N`1u1PNntoZ9/N/CR-P=3VkNWg$Ou[E$X&?hE;Q%6cUrV+*B;B+A(6G>u.6AVdt8ME\12s
%noG)_]O:(>9UAQ6U5r>c#<+gj)6IqSm8Tae!^D"]"DE'A]*hBY&GJE;;K[sj8dfd'rtYiI`MKCk1FQR_Xk*>Ke[nj>DNl_0+?X'K
%bLl$0+qm*a@DeP%#^+i9+=Bd17dWqZoRfXnXpQRs]ti"%W&\2\&^a`%oWR!R2V)[U6R>nU6#@;!_hdGtCb,'2.r/EJ[I'`RlFtX+
%A%:%UHZ2>g:1N*FOYn7W)!9I,[fnsHf"a8h-'OI=\Xo?>8#qW:E'@md8Z9"YoE$Vd;q#^+n9&#/N2%`/Zg<QSYI<7r=N\S-5Z8<8
%3oNeM**[E#r#KN*2=L5;,M03GNXQfS39JCUctkTi\b<H:CP&DNe;'b8``]U4k/99\a7$(A?N`*LnI^rm%ilp$Sa_)daF?VGh_Xt4
%'"DR[k%<sC$As2Ta6KL4.1>Kt>jOQSI]JDVFNrRfJaJRe'sd>:35=tb>=mCh^4+&0;d')HEtg$IM\J@K66/*P1:)?j&aR72QgJst
%FBHi[Y`uM022):0WfDN<<I8#;JJJj6-$(n*=bAeH6,Z)?$s0hSAd<IZ0Pa<7K%B#j6:4ttU"/g`I:\8OOiZLJTigkAMu>=i0BY.N
%GD7AJGa`'4AM;;$3KCZWQlFf&A[FI\F?<SfK&p^8kemq%'X<gK(uYm</>IRG.dI,ZEY`#Xfs0[l(;0=1<e7KVK.=r<rXmHs9IUQ;
%R"+snmI'kR"Q.?:XF5,q)SXEeSM>K17iakLi:<eoWEe2)Y'HoYp=iWRL`'8T/&7b;G^ZKC83RK_##EV/FkCCg@]RV"8'@(UF.?Vh
%3'P(U3fj7/+8/V'nArr=ar0jr_Irgf/B1Qd>fd^GkeW_&1eCLuA<1s`9:li)\.mSl"b58Q3[-6V]b]C6].HpEM+;ZGr<;^+"TWP&
%nHL'D]Y:%7GAZ7Q\@;ru8uZdE.K;]gn1Ju\1B/siqDojlg]R?5jgR'=Bl"X0.H[cp=DRaTWc<Kil4\<@7TC@RE.qPijahV&D`3S<
%\'WuoaY)2-M"%T0BR)C>qYU3OI2;l("crjBRKBj#]+^k%c9F47S.jNm$,TbXDu:kPcc=8c#9/VqCLL7<[>!ua=sH5*=?S&FFR?5q
%UJgF9@sU?E&=:P`s5'+?W;[T29lNNT3+/i'n"+0nWhCa2=lA62]XeSpWLV7;$IAthbkLoThk9kmaS`5Pq6N-&=T"U;RcV"f,JL3Q
%Q1*;1ffb=,laOh5pYdjmE-)&iO(EeQ5Ft"UDoCL.)#PqU-.]ts$%ecQ96FSjs$+UfRD+l`c`RnM^eLRG%NT<B;m!^h0+Hkm)\*e@
%'?-CG=i.h[kn$V&O"%GZo%FGY,.!(Y.jNGZiedj5\%/\QU<J3k/9M1km3u[=`)!)BFM6/JItBbV<V5)a\TB"-;XE)hQMl^3g$SO0
%LVkt]gU&J4bXeZ.X-GolcZGur$ZNgAGcmk368`07fuubdiWjFeRS!CT\9oD"K;p*-S)f:`em+;o"QaXDD"Xb]e!B(k"6\W/6.&>p
%fguHdmEo:]F5J>^4da9&EdXo@g*6<YOV!1-]Y^B46YEhBAih&*:e1,c8U^-088rGb*K3&"Hon9)LXiOuDc[Mj&osG%p]G3,LX=Ij
%f9s;B'5)<?M-'h$i#rZqBOWZikEXo)>1+ui34g=i@8:&77#As[s+l:]AUDFH/31dO''CnA@fSrTXqUMraodCqNBc:%/1obRq8ISD
%+tQ\/'7>I!606Q[IO",-VZal>6\O,BmHf^'S]:<-"E#kgO8tLgo":-"FMWYNEM=tCT'@_PIafeu.%fgN`a@p&G/h`'jMm)g%l`O>
%HIFYH]\X$!+$851e8q`kYeHd/dp->C;jpuQJT$`R3cU9[IC*/pp?'5d`#`/kW;gP5.KiAGf0or0ENs0CJ9o8Gr-&KrB-f-PLH*gk
%FKdVrq@O_9q/R(GZS\?+kjjStC?S>0*7t3mrE0fWBm/"on#;E\Xma@.5=5#"deV@D;[LrSrV)IHfP>n&\LADaVbos/\$C)$]+XrP
%\SaBk^g2cMRao=UMNPD4J>55?4K>7*"-!IdCsrA$]X:[+K7]]a>fo3(cZY*$ae0,@TsfZj8`%#8S,PF+kd/9H!R][#>RV#JkED;+
%I'S8EP#>>$eB&+8KYuT-%PYA$?_<7AhnU4TjR%HBF&*`>:eos@=.8U0/;JNu;q+h_C/oZY;W`k?H-*E+6MI+;(/#gu&X,;ZID6b#
%+O_4F.Rh,fQ#kA-*Z@*7!OSBO)m$"U@cr1,q*Oh3I%>tcDs@EaW+n>U(#/mX^SJ83+&&-b]);(-!0nrq`nbr'eTh*V#Vc;iM<fKY
%0!.LNN()1#,m#T3$7FGA`3*AU7\siXC1`@hiPVo3BXR@%b&5`_^FFkZ$::u3e&3SBSFg9OZ]qV^Ni]AO,P@,JT/kd@[k[unj+:U5
%qJMg-@6G=3T+a)'^n3qH]/m"s!2eM(?uDN_KKPcB$S*`qH`8%88#(BKpc1l0gSX$FUY:k+JJOf011,8pQ%ScG&Pj9A)\X,)he(m(
%`r;Jk/P7f25PQ@IE#E-*_5YFVl:JP\4O5c`B@!0i<][,cpf)UrM!i5VLW4$d;;WOXGN[f1`-a$nUFBJ^oP/Sn%A/U9`1%A9GpbGk
%J$"(\]`QO50skcop+9rHf&d`c\Q`CN3,_0]0InlJlV_5>^+@_t(/+s)2s-S+P!-2H*]_$m]$LtiUfZ8WmsVq)n*>dogpDpWO$89;
%RVk62j->H%SDE4J7./?[6Jd4:oY&38]HR"k@JO8%jcTB[B=>"lKE"ZJ]p?"']ujId.[=:&jtTQM_piA2'@!)(.Jpq@aUAt2nWf`s
%oCo[hZk0h1dMq3)*-Sr7G?FM@rMWn>,M72E>0m"TRr=?^a+%^3b-2Esjb@h"DYm]@>2#7kZ1D_BFe+)6G%h\O1\t8VP*8rtPJp#c
%W)^aUq"htfl>^$GpPX$FG/q"1/nm'=5Mp2IR99[+)fK^89P91W(`hGsU`>7SN`V40`SC=gS"31,rWKR7Q.-(XOU1a[PnjJXYe=_A
%0fpH90C"C.hf5I@5LP#TmtKo_ZNn1cJ.RIgrJ#ZGin=k:WA>GlXgBm/LS$N@hI_ih4HBndZEfmI)rDVZ%c\Q*#/ha<HLJGtAoo40
%7TYEFdNHtdQ(/Fa,&uk[e4qS@b,BXsOQrB^5=\Qs1G!5[X3P*2nJM]K,\H\m1M_<t&n'/Tc/\rj;89,50CKSfP5\ag$QXqH!&TeB
%k1r0Ll,L"Om>'kIa*BCob;T4f14SF:n*kORCXC&qo:0_tMrfQNP=b)SYVIG<LgQU?0mac'[C#s0iX=$4dUtS9olu.dW,0;_Q+I13
%QI8$=XIW(()o1`=m+P$"Zh;h=!1i7nQ5ITp%$&0T=ZZG&D\;if4cHJel20ki^$[8-mIZ#h482f;fT6!>]=K)c"K=jTMh:L*)XL*O
%ULWYO`Rki-lsnMJ/qPbD5Ls/7?V'@*eVcPIl:`Idp[3of2hX4j15D=cY)@eJ<qt"[TBSPRKg?',@lq69nb%A7ikHf+,<<4gs&]%K
%A2"NDqR&emTR[2bYiW&KF![$/YFVp?Q$m#=C^nCW?6GC)F]iX\qD)]S3Q!F&QX5#l1OQ6J7)0.4Mf:84i/nc.9[_PUkl&:&nZL0B
%rF'.@/nJYc4V+$j(q3ir%m=A45m`\,^;%Hk$N&rB)=(=XR-.riUsq'3H>0P]Por(.8^AW[m%4T^c\t"%lL,TfL2]Vfh_N1;&^X(:
%;Jkk^^k)YWe3aAtUQ/!nmDXrT0O,IcoBX9/n^,4EZ&jsB_%m,Tn3"7fm$D$1<`Ts5<Nb:%47]QlpRc.r4b4t1)_b":2<"4\N`Am$
%L\g@48t@k&="8`t!7n5Xr)lmMeS;gn.7P)8hMSWj;!]<%Ir!?WB3A_gkX1]AG%TaRDEH1EP.`;(+oN<@O!sk?s&f4;1kA"1IuAfG
%9D/W4"qO49=l1V%XM"/7IR!&AGd$"W_78c_'f()>n)kI)S`b0'q1[u-`1@&^!jNlb@Gd$gKWUh;j;Rq[ReBFiH(U,7heD)lR./e2
%$lt_Dpn<+^h4/"6P+O8]>8%q&aN!ST[Bgt:9Pq"=iKfT$S@7[QC4(S?/-[`5f2;r`;\O="p/(S,dE9[Vh^iC-ILJ9^-bXcc(H/H=
%n['Ocb@J6E(8B&QpKFm@Hc=S3B@\=b@nB)KM$n;(N[MOa^?:c,RDQ"0>1]d]7]p&_eLhukcK.1%B1Hu@&P;f@ZWJ8Bbh&!A6Td+q
%FL]e9]RaRb#tQqn&0"?OnapR-JI$L1lotUB^Q>3p#0Yt+hVgGXU8q(=IP3T*,.N^VIFO8Ca)+0!;H4XWBCSchlE:%YMKV"&]F/pW
%E$'TK/GG\_P5KH7ns;ZTl$C]N#ANt0GZ/Xpq^C&GD-k&%Ge::f[?WGl^'isa't_,&)e*R$%f,YZQ*mYt3UV!1q;GPp4-Q;mkdaY!
%C)I0/%D!aR_:0cfE%dE7JBi?"i'gH'Fjp.5?^@tGbIW7ichRsgB"N-uL?IS#%cr*c$k$qRHteA&B4Dm2_)gfDH=!69T+6jd([2P5
%DP[5_\#i^V<5a'6!$*Ni(qef4D61RW]Z<?q+BS5&7Zg[D15m?S?3%_E>J;GXF<R-Fc(P?o&X^YM1TDTBoE*Q0A:;`a(YpD=?mL!7
%A<r;:1+`1@JgkQ]PP].*fCe;ab9J+M&_uU%:[D55as+AZ.Aum;Le(60o^EsU?`#]u*SR'K"S8O]COJftSlVXtESF5\i6@3+__Tn;
%El&?P9fn'"ZaH2*Z"E]B(8N\5W@h3RO5``\R)-h.H"a_[2('b@N8r'(<26BQ04FmSQ"<l9GYM*:r(<:4[_\a<cUTZ0i!d9f0dJ`Q
%#j?DPf>UVINdYna*ugA-<M]k/QH"W7ks<oq9`bp-B,r_gZ?Qd9m\GmTja6Zp='[L"LK;Ki@uH;^)InfEb"+l2j+ri7mM]>W?F+_8
%Vu;&6a\P!UWV[h'mC%8^j68YFrA,/eSg:(R-'e-q/c":gN*=ucP)2;gM61S@LmJu%c/s/_:kMPihL^obEVt3j%Rg4UJg-t-1E_H[
%`TlF!]Bbas7SX7a+3hEb$sB.20?!+H_W&u)3,'D#K9!aUR?[@ULT3F^M\:7C3>Zs*5q"0:Q$&&n8Y2DlT^h,$@9eY.qNj:-HfEbF
%+1N6kB+):Ib7dogjM))t!W`4aK0.O9X2lg"PQ5R;BhQ.OX%+.G%,su-J1L$6MY3;F`A?5=r:icC(!?I8ZaTe.AmJD/f#&D_Wq>ZH
%>[Q2A50:mUKpqRL:Tu3Y0tb?4+jad%eG31W&96lP[jFW(@Z:X(3\m+!gst'\F"Sm!J6Zs:M,J=8HW0sY=@ZoQpP#`i=Fh25Vn_XT
%H"J@+J6Y9;5'>f-pqLu&^(+EI$459!VU,dRqIcr3)^igMhnqCPF+;AD5-OmfU;F";5WTEp((>(&I6)q*VslL%Q!:bg&*B[r=e0N#
%^P`JN[_&@)3s`IT$h6HA8GW8-e>Y:_Hdl-\J4>;[*W`71,(uTg`Ar/82+F""e+Abs;(c!.N!ZZlDIOZ+am2%=PuZ=eO%q>.rT+?a
%B?q;)r)Z[DWih#uX2_+!4dYjcSB%rg^>)h'X/6)Fcb@u/SGYlV4b+,_3m+40X'KkbpGZfWJb^>lP\200eJ;1k`"#W=q.H^8RPi[T
%WaKm(o`?>P!UcRGnD@n'UPXF[V`@sZo)GT?,A$7h<M6J(::MQ^X#Z0QYqLrgB.o8T;eX)+.b5:W2\[mc8<+5eYUKdG>@R!J2ZigU
%]:*7NZ`^(]?e$;@Kjk*2G2;&HjQ;,N=,3B,\;/aP@&+DESUl+uV8fq:`6KffV/L<i&8sTP&JY0S<hMO]0Z%EK(=5Xm9g>+;F9C!%
%lJ@TK/U`aU-gAf1ir/Eu\39a+kb"t)jN$0YY-]ucW`N$;7GnFmn+.D;4-IpZ!BagGQS7On2TVQt*:;jc$-Ze]V?2KN$\3ibMmGL6
%;1slUBd\MYBjeuh`@dIuW;6lN2QE-2`9nl(&-CY0go;=1\NQ":mpnkDD-@#ZSD9r#PIA:(3S=nL/`\T7O_nQ$b7!fi@Wl"-`t<D4
%!Ud,D\Vh?[b'HOKKXDJ>ZA[*WIS/Y]rLgT)jMGFsT*Ib7WV-uup8-_&d0&cf:d=tlKH-d/*M;T4j74(hk<<knmkNbm>tF64bZrn(
%jJ:;;?nbqj]cPZg;Lh5a*mh=&hmM+H>S+)Q%:)+0m9%>_TFd]EA-9JGL;6,.B5uDBA%,Q$!i2RTD!"Xm;]jGFA\nM3^Qn4bI7gSB
%/;BKU>,AT)%*d!T6ihhi=DIh=s044*+=9#npaJYK%g?BRQ=?>b:?tn2)[>$UXQ\JWR`u_8LG-=QGT/E$893Vn>L,R\-onGhT)BS2
%RG82pL><kg=W8M/S0G3T?ZX2Ze03d#fi!@fk/VEPDRsf`K=6;OKH-,S\=^DRY.?((6rTB,V#ektg8U0fL\_af#DV.?ETJd*1+$O.
%YN8VhDgP&,.@SY=e#g0aB?PFcC4R0U[3\ghgXjU6KoB@oi).D=<k9KXk4/T55)c[`nGi*GpcWnp<>HHR7aDf9Ns=^SGEJc33*Kqo
%U%ZLdE#Q0F3Y4c.H@\l"(PI7an:IMD(dT8IIj<a'rll5Y<2poNFfJj.I,`WH_ci*rkjh=eJV)*^&"](6`("S*cAe]i+^IJd(RnJ-
%l0227<UHm`[FL:s#1SmlWc%!@?Ps"cItUQZXY*+!6B-%S(#S6_>Q/qg3N9960]Or?(QtcRea.M+>h;NE-^lTZSklR_ioudkMqmVN
%PR%8B[!--pnj:[6E_D0CN)QHAJ[Pn'??;_^1!k:ICtTq:NsGE<-n(rdd]Al^V<>f=d#N&U->VrTs(@r.%S-EYh9WFu7L_E@hY09m
%m;46bcfsrYFc3:A,/!e%<!TR6C6hNX5Y'HjKT_SNTS0C,U5B3`A,Fr2l\f>*8e$h8hg"@*-/Q!lelMI2h``.cOHOj76?7aCB`;Y\
%"li6RiiOXg59WBsfRr9/FB&9k^7/;?RVE`dY:V8!>BPT,KEQ#m&%S(f\BoB\UTns7N!."T?n0Kdj+YLf-ETnI^m.%>;!eCVI]9Re
%is2Md0aL@$^N(i0j^7$G_M(aIDG%&ZR;#`1AZm\K,"gD'^gB>48?_IQ=kYWZ(;<Z=K\UaaIG]3HYsofF^MD$TXlO3m-]Zu_j/gP8
%>dhtVO<uYca2WbsONSoYh%SHbH0VeaS4pb)+4Y`_e)=<laTps^492mOj+>.pF,3EQ[$a'O0LRC@PQJq$bTi5l-M(76$s8-YCQPP1
%<jYASN^QEK\8I?I2$"Ph^V;@p+&o3"q5hg$933s8<8A):V+`6$V0R,>/kmkAou*$V4%fMbbl<qXU_O$48LKtC23QL)iUj9FdZt(U
%i,3:M&[%`PdZCp@$/\,S52ZoH`pH0Y-[hqj(hf56.&mKV?gCc2-%Zknj!k\CXS_0/T*tg?h^rQ,^7L!&"YFO8ou-276=*S"2(TPi
%rPqR6&W745-uR)6ZQ0'sX%tC,%@]SsPpc+*69T($a.t>?@00O?WK20!.<>ijEsD+-/"lTLak?FHLbnV2`MCdU&+)4q&9iK/n#V;k
%n#')-H)\J\m:YrK)E\L0T]Z3mNCF[pF)42Zph+0WqddA,O6R(,c9O^0poJMlB!Fe=coYO$ZI*.2`(J_='L.,5]KA31>Naq%Sd'gY
%`SjqpA=]XikO=Cr&D^8aW6%='h8'1i;=^$=\4u]GPk<^q@c`Z,2>F^0!]6q=4S@%[fql]3Uj6DtIp4]D2b]oOrbAgqT?Gh09;flU
%bStomg<g<]YXUGr7/5)'T1V_.[@fSW!Mtf":K7@T?\N`qG#";*YZQ@=f1eHrO9_KtXIeUbGLKI"2T,/u5,7/Z%gB:+--UNrmPJNj
%#&9F?c;(u_(7<<e_BJ2Wfar-G4pNX$O3.f#T(#U^(QN/ZKp:dpNQ#_$:jAOD7J.k$&hu0_j>,X_9HAGiTVj$>=-9'MSFr=!:Z3BR
%'g=jt&ApG>JAp<.hW(bI"?_(kcVrZ0T=%/1?3U_DZnUmA4js;oQR7N'@dq".,7tKu+p2&YRQ`8bD_YR_P_WhLi+2g+KG<UTQ_k8m
%()S,hcaa;J7><%!FD"3,gR-iieJk8Edpe,+G,43)8s?l\<"L1K-]I+h=,c;)dMjsJA)S+_s!^G`NLrgcCO]Jl$,5#bQq<=03=dq=
%2N'/g+.-t,d&m//-Gbc<h!%%$%i\LWMCZZ+:i&Rqi@`q(].]eK#i!G8Tg6:jH"(4./VD?g"peYO2+jeT??Y0Q%RtXd2A=Ce8Y>TK
%@,raSmt)fg[(Wb9;'&"kT!8e_20Y(?q"?!%]HT:k<Phbh.:0<(J-4Y$Ek>=:+A]\Aa^8%SOKbmf80s7=]>^)jFFA8BO=)NdG#kCs
%DA9lp[PDM@gNj]3!bDJHXVoFlXe+l]87F;22EZs7H-476m6`$%27p?2\C9)-giZ"TTl&n>JHV]O'dJM^#/Z>o`T30$cV<ZOnSaX!
%;]6@+:ip4<TpC!@D5](sQ`2dhC<<%sDRNRM'J,5(Hce&fKT4`mg5SVU>qmb?;Xi%NBMK&Ti[&N1GX]tNO!-Q!1a\>"r4FGPb`oPS
%$c@,D;:/je=NWk8!UJs="pi5(B*k-_5-;-'h\jk7WRTftorBFFN5KmV<N8,_IM_fP7WkH*D@Q]e9@C=*o(j(<R>@9/^n'6bU'%U9
%KnjDt&k#UB.UT`O[uKmAK]F@#&XBRCet"9@Xg$]4Kc^o3$)nqHBR<[rg**)SVQE*nnEsM&_?,WRE`fAuh-H)+%>>q74^6(T]9&A.
%lIbqX8*JO*(h:9ZN`F'_5i4L+[LH<GYp0/S$@JmIreZ0SC$0VU,97kK0rrq"'PH2R@[dGsH9rT1!g90d$IfNJ4,]LWhL8=AAE@c`
%aQO0.0^2Al>LdV9k0Bg_-TIpa"T(J,i)U)p\s6f<OnOY0Obm3LG]?#&TlKs&;fG]/kdL_7<cXRUU"mp*`q&>_;0f$-o;*QdVuVW.
%jPco0#>B:Z.mqtTZVn@6$C'um.V>tj+a&A<e"C.opCrW5IU3J5K&=rtB65(^,QJ!p*1QqUoV_mV4XBQ`/@Eq'MDSRUTe\d-'\=%C
%<lUpMLjg>3CfXCFb(YHW8FBnQhA%]\[%s6LFt^dUj&[RuVkIK\@<b`-=B/P]pi`2\7W(i]_?r0)ipS.j!4c<JZ"\HF$>P8-+8Yk^
%immY$0FoC*lDe7n=kf(r62;p6U6UWZ&mW`u=(4XDV)g(M<o3lb_keK/r]7e5=5.q([D1q#T:=@T;T0HJ*/a#)<[i]CZ$Or<qWuls
%EW>XB,NUl1X#PYs3[$Yl5GTc6h]2F4:BR:IYM=Q(d%ctdNbqCE)WZ&.q.@dX]@bQU#(9\1ImK<[.`i\CQad%X0B+p5M6i=o`*c-!
%K*a6&3X<[f\U@5_W3ZYiX.j5O\VA3=Vb_!%VBpU999/mLS2qnL22bps_0^9^Su?[n?\I)5(B,ipjB?74IuQ3V,?s\],C`RSA!Q:U
%"@T<^GF$^qQVD*34+Oh-)N,1A)3h&_CPm6Fb6skSkPFNr(mL;$.729bW0q#M<fp\3jc"X)2^XCmcZAMZe58O@)S-6K:)K&/O>H8^
%Su5JWD=5&7UN3PB:eYE(G"l@</H8pD-X_t8o]4;!pFSh/`nlLIBSf_?]ZK_m]ZDQ=dW$T7cj?$KgapDq-S%;W[19?`*[=aQ!m,7U
%7a%R^OhDb+I8E11J"8b"<VS4,0rcd\,5V4;r"#ht;g^gf$#_Wd9Q=&6MOHdb<-h1+a_i!<#'f3D9bN:3kqMlM2Y+#0M_J15_3HK?
%U`VWA7JP**XJO=@GY5`ZR-l\'T(@r8AC(HoeO"t.WSgWh@@j@3+EaAq+U2n2?ej>/mW["NMulai`Tu\TfM)(cK)S<,ra/l<s+bGF
%a_m,P-r7\<s#6uQalR`s\WAakJ<s@1a.6Zsc&er=ke.fWP*PGc@\HGLWl-8_3@De7[lTIslHtd%,Z/-raZ+)UC[]cCr^td]8kLJ7
%U(p(j<=J\t(#^90!5Xi'9i`U_#"[MEe6(u&ProD,>T"Jcb.g*D+O%Yn,l7pu.Ak#*0HU05*pK8jg7u;NLZL$&m>@I4JBo*dQMKq'
%WIZYqBZQ9jMeotW.KG+6P#dBhb]'H#WQoXLfC]bPq3aW>0OP#>(qH*U(2nW^PhP0FH1SRE_cKl]a[pqRo7/>R0%G.`N-Y<X,/CBQ
%OZLo?Z$`WYQub<&#tF;1(tl8nC9`!688E%cYbpqTPa5>!I8t8r<<JVU/&[@jNucskZ@l"VM;0G60f3UdA`B7E8#2pY+RKP2&s&J@
%O(r0Ee&^"aGNtl"gEH48UV&<_B"['gH6r/\:BNX!A^mqu`[(.,hAjY^*@\*aa@Lj@F?tg)n2\b84#1B5d<!&/"l(5c>G74N]4nM%
%?lP7&MrZTY]AM&SOW3[<iQ9k*.Xm[.+t$l8G*b^#ICoAE(S7cFfd--u99D>JZY\:NEqT[J<FtgUE)!pD=:=7OLug5Q]b)`.W+C"Y
%p?MQ2deQ")`2V5R^JY>'AJlea8CY=k45SL0>k@ReA!mu#cqL!P5<5rKEeUP*!)_9Q-c8fbXY>I.2M'V]^T2@*Z2Y4pnulGPUe&V[
%Ae%]5FHHr/=.Uob+#1)5>!8KcA:RRQ2"lfSd8Kam%l=R2?&Lu/YIt;i_+B>j$@KI)Q-fEe%k*H9_NF+.&EahZjAkIldcUE'>\1Du
%U$=ggal(r,::"qQk,`Hql?\0(#rT1b2HV1V<<]]<k1#lT-K<b@PKbD5WfCc".tj_$Je`9`NDc:TqJJ\s!\GZ1!ESEDX1&,G+$^oZ
%hfY=9.PTP"hnF:^aRjA\39a,lUP(&/->/<e^KSIZ4a3_WBr`8]3W\L/i`"CRI2ohV+(\2oeqAVS^W\UGQVSjE\8?c(pt`>T.^!-P
%L$#q)UtJ)@@84!<;D)+VFY!t4@`YQ-Kcf&a=]FDg:n.#RB$iIYrhpR5RI;#K)#q;^MX&er8sBISpo.r=m"<\U,0[6+Z`T@T;%*0U
%$CI^AiX/lOqXc:i.q!&^C^e-WDF]9f'SrM7I%M_'<jFkY)*Bf'X@H6D!'6C6g'l-aB5YG]+*Ggg0*&N4=327K\dqcW@@]AMU\\%g
%$%g.7nNEcdmOIDc2G3:o7aWSd3)db5Ro@i<UOC"4./IpZ,):Al%J[++A55I@iSNia8'DrH-H%f@`nEj8j\R7.8bK%!?,q0Sf3Zj-
%)GQ8blZ]Qi8Rgo5.C8IA1Y$c2r_>)Y9\!c"<872k:_$7snH@<K0)[(tE!mDuGuDCE;@UO@Y'#PM/kbIM.&Nlc`Do+L(6!*C48QNC
%3_(RgFrO\]n7E(RT2sk&WjR`=E,u^2=i)ka5Z70Se@CZkj^Z;l]b#V'c5%$`GESULHiWKTK^H8HPS3PgiiAE7^.jJu5`]F8=uaua
%!/kSlaOsNsNVCC%W@+biGuuQ\dZ"4%5)*?,e+(gOhElEc?Ju/qCP')[jRAN<l9U8S8^2X)bUF^eZ=KYnG8<M2Cu8JOUAD&cBq.V;
%Y1A0tEAN5D_C$T$fR'5Z#c%IB;"AG["dqV*3S5$>AZ?mK5c'J@j@1u8^=Mh#UK^8qKuoYm@e&+[N"haE/)eRp.MAd%%MjM`5m@K\
%Vla)YmjLFA>^a`?Rt[P_15.U%H33bq#>PY]L]o:[S"Z+6#WB3QPZ!$UJV0@_B,[3'9raY#AF,J^]M$AG.B4h-/]eC.@`_8hHJ1]c
%@Wg=(VVH,O705h-@p7;3VIt@\>jG[=Y)7+#/Nh>6P\$`V'HgtHNQ2W<WiCuJ<[+P$H9S14$.Fs$'%]45QJGIk!X`E;ku2DpPJi#K
%!&&1PR6X4bq$c*DYC`P5Z?/Qen7U;VgJD1.1UBbZ5,8PtkT+Qh3uQB1#O/F)5-M`GOh+f-+o/ZH_q4d@[WD0]Y)lY/)Z1`WcjR*6
%C-r^W))l_O#N&\q<u"18<>H/JGRg6]*-`Z94JRA?l4)AB';s=/mp(/(0d21J,H.G/_>ig2/a)MV*+:u8nDd4;Sf+sAG/fg\<6>Dn
%qYS+mMR9;.86<H9f]ZbS0fI?3n;d?=22KCfCGTAkjjES`bk\NK'V$$>aaKer=>aQg!OC5Vl<-_AkO&rl4mLV-FLKZ=pmoWl4ubJL
%DlHf&D6HZRng&WnpQpn\AVfNfZruRK<u?+F^qLh**RG27]]M](bsIVs@L4j/do;(a8.fgJ.ld:%0fGp"aj5n]j00mY^!-]JVjQRG
%"o\jH2D\-5]"-d3TXS50d\W<D8e&$oh?o1<#kb8/H'di:A5_UP,PBUa83;09.FmVIJkKU\`NH)N&Tkd02PfK@gu?ERd^lqp`c8-`
%7o-pB*EgB_!aqMge6q]%U:+<O9!SsBUV8DMB17HpP1(@Vj'[>P'bl^'[B10aP^B.q#aYY>-TW9_GDQ63-)Gn[J(qL0s4&9`1tre]
%;L<dRECdj>C@g,aGKB,l'[ZeoOa\P"TkjItN>5O</.5UR4%#_o,?P/#;_8g9d@e\r[<+P)'J<AUME7PCUNl56oT%3]hN;gQ`:r]-
%l-<6.X'<2J^[Sb'nL":Qg=EDh(78Mpj'V#k$kpAAUWM<*6Jc[9YH![>>Hl_ue_1rCo>F=M=@A8Wi)DZ(1n4eL?Q83Meik!ci1rLk
%lbO!EO%XhCg`ia94LBh/.gD+H=WV29&\>clcLErmIeD_D8K@grlYnCm$tDoSS+T'JaT=h$9@:QXfBrdF]'UBWWb&<5M[L3Y=O?ki
%+_&V3Vf.5"EI3WHUW27lq7"]8M"WH.js[A202+Uj-[LUG-I/V"_bXe!]jeF[!eo[@.*BQ7*GU[*XHl0K."YWt)I]U-f;[u7?IsBT
%5)MVHkp2<a_pSQC-LT*gbbo^a:FSfln[^JZ?*TD-7O"*f7O;A#ZK@P`%A)jMTBX)R+rKe@;7[]RVBF(>H5&8Ecj2T.Ie7XclsW,@
%QK/p**EU[srqp6iKr/^n`E32R_e9&g>"`E1a2<`Bk*P,0&u`YU>l)F+<J:W`pT^j[4GDYYq\1Mfh[;Ij?qJaMhXr9H9R.^$Q(+62
%3*TkV3(bCehN(j8&c.dF.L$0Q.LspWXW/R]%S:UqSes3#\<n6HWSl`Q)Db#"-(uJ-;@?!/0'*iZV->]4J(uDZ:Z&&<W0]CkY:Xu2
%.>g!+*+EdQHI/6Qp/5uH\p!:)BAdI53)Z5sghCC?cUC`[R_V=qbiVJ\Zs^[Qe^BESk:,+'Y-!_fh(O*"@X2hHTPsGnODA1W`Ynuc
%o)*m$\#,6/bU>4'\;Y/uT]`+UP)2G4IY/8"'k+)0i\V1P)ER:!JpYIE;dB$2F.3FW:!22QP=m$*T5f+A0"@Q)jZFW]:AFWg9EJBk
%T6mu<QCSi*Ru]m4XB!h5?g`>kn,a849>q!+&Gb\]Fd@E2Ia75HJ+bfC\#S$hg&dCD,,A_U3d?#i&U<#(pX5Yn>&jt<Y=S:fXe8Mg
%*R*_m![3jL&KTeNa"4@8U!u6>T$IaDRtk]8O'd9LGb4b1GD&`\b7-mcWatXBPm1("Y:(u;:b,ol!;bMM^J.uRa::2FYsRSN5%<l(
%Pp\&(JVCdk<+/,,:SD]T;$Dghdh?%e;j(-Ss6d!j+I6jihrPEfd9F`eE8&G;k)1JrYlTkaWb)"<7pX(^BK,<\otpSo]:lsQVa.QU
%k?d'qQ9llOV)&CqcY=68"f1_B*>X>f'`jKn@\d!1\/<LeOcGE3T9T!UWnu+RM`W7+ri@5cQ[aXAS9n1(pI._UDq"opJfb@H]b9_(
%mfn]WESjlF&g4^se<^-?9>`0D\Eulb;Sn#^ADH%I8.,%mjnP7%1uL;8"e(M]J]NQ[k6>1G>V4f<2DpM:#=gEt/`3>j(4N!LCX2ZU
%-r!(>BMIY4(?+M\O`4THc^?$pf5_1L?bB/bT(+iQE+`?aGURt\A#n"&[oSFFEs\HcqElE;Y?PVkAco(<Fr6_'^o0LN%.pm[;p07!
%Fe(3PaL06BP![Mh_LUrb3?\&gb+\LV37R$$P*gJu$nYT<"K&Q<=cKoFe9m&I&;c6\2Z.nRpA)=rPCAf;DE`@8a"DMN0"0DGPE"Zc
%OsleFo^+h8b%B][D^a(MhU>/BC$<QR-8ljgUWIsdcmMhh%NS/mgDF"fn>b8S`I&L]E4sgfLk(mO5II+K,-02ABBb8QZUsYFE6BWB
%D7Q1XMaL"(X!hXl:q(l6M;qLn4"n/2g0nf(P2KF6)o&cHf%>ONY,tam2'L4NU,s?1Cot?3O5!<l1-g3u,t(jphErTt`e08XbHc.R
%P-=<^GcB;O,8ER?D\21J]:+,5l%@rBNP\Wc*4<udPW`+Igh?gt;t#Rll<jRtB_qQ)TB]+3V7JL!-3jK/^=EUJ9B:%jmp\?H8=Q;c
%:d4!QO9D_+#,?l2F^,n&-0CEXM0qN5OgV<_VLq[0UZ`c()*&PUT2n2_EP$s`n&AVl]3qNKR&>CFl;b&d4G(mO=U4cfmn-k%s50g;
%fNEualdk#X2V-Q$$PC&26k61um-<aD1'^nT-ai!7djem2o%fMI^^%DfQ._X&%AJRr:XaUncp&u+E2M&747DD.\^-n@"#3\4ht&fE
%96!.^!(&t"F7+*9SnOO</mET2;*<:()NgNYW6W30L1WIb[4p[FZ@B)oT/CZ9SKh5lOJ;@M%PONLkk3UBE70'oZID",1Y&s>C@q@E
%'A,EB[";@aMe4,WGd)?@L?#?".6\YLI+D?\i%1D[9tL6lrmIU'ccjVO!'=p_NGFk?GNCpIi)4SMNF2[S;+Z*LH)YnrbPZY@-F\sm
%mj9BT"Q@6N2Rh1A;ss`H;:?Tpa@Ur2UkUeb(#Ve8*CN$soiW(4lE$tEcI-PTH&\E,Q>[0L83:_<krntCQ/X;$JEBE]lL&<Bp>U-Z
%j%r\,Q3'kWp>Ek`>ueE-E,"1;IQt8<gf$+?Ua,'R'j/HA8J7gN0o4p*U#mpW9uKlA:nlY0[oi8bcS"!<DOMroJc9JQBM(#DHQ:/d
%%5OqD4eM:Qeg:s_=?;J9>_'F$J,qmD`XJdM*RDpY5NCLUEooOF_Ds:47qBdUMu['M^4^+8(15FE>e&-:2EVMTT.Jb9S6e9)J4!uT
%UO(]kaSO5nh[o096,%5V\Y?.?Osga@]=k*I:kr1aCK1.c7Tulu&QKn#V3pgMi**h+V667l`>&`#em,I?[7o\Z)75=(k0G:i`[m8=
%Cn@tJ=hg_#[9gV$:.T6Yl<V\BPlM0_V+/-CBf_Z$Mqh90!qAr.eTk73>_VUOo]RH<-$P%:1GRpMd&V;)A%#6`W)b.gCb/I_3Es]G
%7dT#lOSc%Z1S8\7cbXB_JZ[NAfMfZq?9HlhgA!*Z&m%^1#8COY4QO&@'T"'-nc(/EG'R@h"`bNKEW%'_liG*-#nYoE>M[eiX+m(/
%]K5[;p*NT4CE11j=JGL5H1Tn%L+8fZ=,P's_;T!d57;V1i/BP9Mp\Qq/H6U%Fd1g#Q-aqaI4JZ$3N-N/,I"H8?Rql)a*0s.iN%ad
%nbLc*hboP!j]]p(:G,6Z'(TY.>+?&ZObrZd>$(Oa:?I82./T8rWO`^W:0J$2b!Z,8qc)@^1qn%#M<](Jm1'R%nMk?6l1ALHgG5\*
%_NjC'B"FC]m_:U_iZ&pg+o.#n`t/>1X-[GW0PLJuYFt?(#33\UZ]!u!980upT"ZDS9nj,p4XD`5R62kR<<NEsB$m'-P2iphf+c41
%^IhSRR(==(mp3T*Z?KSMNT!8Ud,TJCmi=\^IDI%NN=:=Z7>qA(-97A9!ObeSV,Z,>Cf.7KX\/Sr^p!o%V&r[NV.F;a(=9u/Ml,_U
%"$P*&4^9We'VaL-NbR&%JE"tm/$>s"4@7*WC@Bu?\UfbtOt]su@CqX[F%G^TK.kRB<I>L8D@9,!?[aZHSTI6G'5XDYO$2UbMS$mO
%IuN;RS2[t(fWAddk*c.@r*i*h88WK5qGT#H?VomNqXe:t4)Lt@N`O<o0?#>sn8%>]5XaN.XeAM'dFQG"9H@e^bcnP]-Y,!`SXt+<
%,\U&ePK[A"-;ihSOniS>dTTYqV+PYiABT`Bao2oEP?>)`p:]!<omY!iOjkWu+q$cH-I"Y;b2A/:A>&SO-`,9GZl6BI^.nR-doZr\
%AaG^"9?r%3,A#4#9)BiTaJ6*WCe.b*;a1E&@=2\G$,":H]95C,3GB\=%O#X]_IYD26dgh>qP+aFr^nq*4JGb'cti"QaV"Y5[2,F@
%-3<@rX1N_XU(_r&`:>/&>Zr1K]lPmlL6&I+n\krN>K;"hIb\j^,nqAg;cn-do7L?h:7_-HQ3ub2Q;al0FVsc%*e8[qL4,AH?(=5E
%0N8p[c#!Q^kB;`1=rsB20%D?5*?SMNGM+Mj*<6T-^jX0&Z_he,2K4t)*Rt%`q5Q:,C;n;-:ui@)9tlI\]KtM_?SmbekpSS5c[=ED
%jd]+M-3sWSS[R6%1eXR)Yf;PZORH!%baL+K\c5MWs$)N;s$-N2KfPhb*M9s.]D`b;T$1I5@SF97aB0G)&W9&j$>]mk]ZWk:b9iu:
%MTRhIX@e1"KSn_qX(bm,+poj\:_&HB\BANu83h;Z#k0oF>RgB'q\@UfJ':Xg\>\T"U8FnZF8T?Fq(?W"g9qQ3VX[&3;Ud1iIRpae
%9j,%V-tqF`ILp-4%8?8:lMTjB4Q??/M6fOBV82J@*W-8TG9%;f+pOcq`ea#DN_YVZeS&8dbMUckD'A]Y8"^!N2$&PX(DKBNML+nr
%IHpR7T)laHH*42`e7>]'!`d3U`AOi[a:DL?r<i)?c;r:mnq1kK?#W(o0u"DaQ-GZZ]\VjDa..Q3<':;Q$k/^EFHp6OLVGI9FT^:'
%[9DORWNrMuoFUd9/HHUiq#j2cW!`eK"p-e0='9#Q1\eKL?_?.&^.RYU=)8497J-r,:,1?S6/R+jcf=QImpa*`qDTC6ner5n>B-TV
%bu#W8ZPArc^75@?M]Crai(q<f3'u+CmF`Je,Nc0LS,7Al\O'<l<MJApC)q.q`2_Q\<4M>@k)X:%h1^3Fg5R"5Ek%nf`"VAD#Z,[N
%2lqeaIX)s%1VT_BFc\5FLPu_KNtkCL.u`417QJ3r@M8>6OU9]q8ij,r6gJ7'$^rto,3iB-$E^TA/QI4d/J,uV_,cFJpJAWX&hfu:
%R`'Op.!g+#oIVIUb4gZD:5k[8hJDY8Z]%*+Ol5u3TXN"\@lmdrS_eW,MB9@pn!tTI)VUkL:@IahbPaM*l$&q/cDkmFn+T(@.ngL9
%P,@gUl*L<KX5:9u,OP$I[6!Oq,uEb-NoT&`\RZ*hm`5PnYUH]"j.op\GS.fKohqK5C>XSP+5YcH\$i0D>`05\%$u*cDu5$UNPGH%
%PCjb1:XI^9NI?tSkBkTl9S+-bNq/]98JckJm!i@==Bi)<APRrcT@0j:+B^5kqI>dBi[b*B)aF0<XK)I-;3J=fJ`kb4])U>4?;c7`
%nn!H:_*-3`S3J%-7ZB/3$'1k+F$#-/UDfP0`k9)FdoDP.eVkF2RcT'"]_Otf;uaL#ie)NDr!]&o1oeT[I8\'jp5#Yu0cU@PdnS"F
%oOm,PR74uM2K*?6=F@_k#,G28AK]L*eMp33-Cn`:p_10NH8H?r0iZQc:`+2HU+(1J>aSd2DWE&5N/`BpPNo9H.t)a#'Kb(?8lE`D
%qtO<@Tl\&6a9#hl#[Uhge]3LPNTL-Pb:ee9e%&Yh1QkOq;"dejCh:&`Xm>Xp3G-dAj(_!N`uL<#41/4`;'u)'Pp65(^OC6j"N;aZ
%Q]C6K7'0("H&D9\Bg=N5lD;I47bf7j4g10NKq@Q`3>)T"l?mHi%%$<3Vm:G^7@+?qLT(4H#RHU#]b3P"9sVNuV)af$=+5je,BZQ/
%:<S$<IF&T+.uNS@?i6<"3k^aKM%uO$KXL2qF/".Go7+BAH`BR:&Yna*3BWp;e&c(;&Q3DokSHJ:<j/!RrDf:EL1^q3h4%u7jfk:=
%W(P/)86BG$ZD&YeMhlggq*k'jeBs_g[>qtV#WU:$=4ETLr6eM4Lig1PaH,\TnSM9],G5R<[FEnn,-XIC:fkouL1#Fd$mi:"NS[']
%ba>/nY$]Idkmjd?n8\qs=&46A)ZK;g5STeA`0sZK=Od4m$s6<\WHJ;Q1fA!bAa:5%$4BF3I+4a[neGV&.Bgl;BMc#^B-t4eb6:C]
%Rb>bg4g0stC0UXbnMQ.GOd1)Di\-u@rRj)!\<SNE\E</`FP),(\@n?iVBa4a1IX;M#t`DN6@+#$-4="g79XYo`p/2U[e:I+5QOMM
%e5^0[i$Q/qA`K"J0tCPBg@nho'%JI/1JeiRUrBXB0Tp1>dPn.=`MueOcf7`.H8O_QBlkIYU0,F7fO<AZos6#0O/*1Cj`L[&*[OSJ
%J"O[.*qk5Y;/#uS?![4D>"uGgHY+27TC7jVJ:5&89:;M[Q.0gDeEPMkTl8&4n)O>,1]OZ>*:Pb3QNX#.e)#pO3Yo,:qf7Rl04/a#
%p-1R@=TP019:kj_qKQNp8lLq@cT9ft3P/TH[d,2Sm)>"M@)4G6K7Q!,YL5>$LpLqjqc=9gOhOVB.t@P*hbJS:,Unt:c9ao*cWh^o
%Kdj?4L7uBQB5@2BO[7@)PH$'9PNMFproMhNpkk&:"hn\b=a'E1P<[sp#=LI%N"7erIOJ:'?9a=`:%h*eM$(?WVb-s<F;+8!efBHX
%Yr%JmA&H;(B0uT;^^EVE<DOWs&1Hk,/Q?T0`oL0Me6^B(<BFZU?%c4oP&lM+pf>,,8+hPa.PX<L!l;W+I@8J7&@K#SlTM_g1FEXh
%/ORMn*f"=p:[2M":J5\S_6o8ECYMVuban4%-[9q"osu)GD*1+j_;UqBD59sUb]7c-g4WF8)7k[=nF[EkNCZleqDuTlY<7]6'O'oB
%m0sFQc(\b^N7fSE5s;WelK@A_>/ie81XCk'<Y0^RZ)+INXM]>QGY/B:7Zm9?hHA0Cm=c"b,nj@tO/B,J4mqC+1)"RIZoVn]n''j2
%Mj9^gFdMtk%Q^As2P.Z*q7fFShpW7Yg@SiRIlu&ubYk"JrN8$P.Oc#\F8a<5BQu7fBIRZ:6go2G?+Z)(Nraq^4;qU0Y@/(\m$<nA
%pdm1F'i,n[$LeWD^IL^7Mfc"HC:dIi"TFg25AA8)[+>Ej=KW:TT<q;;(hhW+X2pD"9j[:Rrh5>t?])S"aP^+Nr!5uniff$//#+L6
%RRAtE1M=B\<0-[T,lCg'1=U5DDWYGofE7[WAMB3O4_ZB,K>2HQMo*`/.5,i\p\[J6AppYiH7'5'7.b70(f307iD2LuC";)9qr5rC
%MV&jo7lZP447aG8VUK'mJFXLSPj\/G>$9cp2#m%*ep"ZS.CKZ:<,&:V^3>2WVMPU'b8\u`M@N,J.?>(/b:i7BM]"p7C+qUHJ9,p*
%Fm,E>/U,lNlRE+m;79/L%\-CKgS%#LD@PB^(7UEUN,\=U[c9@rdj&S.8Yl`S&*C4+jR_)2]7QXL<X6K.ZF_K@`\!TEaqn?\q<g^O
%M\Sc_V;_gq6pkdf-$o0i/RHoD/p>)+es--&qf=.E1t*46W]68"S^<T)0mOOUPCC.femsYZ@oqi<P'qg%pOC,7J#?k`q\*oumcp8A
%;jHHDMlsG00@&p.A3$6n<_DLN5`%h#7i@HDC)EpBX/#OENZoi0D9ddk"Ca,fD5hPLG.tt#k(-u?J,"uikDh#H9OF&;EdDdIWMPrA
%NtYFNN4LOO,C-GVdq'1_PQ&ZH_'odC"nH&S0s2Pr5&oI<T4XKNUq8dNps_)88AtGUPnc$3c_rPhno)(JdEdcaQ6@F<5AK^dTHckZ
%,e_GmAhHIVYX!iXIRKD'3!kH%/c`BnoVs?OAgbt=FR]dLZh5%'2%QlFF(CF&8]e`$`JW"\[DkcF#*iaD:jY)j\SnSnH@TVd'4&@G
%r_K<n>!<b)VBb]>ST(qsZc>,MQ$4Xd"st(f-OHC!&D5o9EVP0UMc5%:%0U660n_el_[IdrH7Pr'',&n]mG`93SpQnf!pqoM)2W9T
%261s@_u7J9X*8K?G8%hg+L=d$,3I"<1#KHA%(9Z8:YhHAktK69ZAJ?1>-EaGrlULgKHEi4gK2_U<;c\OrpA)3/[GFe8'*D01l[RU
%\*^$e3mqUS&<]Pcj5/b)^:sc<J:ZW=Ub&C^-LLVdW=EETEF<Xr(+;3rNc:M,H52l0hhlocP$[*M9VEM?7T&iVY:GD7H9aK!A]A#W
%*"JXp%e"RFMqYkg/psCbX4a4^+Cgb,miY--FA2e.QQA!D"`L#!TEaaOQ&i`<4mF;bZ.u8fl6ffGICi!fQ-Vut_6Zt5QY0g2:dU[6
%J#Yi'9>"./8.jk:--mp5)OZiQmI"mR.O4_*'=@Y//*HSd&$@*!IfHa\j?L_Y%imC.nd4(a(%4VVkD<A@]uJ-@c(dBqaf2lmM>LM[
%m3ka8%`l`4/,ZePp6"62S3]VAlHl8?=,K`X]s]C$q,0_7KhdHqcH4Y#]2!O(8MIU&PQ[g@bWod!^^LNQ-qa'?hqBB/iDpF,.=,/C
%o?VPIDHIKDG_VJ#JI0p3paQo(l[-DU5'/&gBe_jRI*b3Dq/c4A<Y*@26i8,D>,D<Jf/UKK_f'[K90s5fQYM:`/`XS,A3rBpfmC[;
%&I/5gA-.!C-I!):,X;G%-fmS;5POI0De6s3Sa':@rXn9a$^gc,@#Ga9k:ci/!f(Z/=WeZX#K,c="1Qrq\Y;$C"Q7/8Yr"fkQ3$^d
%$iGr%Kd$TO$<r*gK??:V<,N<j&H:riIu.]e(rm.a^-q6]03&3rHm7LgF_2IT-q47h5;uc3+/2dFbS1:nJ+;2V<e"^=ke==Tg9?1W
%7g7j]Pm<g.I&isR?r;Pj\+iQ<5tU_d:T<I!%1\Hafi2g]=PIUiglpQ&<9#FAK[3/l=`\]k=+k7&mGSVV'rU"?"Pr:\HKVh,,T](7
%T^k4F5WWMMebc\)OJQs7YBm57oN>nIU]Tm&'(te-`dbj^NmK%-&a/WWK1EaD"nLEZ*d1s"Q;!C4nZKQHl1#]D?Nm'V+s@3-d[#Vi
%l-iGa)ZB#.*'o*G-.U'6mnlAfQ&`%]q+rMNZKj:Q5$3H5WQBi:42(\d.a4G2;>-s#j]<SL&aLKB1_uT^QOa9OcAp$%12rl!1SQ>^
%B6Ut#XK,V+K]WXIejTqkXpAb5)IUB-N3!#1S]l(kFDNtdI<L!rV&9^"A:\,j\'4fhdNFRQgl7ubVdgqH<a69M46-geLu:7>*;D(J
%"j\Un#AKZb"Ock=.32)j5]^R1gEW5:4uu=8/?<ag'H1qroGs.p$sp\[<?0u5n2Qh6-iV;(&'D_@/Y\1e,-gSEhO*ZBH'BB,(VDJ,
%1N&\[OKt$r&58==Us)_5L^6aHiNmf!q-QTuZfY3+0mfRp8A$Y1Bqmjl'Y#VBSn[c%(s'^U!H6?Y%MB)QNEn'QD;5ka>BSf"PVY%L
%]f>*N5=UGXmc[S?p]cUipgd:?7gW(%`[Nb<\]S@CeViUEK'J#DQdgg@^K_lBOumE,"8#QONgb!EAu,ln;Eio,pY.09"@:c5WJqeH
%Qoj!Z!eqFQ\#C@4E=VB)HP?auro^LO8OB=?>S3YtB2$gPP#U9F\mj/q7>8k]"0SD]P<U8nj[r#O@#_O5"9=A%?`P<$GG464OI.-T
%>,ZB@RTC0B.C8['&Z;uUfMLP,&RfKe':S3mC1W"^UtITA,3TUuW0eNr4+a$g:]sBjZXb#r,^Zs;"CHD>PMiY[k(=l"io#,WjOmrD
%#3QXR\/9WZk]1k3[t_RV1^E?W&sDeVS4'._-%&/oTB9(H+jXa+ELh@CnC^`?M:$+;R!Yd`mBd73s&s-r_NNTg?8;7*>+2p*G*.L:
%;O#,gB8`AnAI[=cce;hNbY'p$'$0Y2m$0_^h_L>k*Tkl:Eja`-5[#`UcQAkCYQ#JjIf:9(h5FAnF9&S'[b2=O^/lWD7%gEBIY_G)
%D"ZJ^7+KKcQS_(r.(Lo+)ok7VH#$7WMLcmn3\E12h3gia:%]is1V2TQN[fGhbUQVcpNgbj0.DV)Pc+"-/;;Nh<A*XH'n>K^6_9WJ
%@@1<VM]d5jF:g[K?C;VI$7<nNR)8pMH+]p+,ktW.2#\DkU/K&!$r4DG?4L%n48IR)]H]e<)TeU\5g>ke2pP]mV&%d*-(oJA)1mVD
%bbm3,`hTG0"iZ;1TLT=>rsFB=U5EK>U4%:97sKuJJeH3Y,cH<)>t'o;8p)iNLY'gLr=,];@@>,uL9'Ht%TDZ!2FLeE[U_m3eidD>
%"9;P]cOigFS@Vk*[LQl$I%XtM/;$UR=(SA5a9%k4SGQGm:[X*@^@(p/$6`H#A10r=rW]1''.EjAa4!SKD#\?uH^g.df!:P09,nqj
%C\PC3*VL/DB.dkc;isA.qBRYUW)b_Y[[G[%9JJ35.Ek<g!3%SIG>?J:"/c+@XMg%Y#Wok\`S(C[\L'(\'ihiBJj;M2EnHtr)Y/DV
%GWl8l8"e8%.SK8%jd_LD.;._RfKR5Yc'=LedcB>(NSZ/4;:0_CiJ;OcVA..pk?5`;GHs=DQF:\K*I9hNV4%DkTd@Lr7:-c8p4'HV
%\:Z#%q0D0q`qaZO\9Y#2C2,fZ9@'dF8'BdJ,?[%ef$$a<+N_U2m;u@t-L%/KS#(oP%<rRV&E"b(>=>1[9n2]\Q1f_",3W&*bc3(q
%"</&VVQ9dT&Tq_aVn)7VTS2EHaD+s%LQr27GKhh\%<;d2b0\*b[Y_!RUSF3AhYN9SVetH!oKGLm/^L##+'!a[L]"^*+7`"Te\!fa
%X0<u!iNa-iI?4;GiV]!qS)oA\7K(7jrGQrX>6Ug'q%^G@g$BsRA%U13lm^d!&R!*F*'Nn*@_f?]5"a/e4-/qTf6!Y8Ooi2sM3QqJ
%L?3Nq.b:qCc]k279WQN]RehTnR3PdcIX5Tdg"6<$FO1rnS$pUWp,-Y?H&]2>jUnIM7)-nMJ#6&7o$DTn9+)Fd3V+`7E3SpbSa96!
%CAkO2m3DC&6:nAXR=DoXekh6JS/!MT[1R$Nrb+/Wki7dJ-3VV!1ZkmBPcNrF7W$sO/IH1?&^+ZB(_Ip#Jf88QrH8Y,k:<U;RuCF3
%0sA&sFRXi+a\\X%fhNjj4)L&UGG+HBKf+!,Z3q'C<.,8!Wal<q$Ao_GAs=[<mK1(E`?l4@Zs9`o6X:'qi>+3lSI$!J4D"9&P"%07
%Wu8m,@ls<?WIDjfO48M;<n.;EZ3B]-9Bpq/bpE*n\#g'fTINCVAh#cnJ60MF?tYY"n,iu'`0FK:<_6mOPb'(?Ub+j6=)L(S<^r*p
%DiYtubn^2es06=OCPfqu);>P"<0&6H5it^]W[a&,\RnI8QHTkUCIU+;]`bZ^hg&<Tg"u4@]FfY[j9h?<;NJmGqEQ4;ffiXEfedLQ
%f);Y$CjSe5:T3"XgZa:HqpU?:3R^CgT9b:+hcIm!gOOVn`f0+11[CQH;nn+EAi).-dQCM>gm+sE#,eX\POVCZ=M5]$aHJN$9'>Do
%QdY<HA58!j,_ZLs:3]bF,eW(^FP0?Vo/.!8lE6I.@]I^tRno;NifUkUL\W[[LL[LCdttaU!R=l5]47't@8ER6YodHd6+$bBTS0]P
%B"1e2eLN"W''Dt5'F#5Q[.;5s=@D8'<ARtm?J@WP\j68)C&XA%qW>b!#;ZYbDi1b)S\;)hi?TD*b["j<9^B"9"KC%2Zu39inaKBM
%F5Ff2VXuV!V]TiUi8@-hoV4oAHs[0(GWr7Q'X6P`fW+L^)NJ_E>Fnpp[*B.4-T58B9<qFB97(VEkfgFH/fR=8D0pu@%C@l[UXiqA
%m@$K*V\9(.M?*S^6kHEMW*k'D,Amn$ddE5=6s1:`27o=?DOt*)mSdDjno0g!W^eFV>PsaJRnYp:"aALV4A/Qq4h+f-+QF-MG&*2a
%TRX"3gk%4k43CIfh&oe"-fsG7M,iAkH1,oPp,e23basu1<Y1K?l&pNr?b,CdP8T"?#Il-p7Rf."8%Y(Z<mqMZnCI7jR;+(qnj83(
%6%l4A@t)a%jZIbN[8jkue.>^DJ?GjHbk\`lG:Dt]1??1)Nh*Pc_FaVTdd!\Jn+gD#]JCh35?6-MPUl0TBeHE!1n[[c-=VHnP(aCs
%(??Ydk^%-qSOP]=Ujg3Y=!5aJksQtn8uH3s4SQl6-.,!K$nD44Q1:AK$F64b+0\Ic`ca3aP'lgQ5lTDt:2\-\P^%TlnWiFl3.O9X
%S&$'"Gqag&Gm"pT>h'']S$]Q"OF:nX^/djbCL\Tr:#ROpT]X#"?7C/bL\$44l'JBGG.S'SSC#gYX6$mCJDV_L]60UBZi^0(ak@aU
%,6,mJ3A@P[3bu*^qct4d?(bc;$_H>046u#Eac1sRc>E\\0ICkZ+os<Og8/lbA'tB#.o@aMV/pjSkPL&H`C8OQV(RhcZL4mTq0oJ=
%"l=!7`\oPS"&0\7U'jb[B]eNZ=1d!<O$_d.I'e'oVC-BT6=hEgh]t'LIe/M#$u)GmpI*hE^:f0#Vim<0<u"up:(^_b-+J,`OOS2m
%c6&D%n"lF'BmZ>,0'q7E.$t]D[;+?DU/(;T+BAn#lGQY97b;TKJG"d_%M@P8H$V$Z+4nAKnShWZe@F0Jd-u#M45+U-6qM'Y^15Dg
%.:r1]TG.id.Vf04YPcr[YW\t6]cW7%D:B<ncT64a,+7GNK%ubh1KEOZmLU0\&\D8r7/mOkc#[dZQ)HXA2EUUK5.5KRhoEAMQ$k^(
%-(4ol8:&=pIJ3CFOaQ4q@hZYI+F97X_:)\\K#>'4RA)9UFk("7]C<DBU5<B,qfm/7.TGDU8`6cKd[-J^FoT(0HT@1hbH*IC1>$cq
%Ilo&O$uAb'-`6Q_Q5#([erp!q;6HkA,%=fQ&L3s$CU\dM/lM?#IWP'1;SSLD7.H3-,pAFQ>`PU3brqB0D+O1upAojB4=b+YB<,En
%*@q&D0H-ep*X;npoM\BO>V@DD"L6[I6"O?XRe#G`o8W:>Z^@eS4nXaXPs^YS7l"IFf(c$q6U3=1M@:Q&>_S#aX;Z<H+64f088B)e
%cMS\XW`O=2m[:?N?O9g(]HFT7`i("\2\Cqnef/[I.6Q<n1pL/?DV%]?\E`\]%]6FV8+L_f08s38Bq%t;&O4/7R'SWBfGSjY=c"OY
%9+LO'"/<oRr@uKNbtB?7MR/O7]mAg90*h>[&_-PdBUTUEN`BpgHX+7/iN'%t]`68S<GgRb=Qj&V^"=R5S-dT.41<kr63F;#<uT+n
%Q(Hn-Es,?:LpE/Y;KT1Rm,u+8%r:(ugTIsF1_%t8NPIt;*Pidp$m4=I=rF*<;@;oUVGLm"Mhp<I.]bSY:E^q.![JUr/Z4*[/m?qS
%"FDt!fu]P"$ML)L':j3fF`0"&Bih@%9UXoXN`GcDhtuT_Ms=ZKlo%Cf'$I>L#&+gupZ`_u+"%WpD@rSfq7c=Tb-P!mo^K9S/ns!L
%)CT>I<d73`RFjGm^NV=3BEiIgDd>&L)i]-/Z6caIfjjDU^F.)La4e3X]1nU:<0B,9eBkHs#Q:366Ikc"-%%'43Xa)BeX5fF?:c(c
%&[+J&Ga-tZif;97[t'3,7WLY/BUW`D@4m/1cJ-FLKN4^-LTDV>hB9NNAf;u5:\KnON(lag%db9^O@iDO:kr*(-33G5Ng\j'q=HZT
%rNcmP*lP-[a7'+[&73m"&b'Cn<kX>h-NZ`-/e>QtQ:?F@4oZtDVMc>_Bi7jD2-)W$LpK8p^+0Jlk;`3KUR.[tL''a`kaA7^$"r,S
%0k[o"YC`aS_jbR<@O!?(=@c[HCkM?>``Bs`%DF^ta.:%[$9P[ZV,I5'S_b5^0d&]\2B;tXoJ3G(F^Ns07_.BsECTAk383qrCi/UA
%qRe;<OjX00DIaHj\Mt7sNt$paeZYP7MbLK(;=8e)RVpo&i&^[BenWc)8g.@W*.+#L1Y+K&H'-I<aFrhnX@]>VA,?"B'P@\c1Kt7\
%=Tc=SK=k1k3a51M%\%UQ&d\9:S//#-WjG#loM-q-HIP*??M"H^b?XhBf!3**b,17h[Ii0YbVU1fB9]s/.<5\J@m+V_(fbcmA,CX`
%_5CcPX+_O<p3[G#1K$hNA`AjQ\7V*%j6\>P-1%P,plPdY?&ICX'1_:"IBp-eAi0XC`a2*G,QbVO$-.P6mCsB!kA1%Cj1b?H1t8SB
%\lZjGeOD2"),=*VMf$+:2`m-;31aEVPV]2/()80Zl&iZ7po]>_X5Bg<Fhmg"9Q1!QdWb'Am01ZKC<^CQ\T4.RUVKRccTNN,,K2ut
%ZK@?]%mh,tf.!P.Rs7Gt#X6p7hH1=cT=IeJX<9;W%O=0GB\,9NCe9.Hmf/0jd;#Lecqd/BYlF--]+K2cek1/G>7XjD=GF@9\7m1P
%f&;L<[A@[-"kls=pTH&[s1\?9>,?!*F*"=51R6DB<=((#p->]gL0hN>qQb9cj;L#a?G9!uYAu=V5i@q)fF_.q!;er4h)4m$1FiK]
%Eg;U]I##sn3]8qAaeW1&:`JWI2Y4VoE?lcs^S+0he8$!L?CmjJdg3e/0fHP*S"$h14aMDNXQ/"LboP>;<kcfl1u;_6k8+Z@7O`K4
%K1$m[+S*K9?pCP:;53nNlW(KOSGZO+.35Bb!l?Rd;AFCgd(R/14Io<H)Ff,mGXq\6Y5PNJJhX]rS8IgOT;keLJjd0FbZe^1j]>s#
%@ga$$$l8&;N2d]VQE)4dGL<R7UQ[BfUE.06TidE*T(?.[0":78P`7ZPr(K`>'/C]i_(E.(R)$QLU,V)m??>5e2m'b;F2X&hQ?bZ@
%Q(&O@!QD`'kQ5f*p]]6R^5\f1F;R8=rk4I?/m18'Rn6=Ao6Sq4Z$b/[W4Q[s9%Z><b"Ak;nAd3aoV<?X0XoT2d#T5PTbo>Adn79n
%191,0eUI_pJ#,Eo24IU7T=2K<6JK$$]uj73Y>iL2W3nQ44aF8S`+sgQ*K_0beau@S:F0R32S*[fDZ(jtX3EtQW:?$gB\B9iB[=;5
%H\,jXf(uPdYS3q8bW!>c##F8PForn(;+Ab4_['s;ZhI_u(Dt(!EB0S])fH%CB>\B]>lC)@O^>#a+EqRdGVZQMre\uAm;gLrGJ2IL
%pN<n-F!V!m]M=4`9:J=5]=QNG#(RWi)Tc5[bGPuZ=X\MFdH[&U_gD@1)S6PF"M,g#kC+DsT#6O!?GmYP[C]FrFg'/k4]D;c.1s,@
%]nff`1WiX"Xk#[Zl7g?r-BBF9SgTU9QO5WtVbSf<^iB";T'(#t!Pb#-"Lf\6p=QU7f%Tj^9<\#K,G@2Jm\PLVbYWao'"2.+M>G2*
%[a*%o_TtbgPuMJGWFuH%]^FX#BJrL8LBZ/k[OK&L[E4nj:,6q9>s,JW72Vk:rNkL+/m5hhm13s0CQXLcP->;!q"(XR\t2bNW>_u9
%`ZnqgjNG[O&q4SX,@Z?$cM=Xs;p[;JWaf)25@/BWS]2"&1BUr%2I^)/R5G"1%tell?[8SG6/9Z"n7Q%\$0"X&eeOOSk^7AJ;nbWf
%b:P.15,g<<EQn&%l_>d:B1giJ2*9qBh!1m1NrfKj1c!`u.HGpIX!H/M6pV9trsk)'3@LJc:,kO54IK_Zk#+dGb3sO0QZ;GC=:t7f
%;#IemJ*f6X(^o?lJ#cLp<:Fm^a%E%Y`=CU8.B18pR5`8#]uS?-Pa=pKh(A$gFWEPESGf9J8pn0.6cV3>0[HDo5]g8+QBH<OLcj3P
%K)Bbh!OJL+bu1q-88Zkc:-7a@U2\jO9\n-Xh7STiI4lI\Q@a?!rVaFE%J\!!8BS!%.%H?6DQn2P#$3g3H\ia>orXB9jgiG@b+#$"
%q(8Q&V/tfpK!t[$B5=$IC/"U_X8?Ld*W^VjE-SDl=5<f&/dG!@5$UThUIeZ$=$LoG39m:[GD]OaQ`!\85(caa?)t^</'#))-@H#;
%QCg1sZPCm6D'(N-Y<#A+!g[ZM-:;">n%eM=#W+-%0:7)#QR9</m5IP6A)BLeXs59IIcCPe*P`:bWYl!Lh"1O[;oe`Um1TBO2MuqL
%m/,R0%G*ss;J+h&#!CcH/UOZJqG..Ua_A&-=omgKY&%#YchcBnaUEW`3nmOR9;4LJo;pW-9#g=ZG*SJZIQ;IVI<U+J5`rX@T7s"b
%0@I,mVe3fM:Y>)]T,UMI?BZT[`$,m.@$8i_I2B&)m%0>g<LMD[>AAQP^K0C3SN$4)A`S`jA*Ma\hX(6qq*rX$m7#PqO0j/om^M^J
%md/n5Z+\JS>HADL;Z4!\[p=9/"NR+&@[/>$s+m"krQcng0@3k;dj^ib_Hg&UVB8QjpR:,g`F#$&M<=VpZo=mM`EWJD$'C]L&=sIQ
%^7gPV3F5C%La#Y'd-;YUPiHIDrh+Z!n]'VXL[7ak:u%u?7iK*h!Y#U(p>l*"RR[$T0fR55;V+nf4`XEi+eV"$dQ<,.ZOO3AX:Lt>
%=>$p;f8iekc?r09$<C3Ha,UpngkdW+KiegHCIATQ:R0AL/BqQJ"W/=(IL*l4QN*&\.-Ve#D7=8]3/$\JQ@qnh\+$*"-b[1cj"+`1
%+1dY?1M1;rKI8u3q#5gXL.7bC#i%Z:ap_B?V%&%8]f(98/e+C6inLKTTY[D=>l`G_ZFupc.fdo9J-OIKD7uH:=qi"3enY/;"Q(S*
%6c7[,&eUiMaC@<3%O4d^\(ad<)E&4Z)0lSY6g3RT@bS7XXQ/:pIHlRd6ReuiP#_3)/!7cel^OgB'Nf"5g84_gch9=K6\\rsA2Zbd
%_;sZSB:aVC/0oa7"Pc5eQ;g<3j&C2'A]WLsd=+BsT*Yg%h[#tODEaIC[,@A-Q>SB;e"Tl-nJdg9OCoD"UBl?Lf:T`1!gfVX_Q\qV
%`TQPm42nNPFRn=]4Ui/ao)q63_Ub/5T$[3<1H\+d5C7"=QP/r$O8[4;V:Ts":\rTsr9RePb\rc+FTC>5AYdI_7HP,n!2:<;+J;9G
%&>-GY!2>PZh/u*mSl;Zo/g@)hE-A>Y,9ZrNB[X^>)f2Y9pEs'kW@*&m[MYibe-_i(SLsZMVaUWC/PW#,F8TqDi[,,dVU@V#2N9PH
%h'ZG`fE9+6LsXea.<Ru7M51[RB@WcD=?mCsff,Na$e%F@G!74TpKY45Q*^a%CmGW+qfh[`+@hoN<F:b>ZlB>$"/<D\[K`:tB7Hp/
%bYY7o5q@KUqnZ7),loR3(ttp6&1B7U>@=75nUs0@Xp\?fFH\ZdlM;.:q\"'o+\c0T(.jgl13^j`6=U#hhp,mO&J3Sg.+S%<n`7-X
%mWGKV4TJl\#VN5Br>VRONa`REC??Z<@GX8HpLX="L![dcr]Uo,=$2\/_)Z"jo[WNdYEE$7Nc!6A%LKsqf`W-V1d&C_NPql(P^J?.
%.o9G_-AqT_*'(.;;J8K9RcZ*459B3U"G+J5YpT2dDB,FSaUJ3GUVT(M=V*[<mLYpqNdBio:Cn7+I?2iZEF8V(9B7gtFT2M9&g[WY
%*e#3n$0Uuugb6Xh38jdR:+0N%qhQ6[GpH]>Vjd>!H,Q-30#5[T5Q+h?kV\Gqda1$>T/:G_nI#foq#$>RS-,;UIK":6"uB7i3!6>]
%flQGg(NP6:EknafP_L$spX%CtrMJV&\XK_Q1ZY;G.<JM<[T.Il($Gu_A-Ii1HHQ_ehHUDV/t49L4.uK`G5d3X-P(Jpc%9SV,qgJL
%e[hd3QmM9(!;?pG(-Ap":c3$%qttia_B2is?qqPRRSAh10]V6hfr!mD``7[^6+Gi-oaC"hJ3ull9VG7>-<GG=F^.GE'i0T4KD6#j
%;SkX'MC^;f-stnpd;@`NEu%Mm/,Qd@5g*/-n2!3Z5BS>5CUIDNM$pjJ"tOZp.0!\DJBq5X?:*[/:o*u]7NPPGR>,i94]ZO?39B;K
%U30t$C2NGLfouSWVLUCB1%F>]/Jo7LP3.]H+/<17mk3ip:nR?9/0l6j&d_T/S5=JOOkqnCUnkS6L0`S8`d2U3,71iBPH`;R$F5B6
%<>u*TQ7;)2%4fq..OEQ:"94ad,eq'&?!=i\\.lONr!H2]W)!IRhu:c4dlmi@U-TQD7'r<Ppo3>c)</H9jY(Gcckc"?gdVirHgm!P
%hb]:Z]aW=GS&[%)#"l.q>-V/KZg&ld^)6g[:3:bF(X<OJqoO<TlZEf'W;673r8$mrKNbk[n'CBY/L*"jTBGe$SVHmSI_<hAqpZd6
%^39QUdI@MDR-`%U.:qjp^(._,4F[:!h*e"5fcEg#J.ess)9sTJ_&`i!+I;pa_b0nNe<L(+*4.L=?"UrtDT?@BKJ(_"3D<cFT*pZN
%.[L`*E96&"Q&I<h3e87O)IRI8]/-n9-:[+$;Pq_coD,$*B1p+]8,OPt2T?8UA>oJ<.?oVJT0F,VYP3]uX$WUHC&UpI7gmh(=apR_
%ht"BMQZT^n-c,8nmm\YAmim,2-5mhTW_THB,Uai4hGo>>1<E3&Wg]s_4<heWN)XSW%!e1@/A%e-VbVb^hKbC11ABk+)cQs*("'uh
%kG_grNd)&]p@Zd2&!E+("aePE<6oiZZBM'M!2E\K`O.R:\Rq#gL$c0<ejjZ/I&L]=7!1N-`Cc9Pbd9eCDB67q[WWGoDpQeo0'WDf
%[TOF+HlIKDT_4a9HqEF)*pe\>5uC,*!;B@r'S*8BZRY3hF57,_nqN\-n:p.mLu@Cs`gRI(9e[h=Oo@A3+M$5?F_u"&Y),kmU2TP#
%N"@48cQ\_0JHYsh,b@6-=?b,_DDl9q8H#Vo+4cD#$4Hs^DQ->P<'+r>dN4IQ[$X2qP%1CZ%7>sio[Du*/-Qgj^eXUA4gZB-@63ZU
%2XK[C,:6!WSWmTJrZ;U0,KJ=k4X^0eg8%`)iI^PDYjO=If+XFBY^?'N"&L`oZ+B&3G?ghWc@<%D6RMH4N.rH#!XL#1&N3[%U<roX
%,;D'K/&7REWROc-@EXho;?n@+1fF[+R1j*QEf"_b$Fl!-Q0eW!6>a80o*%3q)[]S5][\XH.oEd.H\WW^q4QH;:ik\eO0*cWbt$2p
%3^5:Agl^Rj.*8c-$PoJ2qK]o5iUk=h^Ma3E/aadnlA?#(SYO:Ld#"iqKY4"9<^!D-^@/KW$A+@O7E`p]qO\f)R$C]cqBLOh$^oue
%`lr&0]rM'I2af"6?CE/t:8QfG%B=-qMEAmh4VOhTFl_B:iX,Q5^`]^6U\?"Y.bbLe4PNQZetL44g!W2HLa#eX9dA5J]7*nug\KBb
%X1,GDD$aq<BDY9&=0F8)c%b=XdY6Zu;,3:6k/)7UA]Z$MOro0^g?]"pqMp`)QeJJNSZ6Zu@g'Va<Ko&#Ns_.h:KV,bUX1UtD7#8h
%M_iHq7d2:b,ZJsIE-]D,rau;?SJ=;379u-eAMc/k`!Z#*g.m@1InMe?U.!ZqNY'7\OL'#SPiT8EFC+WQ;@3$6<$a>JF*KSG7*cVr
%'K^'=d5]J7MJ4:BM1WPM.;CseKd2@+"!NS[9@Q%s)KL!>ER>i*m<+lAR0fp+o(cc,KGnFNF@WROj-o_DC:<7^#H#_ei+^B2G,Nc@
%JW#U0%1oYi0r'iI\@gJX\NOM,P@@Ak5iL[^^lmakGT6o&ArPkIYBb<uYM?qQBel9bJ09+Yq/9al^4=bG,3%"8:\X&DC1j?j5?0pX
%<JUgN*G]@po\5oJS38ESFX?3pW(A6*NY_UL22T0D*CDr0e;h08SKTraI_rlM5m1Y2No><6Wj>!1>H`NKCO=KE>H/*UHb]>^$1/r@
%OTXpqj.b;PR5R#(r%<4^6sEqco26.a[-U!*Xuk0Q,_.F"MZ7&?hBgcoB'BdEJ`]cBfELDq8N)RW'93uO97W_eEQ^VT"jc%1/"T?'
%fRO,)\A8'C<cO?!N/W_9$E29)WtZ0Y:9tT*"#Uo"j1E;Sd8MBUmU@]GJZ*[=k[gC'!G^O9$A2hj_B_K7JXDuH-6b]-jl7c+H-=I+
%M;@c&l=l1Q7Y1GBl7kqok,C)iWb!p?C2RKMj])]^DceO?P:Y7n0U,`p"?UqMXV=jM7UMQ99:gcAkd\)o>7O<II7XNph.R-1qmWM>
%f;O:<5RmN;<*'nk/_OA[*RblqKHNdu;KlQ*DMM6WhLq[8#'JJu+O:kd'dZW*NX+l+I(S;i'.5AaMAnKdUT9&p)mugpjW;/\miljR
%6s_$A#S))]>-P]&4Z@WWCHRU,XTflmK[)Tbrpqb-M<L5*1l1NsW+[9I*&Q7.@W`n8%Cg>O<'m9Ii1NecBCWZ\(qZK+L+kYt<bfO$
%@n9=f"b.JUD7hrZ;9e(_=@d1>0s(7NEihXs8RY6U^]n5`'m/F2%o(Ul1AHPkm-RO"`#D'aGn&KR:AYFBRdNUr-n3A8gW-thG3/$3
%aomWfEU(4M=gg"NCE<&@AN-<-Tj<a=f@`l%dtYX-Y)5b@V7pQYnoZr02!,7g//gPB8jY1#M)AU5:F55"RWh>1(e51fJB/R4Wu-O?
%pN;GiTq39m"DW:nGi<t$F7U%!N2[Op9G8cDEO5]Xm4bH:P"aB]KO11J]Xo#aTf(3T./.kE,<[nX$:B8fR62]$LRH?eSS-"XGm$&d
%N-M;AcoSAJ',CujD&=\:5t[T&K8Kg9n<6QrT7Ti?f)S3T:FMMV:(5-[W_\Qe#5oWY55gk;f?=dC<,XOsooO%j&K2kZ'qc8<go15B
%q!1h)=s2Ok=aE[7>``Ye+$c%T^G=l:#VER/nR@@0.>ob:/qZ4qW*lc0<`Tr3"d*tfW[S7Y,!i:gQFf+iZ"WnQb;!GWJ.?@m`$,RN
%?"K\^<4ah6,Ju_QAQ>.7/$mq:h9?o"d)P--BNLR4ghV-(iO3GM*YJIoe#YYS,l/m2JJ,f9.=aO:c7$*<m__0PQtWI!.1j$EQ)t+8
%GnnoGK13Jg`&#B^['&O`b4\Q(S/>[8V5,F)6UOM$MLGjpU9M#3)XWpRJ@j`gLu#CqSk.<U67]<lAeC6VO*t]!bCGP#%.T*9BS^/i
%Xq5h`k*2?u*[3-FEu^L9^oLZ=6R#C,LWU%h;tVFBp+"9Q/3bNdl:qKL?tX=^MM4D!i1RM^97uC2p+Pak<+M'4B.%>U@649-(6=a-
%(GL)Dedefm_)6303Rj-d#8bTI77+Mu5^.A<lq;jM$jDsTVQPQGQ)A'G7D'hm@E#!6#;E<s]>fLE;VZs47>7>"2R0MG8PC.>,(OF+
%FQZ"OBgLI3S%Z`V2Fpo>Ap!AT*_r2N<,cj7+^Bq-;IH_^c\8V*;#Z1`JF6T8<^]/jl3MH_c>dNP4NnVn.6:5oiO-S6fl6!p2#pfd
%gZ8Q!\XaV^!#JA'8l+jO9:RmHq;t\@61J"(*=dp4RS/dTTLh3#d'=R_?Ng68<'!TA.#tRN!3DT]'nss0iQ2W1l4f/33WX3.__f[8
%HSidYV,t(Eeg<-LEtcmIO(hScHL5!Q+OFR-X6sY!3/%BIHP'bnWfCVp*:!"i=@*E?hO%BdlSH"/bNF;qrh6`^Ke"F.%\=*CTR.u=
%9mq?/F>"1aQ$3Y,SB"H-1Lb<kk+X-6\5*H]NVF%B*eAU'Sdo0\6#8HIoFEY`=%S6`X<Mt-&T48aql^b@*oq_u+tbP-ZST_!Mjk"/
%2r*J&V8n%IBPc8g]/Dj;87Yn'XhnD0%KPMdU_.!9+uVu5LqcPV!:M8T=m]+9$DNrN#!H)9S(61-D/$d3d9+q^ZmNG#*W5(f@VTi&
%[fgcV64hF`R'no`cm,X[RMah\W'jBP,undhE=<[mPh6nd'Ea"cQnB@g>3_8#-l+JUIGj[Mlc%LEpDua);S0rZ+OJud1epUf_Og2$
%;OF`+l382W_WoL,=&Jh#6[ZK/&q!4u;?@j?g%;5\K=`Un9:-@dVLab(_E%c4%^?"V#$MJ8ac'o8la?e'35tY/NN/(@+;Hl4.W!RS
%&P!QR8=$,J#Lbq`ADA'6Lub8kY%[.#FL<g[Y:;-uE=-bE6N0hArD]M)/1:W)?QEaP/;038aYg,.iXC>Dn6.K@g/]T4"M1+,?$M^)
%.OIXQU?4[*_s1.P]!<H(Qfr'Y'^Q;abR/R\9b'h+?=Dl&N3G\`0]mSW8VB"nf&^j]pcS7gP?N+]H(.]>CRG4e^MluaYR-b+DK7f5
%=o"QJ+UD(;A^F1Q/(0Q9Gn!LjM.i-$nUltTKguN@_nrlaru,S_&fl0G7he&h97-6<.MQ'fKj1J^1!<=6/dX,M_84%q`5NsGo9@&'
%O45Ll$jGi-qXHT<^.Nkr0(5%#nG*Mf/V%aFTeAc?UFH[.bM[YT=_O<TS]]E(d6AoK#]"BlI7(\1P;.t"H]fV%aD>+S;)&pU6dj"j
%c'(:ZgK2<p!!P^sMDdN]BUU-u_doWg_;C4`LU&"q%[Z%&a=u\%iXc+SjebPGqC:#[!gUEUeXR[%*+!C(3cOl"I,p,YH78_$[&H\,
%5S]`If2C0.RsIgQL)ANB&;>Y()!e-Am;@ddKq"\\]GZ`a(d;73@(m3p#h)Ba]q!G`YUh\07X)P'0fu-dnjN7t2;NK'\>f#lOrd,!
%L159=70GKuGY^`XjPdcJd+4k[dTkAeGV;$0#>,F`L<](@\q=1\;/KTtpL"bF356`TK6i3&oMAl+;p%\4^;o@W8l^1.U`:XBPW4g\
%c75Cmh%6Kop^sod/G??Z`V9Fa%kCi$K0rO-]2_LgqBf/sLt89qHH>ae;$2W<5um5F3+I]/%l*:;MWX,1bhn)?!H#LsK5#%jL4b*;
%=]0<=fe=#RX(Ibup?^YI9<"C#9DTU&i@5!kCXGM!_bGG8LH_YoMlR&B&CqmIl^WXKodVo]&"01NWb93-JB/79fO-_-!`6\J=gk@O
%&,R%.)&QhM/lJ.*::\OYg"!_8+Kfc%NL+NWbjWoiatP$FA2*hM&W.r).]Hi1[QnBRamg9ah>S,%0[d(TO!EYC'J#u(PFo*,hT6-K
%P@c+#K1[/$Fsh'/<SF=^84AL.A3L.p8>r]85X?//rH#9s#62)TM;BgOb)R[dBf*Ej=eM(N&Nf$sQjhi+ga0^[W%diU&Mcm%q'L2h
%5f>S"@iPeKr$s9s1sMY29o/.bGa":<Q-C'1'D,FF@Te@.4(]'rdqfto&n"<L,=BKTNQ$eb#id*[!P%I<qHb;TDJV\WPSj"Q>tis0
%/cLE?bDIuaO4:;Qe/-\/mSp`X>lrY;$)3X$E0ipo)S2VXd&Eo+jRbocAYGpW=SBEK(.N"nI>q*9gat0DP03hP'![\K2^O'V*TAl?
%`%JZCFg6cZO]f?tAeF(K*bG\WP)KZnh'D+4Fdi&1Ck@G*O%K0'h:B@jCB3%fVcZ>^0MLoH(PADMVbs<IWZV'XM@CbA&;MDR6]Wi(
%Ju\YO;aD!9N.CY@g=<_%-:om@Y4;bdZ4I)I3l!aVMcf'O+[^k!*,/>Aql<_'-*leQ;AbZV/=Q?nMn!(2<Sl7YER7t6I7od^5]dr<
%Q9c4!a:ds^NDYOkX%$&,c&sQYmK2c?6;,ft,FJ^/?n@Xd%>E"A+dtG</8@M/^o,!C*`t)WRXtu8ZIhlBH]c5q$"=k]G[lN!5$iY8
%$Q4cF'Rg^KNDWMho]R&-53Y=qqVKB2N8nnkJS?\td$Z(LcS=`;,@MW"'J*l@VCo@C@X%0$HhYA9FQdJuKj%`^%.')>pn?ZO+*d.T
%K6fGZ#sXijK0!?1V!OY)A-:G8l:im%YV]k^khk\;UkL9@Cdj-U\P[DhI(WYZoTK6K,&u`)mKo.t%cPE:FuEi=l(ZO_%IH?W&6gn7
%!o"*[Nm8<':2g>LD/,is>`$-ed1:6#M(\iFS#1(5dMZ^9SjVM'OkYFB\n%+pZL9k*`i5Y=X.@DIn$pWk#=)<qM*].P=iam&>R<5M
%]D=^lMOd[]2HLW(X@^RX,3L!+'!?Ji:JM%q5k`IJs7-X.SH`sVErV;65gneDeAHT/G&=hoZL^ZqQCsG=eT.n);n4H4jKsd6Q*.4i
%-`-6iqrUJ]8_M(geIMtqrl<M%)Y=N].YKO@PtRtge<CBFSYE`2<EitOmm9t,a<eb=$47pZdc.iJj"&.o'eD0N7HuUfV\mm:=066Q
%O<WBF3f_F[7d[7ILW)0>&glaK7\DZeQAnlWB,M<s,mh5JB5j1T?tLs"G^J'bOcFibR6Au!Bs-2>1aD2a%WA;JS*lnIP[0fq;Jum#
%jTcfmd,-BF'B`BeF>'Y67X#5+FjRD#[@KfGWBnNQr$=Rdr$2d\g"-V><ihfs/BiT7eCMQb/k7]b#7fV>[d3Qq!$g>p63fn#m'9Nl
%?+Oat6=^<V5!fZ^bQ3>8mb"=//,e!-GGS=cc4*dGYrP)sM\?5u>VoP2"jBKbKIYla%h$9b*ABkk@bs>%RDDVG5S1T0&MOn'1;rqo
%7EnXQU7k"HLR*61bKgl<@M=@oU9L+l:KW@TBGN8mJ3!dM&;8jsg$%b4'E130#liKd1aY#/_?ocGVU0,Am2GW_(u2*$!(IA>dU:T!
%8:NdS/Us.h,rJDbR<hKd,a7X.UP#)]IV8a(FKqA`@E).iZA006i#a=r<?Y'?GFm/Eo@g;IA/]uN4;E+;TTU@Z[T%N#^a$am5[6j\
%*Z,/a@6Gs5pspm#CIW/5PY0Ji";-]R8X0%G+]6<oY8?S0OW6q0jBH0J>Oq>p'8TBQ",-kLeg0\"Xef,\"3dI[:oRW`YUEN)Q\5C%
%I/j:P?1*LCiP5eo0r*`[7Ood4c8ao.'`SSRl;gcM.O/_j,gVSAY5WXd,aLMn?3%LPPb8thV&SHj,g$HA.5RZjrPHj:.'\ad'_nq$
%F<`Jk`#is!;ot_=gerrS&SpWd%)#9ReWmP*M#q\uQg8.F+;Sc+EmKoo:W*:p(GbY#mu!YmW"bf^,adR=O[?^&;Mj00@1dR7R,NG#
%@hrYS-ZsB<GVI22,J"]+,p]u5S]i?3QsWD?LpCc"BD<2lQ1F>m:+^^oW[n9@_*G'#_R+t2gj#*M1qXt7lM/UN<K+!,_'#<eV[EVU
%[H:2"D,p[:g3/(CLe1*hU(!J5O#$N#PInT,"G%L*c6_t]Q9k\XA5U0`L)cmc!n\),M^/1YX^[a;A;DO[S^=far9[4iFAu7Xe6rcl
%=d(NUT"OW&CD_3smLZn;Z/&)qi4TZ^%:'YpZ?U7\,UEK@T`M8qgqbO6;OD_rZa:.O&+ItA&c?^:.?HWGqfeL,(;U-fF88O%GJt+c
%JYcYd#_1?T6pb_.1+f8;QmdVG:Li*"U@BBk7B-)_<rYsQl-c\[3WmeKo-Ojo#$Flj$Fr,eb;^bdjjTVmI-m=gk8T?-_",.ehfh]B
%gkV,b>(7/rgDOq2<HD7krfF&cf"Kd>FrYOq.#YYKK:t+\-]1%/b\jO63)'nOit*QFb"?g;C;Rt>+tm^P&fO5/7MZrH%+c@`Q,*`F
%5hG?N=oYWBImg,l1b\B@<[3C'3X+.b&9H)ehT(uercU5\I9`n:NE;6j,aJ+3f#Q`IRoS8gLR73Q;$:hO;ftNH_J,:<E(F$d`Ru^!
%$Wm"uCRo2SFCBb7^+"FgW.iCdoNKf!H(>UK835F1(d/7BTk^0?7IhdW(p<Oe+i\B4*(j@7Ontf=,rLlmCE7k'"C`LfKtPoXBSu>&
%f10*p"t'i<qr*u'k\g9jf1c)CJgCgrGU%a[(9C29OGkF&F!$X`(aZ+`jkQ-:#&AjV*Qj5?F6'9#joL>R\J?/&!'Z*:9p+mgBRR;S
%,WJ2j(W8UY=-TJ+qIIDX,n3b'm!rlQ+NY6VP97GkC"-^7>QIQdNl;&up-U<fi7/`.h6j+8IR.mo6+RWeN\3a)q.#3"`_@Vf]?j8C
%F3>uKaDi56X?U_kbXlEN8O"I0Q<Hb?"5uSI#26jr^I_J6pm=]Q<W5<C=lB'heTd!F@2e,s.O5((Do!`T4GSLo!0XOOU(t0,>M'C0
%!2Bu#@(p.`Vr@rt9mq?W4=&^]<(:t\$qV$/S-ZE4_C"jKd'6LU?P#KA4cLGa?+u++@M7<fQ5nQWOSTjb4%RdL''R/6k4>deF:Vm;
%ed*26%.<-!B-!/0Bemmke6:9hD\8U??!RkH+4O,i'aGNp'"B=Va&d=NL-b':PTd4=XPuMF'RZ=5^RM/>XH^`9WY-T]D3";_-As"1
%NX+-bUpkGl7$*];[=e!A&rZZRN8K0p:$cGiZhk;X(V)?+Cd8:u/T)BL#"g'QPWL+pGTV['#ejt8&/e";@2[89,S:UBX_ZK?CXH>Z
%&p(:M91j%fX<_U[<p#'7XEoBZ<n&g^dNgm_S42ML^iG#DLWu!`W!EB;Uf`8M7jJm'L+J7gdn[ba*.sKKcVf.C(7FeZW00<5frTne
%'&#-:-sT3;Xq5X<<<")o3b#+I=DEmq-2=VXL!QI*c,u*_E-S0qI?*-Aa!1s)i=d:Y,rT@tm,EWn:d@U,8B"TuKB`J+65%Cu6-^m8
%(IVq"3G'_=[R1H8"V*fG$tB*>(C:P^)Hn=%qip?9"X+^^9+1!1OKSu5*>409gL&Zor"bWAei,6U3FK^BV=H3)KNXJ79A&V:J*?0'
%/VmUU?U>XQ#n>R1Os[a_KU!@.SIs1HK\WHT!m3]k'tPLmOh2-JGnuMkN(c3"[aP1@fuc[HEk.%mK0m)`3Xnr70LcMG\q%0l04DP?
%Lic*7nMDY7gemb]g`6de=1LUm:^JAaRE>o$X&3h)XTLOJk/jPGEgSOT9bX1=0Zg:qj_n(T](0L3pn`8U1$0(0n8@83`3lacRq,@c
%^pFO0auW-sE#&?U,]ZqM[@04ApF;cKb!MGcWoPeQ"HRf'2Y)BgWeoZ`T=_%uVjqcB&H[Xk2+D2XcPRXe?5FVWp<!B]6gB@\4,aDk
%-m_U&b.P]rARm2DC/[;dW]7Ym^hkO]aTr_]imLHuSPq&>O<LJr.j"ei(6VOgB[J%MlBeAK<#4:@8hnWH6:/QJ:$28NO;,S!>*2a5
%Wtk:E"h2U+RoV<p'(fNS,c0ShU%Q%f>KF%BI+Y7:X\uCIb)a>D;c.=p)iQZ-C\LgPpNP1L"cZSLD'IF)Z5O0m[`Z-P\C$)mc+>`D
%*(Vu=NWb(cl<je>E"r^8<-:+pWTaB^FJ1Zs^BL7LBH[cn2[Zp>.``U@Dg>:j,:o*N#K1>aSQU:I2#sl,GglR].Bd0kUSQa>nLC?%
%S^:JA;nX[d349E1h$<S89iMPfU15m>rY2h%VM)+Y&%M;RljoAD1^P80$YjrP>X]K[ojLE$gqAj<-[\]ZG(_FrH3?lu.VEEHlLOhV
%4qcI'0)q.=S9&@@<6qDp23`>;9[!YgQ+)k_"_i_IU%DujRKhAR-&:NSQ*YYa=";)[(tcou'BEJ5>)8\JL<S,Li^9GhYtKpb)RbNe
%U)al^;ec85E`L\\WJje%:E5lCXm&UlUT(G#,I'!d<_Fns(6MLRS]-/VA]?6`p4ZMOC0B-q'Au@&7om)9\?s00c(#K$<@Z+)*J]p=
%_Guck.u685WG=ru7YG_^(_nNSl_2kofj]1eYV%%-GIaB;=qdgn[LR<#`,'*#F[)F"*$UAncPP:]rLEJsc!)''>==E`i\QknXkP^s
%Od@/3r44$n'Z._m=@nAU3C6IE>S]$K[!m$i9aSVGcqR43'e19tB/GK;b?U)Z*Q#F,'t6=AY*>hbRD3ep$[WEpMecbh[_2.AE]@&0
%[Xf"O<g]RlVbL_bXOOS<*^KQ,VGZk*okJH;lE%ldE>q_$c7V+O+8cFr%5]7o^",9uCb"Wo]oklF[jgc`P]I"NL*:S__)ci5_qq3b
%78Ou&Etr5`_5mk6K)+UPBI#:orkZ@3c1_<=7ou!fr,WIQ&no%!kY\H*$!gsn"/Ig:<,@N,M(OY[0=\23"9fCoQXGIFF_S1h?tsCE
%0[;B5r57_8EJ,-Cn(9q4Mdm*<,=YmeY03Wf-UGJ/?$C328T>L!KoZ\C/$o)tWf71g:6U3$-D5mnJ6+6YIE>OI,leg>g0uI,g1:tN
%5`!kOjS;qX,po)s\Wfjcoca-rWot#kNCP@SQdQIcDVEj)N!pZ/)X!2DE$_Vn6RIdHq*KMAFJs8E/-"J^EX?%4W6@1G,;r4]n@i=?
%+W@'%eLhV@Z,7Wppj.59Oea0*O"gE)*'5OtZpQbpCmSFB=!@;O<eYJ+KrheCO2X=XWS2kq's`H%3n"r!6np2dAP`V!#S/)E,Kg<j
%;**,IkbLJPjXDg&bUoSF=ZHXE4OSX3NgX.Y8==u[)0sYoV:[N27I20>;Q1Y3M8XXkmcf?t!H\tkBjT"SaH*:F;]O@16l^#`s+d-J
%)1n6*&t0hH!f9G]L:$DjP>F=l,8U6niWEaJXnUbO^LRY8A0f0X%]qHO\1m"7K3^Fcf"f45R/(rB/;0mPQ"a_IRBNY*9XJ`S7&BMe
%3&c*@fZ]!Mrr?Ms\D\8s:j@:[[=L$/s$r$9$m#t,a^hUXDAQb^C!<%u9QjoJ5&rX4$FECAr!2@&nkMn=7@6QNCLfN&&VIh_&2V?R
%\N31E8enZ60ujVM6hSrE8Y]Q*C2k2=-^f-p(s5`^4EkDl,e!5q5I%^&A1lmLC%GeoVTO5U#%#/l'5KC84fbnhg26$Yk?W'D=\lIV
%rYF/od"cTh9K>j=A,!g56rFZ1<JkbChV(DpX^lijKk]98i5\98"t^HIYirIPkqdRL?oXG*Hm'd"^4Y"P5[#X'<A$L)=B]Ye&4ZUZ
%1e`q-nYYF3Tan<J3c(S.k(Ei*\pS'm!u<4YnkHZ2d4BTnH/aaO(bp3s/><rB%g!*V0ht^kCr=?i:#dPa0q$=5)I3`\,R/Os@&OcO
%pFai#r9[$C]d.#uQ\:C/C63W[jr8*YT?X!GQB$Z8J+u='I*jhu<:"#6U=paOZUi\rC3R:UMIP]RoLacF8:_#9Ccc-a2k<J&L,><<
%PYY_\Q_I$A,[]"kC,'rA(2^X0=gl]0;`R3KpeYnbEb0$diki%JKe^I_TJUP?Ff1lfCG'41#ko%HRXneN*4I+!\5g>\]"Ou!ClV4l
%OLQqNfitKmmDHAp".Rgo\o!$Bm%PRU?o'SH^']bg:RA/P9#J-"&E1(6i)9R*'#d]OKGJdq5TMtk]Y#pLQ?I.PPkuk8.it1OVM\/^
%n-%OS-Sj<lT"8_)g6Wc1moR+/471Ao2>qgto=s8arnIHDnSJ5h2o+h,of3!Ghu7Qlm6=s-qS+ZLIpB;Zc[Yc^J,K'.ci<g5Y(-B,
%@Gbm);mo!n),e9k0!Ch.oo=L)kf/_/Donc=6>=2bl1\EkgrSq4XDdSDIkU288(/D6L]Tr`'X'ugGHg@kOAlAh^98`>G%/pT9VH\!
%_t7cf:kNFR]bW$pNU\."];TIl+6fOV-6N4q-GH8)!N1SrkR0t2MhMjP2X!YP>,@)T@!'=opZV*BKO,h'Kkfm.)@>b6?"L7q8sKmC
%(lU?joY]mJ:*-n:?pW(shrXXE"N=IGG]%itM790?>VBe>'GBH>[EfqR?MNh-^&;*b`[2t=U0m_2r<F#0G02*e<\O`MZj_]*ouCk#
%Tcrt-$t8f*O[*$b%]L/%f<D\WV90%SB/h?#R?0)?mt6Up-h)H`@g>F!?btrVXT@p1OB3KU6N7"7LoWSe0;'./B?9Aos"Xp.+fTql
%i_83jZ#iNVH7fK5^VIn'd>r1ddQmu%%U([&hqIu+S42uih:?_cFH[p]Fr(\(DI'PUp9nl/3eami5ZXiq.AQc%+hk;bZcs>*Z5jl+
%9KP>iARMn$?M3Mjg=E'A,H"0+5%2#18Q`ah%31@!>8e4(rQ($7NCSh,-,^`9R-hY5PASatqq0-?/q;+"m]X4rn7<u2'4pB>j44%a
%!`l:l"N#7-eGJT!_k`PM07p?pA*G^moB@bMIlQa#qbS"3ja8d:Q@8uI(+hs+ihWtf.hgjQ`;-!-^*57uPmHqc1m3`,l.YdP.<>MN
%on6"qao.?,:]Y"O703Jk@R1)9UWb^M7G.Sn)H?h]i\?Mu*BIiMGZ^4jZ'+-G@Mo9dc$GT-+0\;-d^E4rQQUp!8JYgp]6=ha;c^t,
%.L]22C!g;kR[1=-QuQ"[,"&XFl7*"Xg0c]%EVt)7Tlln\I\(bG3%PWrIGSKdY,3bE@G%_khcqV;0-m>T-!p_OZj>7u<fl>JJi!lQ
%i>Z')LY>)0a;.&;YN6GuUJ1'aUB*2R$>pJRoZbH='0!+&r&dI,'mq&]1r?4_-dCR6AdV,GEX-lLOicc8id[#oECbn#dQ@($M(ch&
%'7EEl9EOnYh_4AE3G$834-!nK@F;0i/U^.V7U@M7+Ml5f$HiU[11&U*FQa$Z&Qqt3&9R*umI3WSk.L#uO&i.2J=g(G8@Zr8d1G4\
%6f3Q=90oEhWGTL-TNrlNdBQ5"(<s#j_\t<2]8A;CPHltc.Uh5qU/b>a4u[HE9u^'+]6B6lnF(k?[/FQj^oGF)oi[cb&f7%Xiu$"N
%FU7(c$40m1RnH;N3sel7%PNu!.bEi+'DIH58\?@-n7I)$JS@Pt%pm*8PTG*-Rm)&k/iO?T&08Y&\qHk##,hmbESjg$MB+kK]VU6p
%UEqTn[qC%pk4(L?Ql24Qn^LILGn:UsMm<:dmBgAn^S@LQUM>Y0h^b)V+T;9[APTc)#,PqFJa)pVd8t:TDAsaPBaoo*O3rN(G14&m
%]!OH,[+Ts/NkTuX<K%HWT9F_h;,shm&R+2@S;K"QX9r!:2;qH!k=/Y<Zt'u?eY_\Zf<O8<+YiG[ADr5O&u(Zq#78Q/BS_?mZ\Zrd
%76)l%N63Rq56kf4D*O5]Q(_$^&o+unhBldfY!m=9,YU@8>A2p>aMd^Ye+c0n9QEFC[E7o1Ca)b218a(T(oHUAN$LV;MNm(Z)S+kZ
%MlLmHlSSeg'PGbDPr-1O,JC12<CpX6e(N?tM]a?-2O<G2+#ciR@R*57n1>,2-KGj$l!IPaplmG'85KN-_L1!D<#<=1Qf<@5oNMAL
%a^^ij>pR`VIfdaT4Z2=oK!%\2Yr%ocS?r5"jt2;2@E'/`Jr3@3gefbFTU!Zf/7K$f/g->d0NISi9#P0bN,NJ_!Qpb6A@@N:<+470
%oL^K>*i<KR3]0fTGlp'=`%Db]C.a//#:6<1)NRjhSZ9<p0HiIi?h.,ao;KX.H:QkH(>'=^IF[!/BT`Yk4G2^FI*<<50^a-^M3-7K
%<s9&*P467%Kp:=59)oUnrmH-ldii'h5IRsgEMH0SZh:I>&\qq$<8A#/ZG#np)AY]-O1H_3XYA%rRh\lp2kX(.5&5+&aaY?]*1CQQ
%:HpRe<+jV<Siq?Vk6rs"S>V>d'HH$fD6jV8RY+:aW3SY417+YE]1T#)kO:D#;n/E"Qu9ZO#ebbDC?N8].<HHPCWJU/NkS1G98dUr
%<U(,N_6iSpiTT([[b0gWPWKh_.X$'-XU3P2n6H[!0"P?R<`8?@)N*<CbEo<Mo.<D'R9EL1OflnTKQF5=]V+-iMNIOTmcFa^@-IUu
%3kG,<oNQ69qGR#2YS>s@TZJr7JhEh8M@7`mF,VcJ#]\Ke$:l6Fq@Ogi;5Hgj4iiM:N6ef=,t,NE,ADaa%SbeRDqi6`R6S<q;_to/
%+,itIl^kf74p9@e4m%24MhGQ!;![#7%#pLF(P*I+Wa=3sBr(#6N<c-oNFR6>5\W%f$BO*l=fM,+?.`H6d3/'+Umoq#HSBT[?MEgT
%Mt%CIB&p8XK[+Jc:o5L"#>,4;9GuDA1?0>-p*Ze]^5H%+`VT!R*ZZbD#SY9rM%,;^?_1a-UHhLf!Y=QVFhuM?oHc^RVbIgnM#-Uo
%3J_P2f#JnUT2.@`81b*;I\[e7cIgq%$aGEdBp5[R2(5IJBGW\L?TKZoqK>SCrJ&9^h].3K&UdllJQ=hBaZme0Lbs!LK-HZ@/Q1(M
%5DS_WgB4COYWto,+4TruW$Y+Ae0Wn#%^O>%7O3F#@G5$#qQ6\g2.*geNAt2!/7"<KfshXANe#+q5Gk\],#!oj(CBUPhp3L(?d]JU
%(!;/bTDVa8W.!qM8OuEf-^LP;\V%>\Mp2$[S.kJZjp,CROHI?<2NPCR"B<e'To]#a'ud^bV4SC5cXj)8&d+1<g*W'"c&],#Kt`EJ
%T$se)2nr['ntPKdlUfO]<HQ%17W[0*3`o,8e9s]-,Xoi8^7kkM@9$3]]+i(F\e/f,OsC"ZDl\6Ja=IQ6U@@=i]0EnR<cK6?$$ZQe
%6>&E6O4OAE:!);f+M^s6\*)'qpdpK%56u!5ajNQh9D[oee:_l:9-!PX\l<?D^\nUV&f\0/<H<U/l-?@@TG@6`QbE+rM'mVuW,I0)
%0M5=%-Kukhh@:LR[^<jOHK00d]O.qnie2'1i?G$_2Hhl$VK$IYOFG^W+B#65[E1u4)<\-D!IF@cl@$QVKe[8\[%ogje/F$\6D9,W
%Jm@LcRqcOl&tt[!0,t!Y^JuWN!"je"cs2''+SJ\30S.HKN`RC\pLsA\MYs-PhD0R3GD`SMl)+feNKb(IVCiQP/_,!r&np<pJ,P,8
%Nd2o]IU0]ZP*ao.R7:P+AMGc'5g^$BnE=_XJ0@qH-1BU08*+,uS1I3[kifcq^NB=?p-Tad!4i<MnTPJ;Ah+iib(gSl746\i7c;iC
%s%rttn%8B="_K4gk?#>Jn;@(]IN*O9#jV.>P&Ju.qT?h1[18&djkg,?ac2GjKinihKlJU\@:-U:lO"!JX9pHhA#35DB3UC#=,(\h
%EXGT?G"\`)TbgY+8o^1QI@mT&%q]O_"K)/,Z+`E6rLu8IL'+aK]>i],j:Op5O_k5n!Rg-heMDkJK6qW7>0G$p_6!&qHjWN[#Dbo=
%iNt3%Am5i#$fm'IC/N;dTtO-<+e^WKCMMWQ("OHuIr04FFKkm=h<u]]RrKh_W=j=N_`3t_)81Ze!e_-*/if'bdVjmf)E*nVRK^@s
%G=RkF.&H0cTfW3"4e,LU4I+H8)6]`N-qpAf,e_^Ro$hC*OI2eMNkc.E554^;"Z`G@Rf[D(2sDUBXId_M"G*J`c'D<WS^qOs5n5(%
%Vn*q2<jj2>W%r)HG&S7Tb8;`E%&nk&5JV-kc96^`"'5*IA&uToP.t$RA>MtbehPbNhZ>-=?e%%1$eU/aFp1`@B-XH!F5gc9,?k4:
%2A\bjd`>1M*p]7>JleME.`[^/r&]*3%<i;ZQD+;*D81[G3g"W^c9'PC,?$UaQ7k>PV6Z.=(l%RqG4Op/?t5bY:Ra.t5.fIg@klsK
%#!)EBc\]2,S-<paa7R4-B5=+cZfRAcE+#F]%r`L?/*2TdC+XAqE_6r@AXfHp<3(<5=(L\tgPQF-hGhhIqKQ"X#2>YYdjs)o"WL&c
%2mIs<19/=IA)Q(qm$N>H91UJj$+.6t:TJ<P02Q>i#o'5E[_Hf+6;o1m=35da%p?$UC6otl,!A,mc_BVb6R&j#Rm:oDVTsru-oEkI
%D<e"Z:u2IWTK$i32^WmY$mL1A[bOi`Rsqt#"QoS/QKASIXo_@X<QQSL"Bm^\B%j)LkM^_cikPfJC0jD<HE't`Dp0+9!b(Ih/^bG3
%#p(EbReW?R6d?(f_S:eLXSr]U^[[Rq`uWl-OHA-r59e2f.k"D@.EFI08KKH6M_'D3ZM=GCiF2BcON1fYLU]sJ,G#;YBcMlsW;Kl8
%0EWN)<#]/_D3N[eHiJ3('"VNu5CItfPoaaYJT!;oBOG48lo/#Y_n&HW%jNi67V"qYo!j=OiCp[jagkWR^Ks8fO8Zdh'<!ePRag4d
%$ZNVaP1D)[O#>Z+RV$udRf\CC8>)PCktQ>ZL_%MB8F<_'U?VBO7h>4.+T$/nF[&.!LkE,,0F^c0![DJr\cu=sXos6U#sE?U<?PuU
%!`YXuHBh3D*WTOPd4fnu)K2g*o^ON/(\(NaDTi4]Qbb3f:1G#c"\#Ut+d@0emUhfedT33a?Ft;O/Z%R6f%[GR4cl@+X[]]!gJLd5
%g)u*r#r\b0*Uf.+F5DV/KEJ9Sae"C[;+p4r`7F;ZhXRA%F_N-up&dtSAh,%j<jdna#RBk0W%!O23:2ghMZS];:8%$0oHq2h`s:'F
%hOA(P7DnLeO8bu(jfu]rk6'5Y!7(VH/beaJ9tH)r-+A]NMPOFQ<s=c`+/!M+oI@IokPj3[9F\>KU@IrW7iu+3<EG?_:KD6sd@iWF
%["hD[o'JC<GZ`94S.[2_/fmu)Rk:+]5k!Ls-Js:I<A#>&Q&C]MWK?l<QONOaFfhbBaY#'UCj57R*\,_LBt7AChYihk,#;.IJof[P
%"/Bq;>Olb,9dS09N\msnd&U&&^m`qfmkZr789su+2Lp`q<'Fmo6!_m_jjkT?7^XRZ14XnYfWV:F(uee"5g]Lm!Af3.VUc7lodNTO
%19DX/YqZ?O=[,C'!^U`&5^-C54eL;dKS9#.!GVK4U#*',3q1+DbCI!'(<JCBQ\bG>4P6eeRJB4NY(!\L"+tamK.qd/B>,[-8*[LO
%5KJ</o0XhG;ndWFbl!Sg21H`UfiB!b'j*VWGrj1GJS+=.(USW6W;if2+JABP+^t=?TNXQLQ7*HHWIl@=dDN5Z7\cc5/d64c3aN>f
%Tu?r&D!_b[m.6nI'n;M%n54>qYZ'@OrSTBe3%"XWXqAeG.S#ZXI0"&SO&r:i5<]pMrb,=p']"oG4?=lW(I&puM+=locMK1FJL3A)
%O'eQ(=YbDs`jK0MG\dFK;Be&1lhdkn5tms5ZEVpHg>#&PA=?U/LP!BLpC!@;I_*5T'hh>ZT>,uq6HBr/d#-%6,j2)eo`Z"<ac_&Z
%pX\mP.j,29%=O\LfS/#DMnama??Ipr4/EJ"apV%/Co#R!@kg];e'13nLE.;;+-4[RkNIqNcL/9g=K00ETr*;-"En4@gm`"T9rQl>
%o[h;5g4Z.>@'e#[>mLj@>:p_b<dJ"2GHH4Y*c&JOUi82iESMg.G.oUf<69Q.!pH**Po%5)li+EcZ!PKL<']d$4!1b;gg3@c@mX;T
%DJG>+\X@s:Y%+kF!pXts!l/8oKETk@X+]&Xe6\\[&7CaA:as:a8'f=qRRp)6Gt`E[Fjljee&I*'B:4n%1;:*LH-L*HR%%eK6'b>B
%LupQdo<qXB_6Ss1+Z'Z#l_0Ckh3Z.dF8OCTf!`?G#PKTh9bt9soV6CB<$_8s<R,EbqiU<]#o)eI2pC]0kHdU1g,p^kConjmEm*V"
%8LpkGO^JEe/tjp^ZcgXW0(`9#;qHGD;jAo]j`=.[mGb,E\(YtYB%[1$.N=a,@_BdYg&h[TB*-'#3Lc6_q7$kIm4:oo!?,.<KM?b$
%r()Rhe2`Z,<c:h>$1rshVN3p'e5F>oTj,t.fE/9?NRl^9@\.A)q(^<ejG%-c'U);CcigpjLm@c;]cPm+q6rTa<gl;DLP%Rn/C)$k
%?drL<K<NlU<'$t9T._@]<%]:\dLr8dBg=RD/0Jftl&'9HBE37?9tZh<Hs,IC7o_</),34e<W^G%4HfT0_.ZaT["!*Ig-"3h*hd6\
%jWJCdd69;tl*;/md#<#>*J(fikS[&-U/>UMGt[^p`'i9oq(H4rJ2RosX/cAjIYICJ"dt=UPh;hnNk>R_PV`ISHhM-g9B6s`8W9H@
%r6&4+>7==MrDt\;74Eb,;c$U5@]4HdH6MjP%iN&^0`;t'^:*T>^so1Tq(([OidsaQM"9.[l`(,?*U15+!L^U1=:7tQ__$78(6<hR
%2f4]!EV_aq(@fl9$9j\C]Y5tQ4uo).9fE''ns1))9U_u=O-s8ad/tkkbT0T$c_<Fp/.Fj@W[d\V)S@n0^,uGMi%P)rg&NJ%ahlZ+
%(>"GN"o4;LD<k]AP8hB+S->Usp4ob/:i2^-GqI9?cXON<m:>t+bL_Ifh;j^_qUJWU)^5\j$"Ek%+n\?95.!ofQjJIUR"""HA,RD*
%Fo*m:VIt\%^BG>;l!`+*+ol0F$Z!h2:`&QC6#[SuEYYRbFb6OCPlu6JSL%Dt"qJ@cjX)gGI"Pu*?Q9>b7TiEW5@da#V5bZ\5>LMU
%m@agmR@-<'/=<BFCpWcQfSs:3XR5`6\[O]%@,a4a.o:+Va6dP=6cc`q7PQ3AKcA<38:/fT44?(C\)WSdN]]5K$Dh&)3T7#Ap8i03
%M?T,-=V)qn1Y.@)>j<(FogbB2qdL4#pV.<ha#=/5m7Es/42&bQA)`+q!i]K!=>\i?p#ogF0$j#(V=&!r(7,P0>/t*-:X+`]GdaEL
%a^[3-;t?sbEdB*0=(6K@/[7D<^(R2Lp/j0.?M3OBMe2mX8uJ;"2Wl6;B9j4Xl07ab#%2Mq@t7',WtB8.kNNd*>9I<"]F,K#\"@a3
%n:3$r\)k&\Tt##OeDh3#/`c^8(7KV?7@+7rqWK$Qd_X?"))J/6Vln]_LQKo4>a]4.)]Lh:jqDEF99\lI]diWH4gj2a`X6Q_R>\@2
%*t/7F8+=q7BPot?N299<<gbrq_n@Jt>ZbT#VD1FMe/5,S20RrDrjZC/TA>LJgFW58hqlRe:")<'f$o.#"C$G1Bn$.tg;ggoO.reX
%l_DL0f\oW<:U*,D@-Cgh)b7Kh7<mj39g?ZW%X/_6KOab'LhPFd!*ftGs(bs_CJ!@C(KSWDr#&L%5:IrOL8h&!I+?)OEhjoc3Ga-i
%e8`Z`6t.1G/8[N%EQ`fUNHU9.Z_4hXgCuc*mZ,"FfTIjZS,]eJ^MY!!GC*YPoSgr+(:4a$^[W1*rgs)VC^0_/Ft?L29UVp(pa7JL
%iI^W<Rj#K#'&!f#gFZ&BD.X<blRgLA1kGm=>as>nGp\Lp2DF?A(R0?SZ/uc;#Uu?0q2S)LEfX5+9.j%?)A8:D>^U%aOXbl4IQ:3q
%oQB@.`Y>DloJ2ctm)JdhL6'>c2kt]T72+I<[-<s?rH[44>-&u4L0?/MU*c?fVBtZC0.hI[on!ms4H!ob-<*qieGG)A3aHb<:n*e`
%GHpEDG0)!.\-?7V95D`$<,eM"RqGD"(M7MOX-%8.Yo)6K)E2o/nl$r_HWqPma_!g2-UTVb)7=UH?S%X?rbQ75Cu;c+-NN`#W/RL\
%AdAi_]J*9,M9=C(#jFd+]^U_\,Cdl]fLl%Gf=j?`e#Ni?b;r`?ZGLsfKgDbf,_9B6-p2_Np`0eW$"%X8ikEged;MJe0X=s3HN&re
%2]UH&db=/'DHXX2*Hb<&$IVsQGSsgmAq97!R+K9MA2NPe,8k]>04>OM8nS>ATH9J=()-]$NIeH%i61<2f"%@n)P>UaL"PtO*q;Y8
%2uf98gS%(dnAh5g:d*=nB#-/J&1VIdjmrjs67%Dm*,7&'Yo[Wd8r),Pb+Y+D44I*rpO!rqLeM]I6Oi6]%lGe]\K#?,1?sofXb%aD
%4k*:N`Fi@L23sDMS8'1K099&6<Y&`H;m"Ub?`F_:,pi=SjStOY;``Mb7s:mq-SqB0Uj.BZC'h:H%B[c*8l#&!5Lg;d^?CgV]ID?R
%Whju4VqSI'Dl6bJb>aX*#u)?ZZ2JanhpE^Pn:nQUT&;VH@L34*k<149U\P)*<c\0Kc0^BI]V?XO(/T\7"^,r-aWN:_*a't4K#TqX
%O5+5RFHX2jPN['j"Y)-c%Wu4!nd(hK9OWX9XDWJFVCpGp+6eSa,5f9K/uTtsSo]@E=!0ESL\c3>nL2aHpsUmhmqC!0$Ik6"C4q7B
%>#?TJ:57E/1Yk"^_)(1.iLi^:_eqbSSq3-QeAAZ)KBO=u;ZicA4cDTZ$Q2VU8'CWIX_1D,3n`r0YSn3+XEg;[M.tk6#@e6+([3YW
%\(LmID7t5._16*/o\BE-`r$+i,W\X<A<`V&*t*QLN*p#ZN!3cPgS,+O@i)_Cjjjnir9+RH"CsEF#iGjNM=\H^n\PRNAALmf<mKJD
%!8:,^O7_Dt/qp\Dk0_R!:3M-UlJo6"cA]cCn<&0Nh@2]/AT$$KC!ejWeaT&D\8]dG\.]))J@NlEJJ!H#F>o2O+ZP##.72i3dH#3%
%nk250P0DD\%hp4n6mEOD=r=Ri%Ys.8O'ref?VlNi=S2MXW;1^C,c?lj?Pc9E1V,a%Z[%Tik6sd=:.BXYn@l1t")t?=ft/g1L1iO+
%Imu@-$tDt+DRcSY*qu//NpCkIjggaeTfm`TKWJ4MWRekTFnRCB#@ACu%Fg1O_4*$p;Iac''YudI2=k9=XN7t'BGZn.7apFaU!O$?
%^S]cODV]Pod6VKE[Z-eUno$rS'F%fr69CUda/cT3_ZQb5_3)SBR;rK[DT.(N#.iRBTh/l'9N`UAgFYJJ4.94+[ArM?--#->RN$-T
%>g`!-.TqVAHN^aY0X+BFO#,l9[G+;I6`]Ha06=A!`>Fe05g*h%,euP,jp.cVjeeK*_7]/nf[6RVXe3dh<Oi<J.7Q-kL6=tLTpgpp
%f/5dHWMlMTkdW-b82E8l"J+<S9h0OJK@dMi.MO,J'E;95V\h^[",ec9%geC3Ar^V<issQ,noNO6r&3kg@OtYYTe)&PBoI([2$01E
%j8>n307DBGX1Di/^2_agnDWDV3s[N`L&^oOH9Y42&tTmkoq.o>8Bi%8RoGR5dAH7U"T<QQ[/=dY=cnf9=Af.6ad%FO>Bed6OEj=N
%Z9Hp)5E'gdKEU[27[:Q\/@cY(Ka6rFpRTV#;l_>gST&;g8.#!5jqs15*<H84W?dPj/,80Y5tb#"3%tDtN%0GdX,Qf'8;Ru?CHSip
%l!+Aq+JB1>gd^8tBRR+P,VW=optP'=hFS30o!nFFq#=UI(NiXA^,U4Uc]lW6AI)VT[idVp19?D(#h4&Va\l2#Jb4W_/gnYV2n]'Y
%9%/$S6Wm/8W,1mHSOih]C6B7X3.EFP94.AUWlbYGHJ[`d55_^'pDc8j;`S;-5G2@/`OrQ$Q2gE_9<kUB'"ZO,1%lZB,\kO_=>)Go
%3fMZtoH]C:me/biDJ*dbR76@]>p/mP-IdFG810cbQ\o.PVX1k:FW;i"6!URk/925YhP\[W6-8B&T]1)7W#Ro82[-qMT476dl]HVd
%g`H2"Fh7"1B-nq&.loc:o]8hLN1ODA`9GF'MA4U.7j*b&_[dB,lAu@'nbs8DQYSq4jbhKMRsAG]jZ6-QUWKg!k'C\L4g#T1*_Gt5
%-7F.E'5AT?1it@`cXb-(0n1SlDgH@0/+t>QY01"`fa%6A&lk5pF_pI<*`lARX8`GV"+#kV")[Q[Zjb;;[LD@U\.!;g7@+%dKpT&%
%O8(IaFPd/Dd$%[e=b`(XR8C5,?dLCG/:TT!&4glQGqgr8(2&C$4p0'No)+;#j4LH,AfU(nedVM*#+M=>[qN*1_rf^"/qod5$e84F
%SHOC>"mTaD^.WHsF98-uMjRQ9;730pG[HIfP]^]+dAO0h-m)Fs.d'I;c46QCCc\VkH0MTtRD/"7=ZrhTldb.n:OCOYWbFs$A4jUd
%_qpHTr?0YBrM(NonjcJ7(*sG6TPj/>kinFGTb]s!`-RIkTDA9g[$gS.>qmKRCnpQo#pb4M"W/dIeO%ShTG6E$TS@\7,N`,!22$DV
%T!4?hjUZ6HCc<9'rCdtl-dkS"9NfT\)tlITPMCG2i0)3\QLXF(MC(Br(?a\;7EKR8Oip20cEUVN/]1=YqST'qm,upDn$FFCckq(n
%/L]EiJF$mC<b=VZQ0?'tYH:B0du2*0M:"eQ6M.JX.E["Q!k"d!9L<TVB"pk9TFuWtKNKA;@:^)P<9#`'Mo=CLi%*uL*C2RQ#>&&b
%YB?eojmWJ4gW1cooB)9S4D$4E7rTr(Qm"/]kf#3Kf77_m+f388kmjH>V-Y[jh[[u39+TV)oQ=f%8hc$m>!;.%?t;E>l%EIiYHM_!
%*8A+l5"bq(8]u<XB2,@1Dp^Cq^1@"n#8n-(iS0.Nk/bjZ.DANTmp+?CTl?PD^'Qru^i,eRfOtR#\+M.[4jbMeIk\;Yi]YWYk@G`J
%)qfnBX6RI*f\4(T`E]]C/TU)NRH/@r%"7B!mQH-Y!qndEMtq/`o,MMV91*(FOQeTWqiD*j'Gu.`:8rrO6?H&hp_\n5E6;Lq@+jRD
%[l@1HYWCkMl*<5,++GsT($k_/N1Q%]IdT+4$Aa0^C.H//.==R?UK.C]8@M3E`p895'DK=#cLW`_<A#/()F%P@8StQ>Sj09;asDs:
%nctp'rjG=8?]55kVL=V>\F-?;7%dg&l75UAL;n`s:PqgSX[2'q%t<6?W-N]nTsjYID\J$)"HB(Q?VmGp:XH6YomdO)S>&3iBc-]K
%W)1*Y'hp/8m,X]AF=?n]osIOTDhrSt/9?*<UZct:81<aVkdiqeH,!;-=4h@\;3(sAU)o?d54sn%;:!SiH_ZnH5gf.*'(hq&8@H2_
%&&oS`V5Sl=As+W[X-b_[bl=eY=,M=29'B&:X/M!r-Rn<qd5FSTd!,uQWm7qIe>HFe5uIYua\-RZWbh=`3bUod)(k8)!P29oK`?YL
%^K-pPYX>_.=M'3k"u@j-4)gCgLSAkqb&pRCjp,PRgC;l5g^,)P-ilBQ@@0o4n]@rk,ph1>3h>E6.<E6WLMG'5nQ_$2YHGnGY'9UN
%,HV/W?N!'Rd@uq\l?S_0+jHE's0@iofq9FdaJ)s4cc(:RgCdKaB!e;F6D_.k@C8cNX`bZ,NRPq6I`\X^?'VP.?_?o3Q>3@K;aVJP
%;@SmV%klrV^OO/TRi7@)+gH5CDCVDE<BrjGib6*%c/Y\r#4Y89c(9_8(t*Wc*$r&U4.>%,V+aqh4.9@hDg4dM78Bs-,H"YVk4IIS
%j`,GoKon;=*T-2.UP75A.@L9!l#++=6`5H0(5V'YdEnj'h/g2G224lr,H'pRXUMLNWRYQI6Goe21A&DMbsSOm4fA7e+^qJn/pE1S
%M]".cUp:<t8e$@lKpH(W_+i0;A\AY<XP5P_TqnIDmg4fBqiS`?J[&fgHB\(T^6]'JR["qQ%f+kF55s>l?us^rU+Fp<MF8?\Al4E=
%p7pn5K$04JgV1"c#=IQ;m>I?q=]IIid>_p8PZAGrTtt'6>qot4$2l231lEN+I@]Hr^4)g/;6Fd3@\o)PPa80%d.7aqIK+o1,f.$<
%m(["89V48N.EVGUE[Q[a,loK9YmqG?*?)AnEbK_S6bg$.LtlpAcYW8/(fRU.Jt@:nc00GPqVjoeDh+NgMTk.bBgLrE2TL+(%Y+t!
%S3;'P6/>8O)>0+bC[2E[Y@ZA?26aNs/As#h]0obL.SkJ`In!Ogi.SA35!6ajn3NZT)b_@6L$cp6dONBR"0/=jbRF$K]<4!M3V3Pl
%*WX:g6)gMOIqh8M*u&3%p-K.m]$QEo<g+GWP$;3f&ZmgBb#u%.PHMZo6u6/e&)s,A?F59Hg7,A+EE3J6o)UAr*-Z(2Gb9gFJ[lEj
%"$Tl;Q>^/Y95_GD9.V0R-+aR<C8BDX@*CI8\`\"S.X%ER.?RZ?<FDM$f;CYS>IfD(C5#gV.T;(4\/?t`bUThagkf-XRR.c+Q0YAi
%bqa$Oj\aC!>:@F%'-OKjGMt,/"e8(W"g#=`!gG2[(95k@YdK$+0+qQ_(/_!+W[)O;e45k)0Gt'-\&AO3AMG?S=7j_/FAj`V@$U/:
%KiU\YC:kloYPqs_eWAKfNce/[nl0A@\E"/@;;Mni`MKeA\froSW9Xu]L'V]k[5CMj^4Z=Y(hl,k?N"g.(*Sli!RklKjmY9EC#O6Y
%6;0>U_":q=iED9u"@_n`2fU>N]ne.CJebTtg79q;5Al.8n%[W_0r;S0Fk%eBe'D]\YdTpPMRBX'mdLiJ"u>=YZ]g:-'f>BJYVbnX
%ga3MrgeM/VS*e]Xe%J:QYF[%!;i#g'<0hklTjbPL?bsPYPA`csee4p^Fi$=hjSN]g?ms8*NN_M=i/%Z1H6N]?`?fk=/WH%5IU>>+
%VTTm%`S[OM5p9o]H67Y8?otH!8_(tBBt6ub:%Bkp:#cq#icDPH^;S:E1U@Js:h3BgLlSGgRd4Lm]sJjES$1"F4@hu*5m[i8["+;M
%'o:!T+N9F5n^V<./;,p(9A$<]URjC&;QA:280S<S=H3Q<^IrTk9Eme^QYIj=#!oA0e]_0^!X5I1RUm'/$8l1-R-<2R3CSJa\O`B\
%$^3i:.EaVfDS']rr3q2+K?tH,[PdRVRr.JL%&.O7mHL=h81\$Pq=o^VH8a_N$6cjUR7\EI<-*eilS2<hCjUrP<6MeQR$(K;p5$iC
%*)F9iVbqNuAU?sW6[J+K!o"DXFJ&gn_LWVu.9UmsYO`QDKEF*I0%TS\/M%lXEJka#W?F*%H^F*(h;UPa;+0THA^E/]b'^)sHGa2%
%?D(AX$S&%g>E,N!-W%3qf]fc.Wl3q?&t"k^G_"<KJI4NffO>OsoV.dU.S5"k)LZ2fZ(cLiWk-ekeIIc)NhSVKh\:9Hr7RfVNLaP;
%hR4DkqUjN5C1pIO<XnCPipJR]4X$N&-d[Sgn'_)RL)rrI^s1q9!itCOS"cM.X&=W(QgLsDPeUD)bo_k3UmD"MmNcPqPcBbX9X8Br
%[)KVn`#:K:8NQuM5n>(PoY=G$`gUY#GG/%FB1cW\l+9(/TNE30<GTcb<:d0hY5,D:T'-F:J-I=ZXD0YBnmV_)o]>,^nl9]L-gMc7
%a)H'd)2/ZZ$Xs-n$/?gJYtj0t]>PrFBu(M9N>dgZGDi&(?6gRZ<NiP,NPUDWkoPbmJ.+lJc<0;rIU]MB%3p;N,SPY9"sr(nL_Sga
%fWp)"96rQl!*BdV%pQBqin2)j91p1El?&uO&4SfI1b?tshRt$IJ!e"piJ1O5&mtrO*A0!&`,KBE1tgMdd!:Fqea;A7J;](S%m<UZ
%WeE0.[PO\2B`mgRf/jD0GM;n'BZdWBf7i(]-=5V?E*Q&,T%5[j9h\-b>WB-#T&qs[4@epu2loT6pil^RQZPI.Np=YF:0_<5DMo?$
%k28T7D$.?7Gr_Ur9rY_PT[+rmpOM`9:5SO3mUNAEJ/a[Xelb6FAo#TOd]:ufo(O!eY>d6tMs4ASr[hNE\=>IahQNPskl#g08o$8B
%`ZM7Ik_(O8f$p'."\'N%;.$\6?j9eoE2YSqHLY^oaD00%#\g*;"Bh]Ilct`fr+E3?h!/b1\d6Vn?ti>@'/nV@.qi84"KBi_Bp?7&
%;49P*9eH+\aY<WIma/3_b4am+9;HF98)-`CH"fS9="`s)'f7XXa).NpF9:0+^0P<@h$<;Tj\J+56@DM"Wc*;A;Irea3aA>%oaTha
%e@4kQ&[qI\YnAd*N?S]$=Oaft@G@fr22sq.e2J(P3q)?<o>!q_nr^1lgE18lmcn"HP0fr;od[EC:u;lul<=<ap2ph-?D2i'eMi$=
%Y.f$hdk'cgC@C,hOu2AR0*g[Ho]:%(ojdoF:3X-H`K[D![S4!+Dqt^f9mpdmrbq(+!27+1VQ/&:SiB0W`4$U-HSu#h^<:$*$Cpsn
%es=(LDnWd>)RiA84R.11h$.Smm=)YMB`?Y;BgiB@?2!)S4'P",B>37U]8'8Z@u$OPolcab\6UH.=4QpNdgHl!b65uTZ;75@ZYSUO
%f%h+R>qT':m&=EPs)trkfSo^h14e;bSur\:kk/uLSO"RTU(Z*)kBLg_g?b-niqAlZpV@"-4?]Gdo+^eU8!>p[:GtsSi-&.<VIgbp
%/.NLBbXo55GL6326:@lm808=5J<(]420H-,0l%F5-oC#9.kBg>l<QMW_mCnKBdBUP(dA6fabSC-km>?9m%.QHW\N6_+K6tf;ur%/
%3Z#1lRV5biHd"L5Z+=>$:IqiIJQ!%B/;baLL]s6QVBSYWDM%FY1jqton[$t'nmr61n<X3*&m2dpP"'q*(sbIK?]P0^iU9If/RB+4
%\lZNkOs)^76jh:U);2'jPrmF_H(7ZFPWohPZ.IdBpL>M3eAr8#'q[%dLmGi(^&'ITaK$j/=a<ZjO:7)0QnaT4jrJ9K)Nkklb&)86
%`>$&(ME^1mIf\$E:ZJd+#?-iGkHEf;eW9j=C.MN1_:S(B*G/.X8P:>*a-<?l*aT;tA7,Q2TR,'@)3`2dBln/S]H!*_TXiu@^bL4p
%W^D36^0FZ.<kGIRdVX<^?%tbHFfPF46)"7+J>:]@B)8,GM?@t:P/-D43e'gEhn'U?Zm,W$DYm^>6sZM#SDZpO3i^.&>SkNc`,-iP
%HD*`LS?lfr?aB<A@8LW==l_Ts?>Z@'1QF(g2a1s$G^uG`P,s]]au=.mI8YN-:Q?4&O![]lUK:f_ZXtN_C:7H/6cAH_g9c6C72;cG
%PRLee;buC:R_ZFp@ME8lSPkQkAl+i,e0ldQq-j5tI22[Z5C+K$G5LAfML$uLY+d1<S>Z7H9G^`W8BJBj\jBu%eQmp2.eSe%)`E4+
%r=Z&8^@WaV0_)udY+f4q=>\hRL6!B&S`'@i54-edj_b-!D_$\np#R*ZRZl=BR1=RhlprHbESLb]*4GsKM_Dcd-9)NdXb5+W"]OI+
%#Q3fGb;u$8C3h6&KOg<eQVZ'D6'K;FHSSYL:^[S>3&(0aZ5.h9N0g"bdo+orPSSuV!m-/oLYZ""Oa,iih6,m`+O-S`Z-W\oB$HH4
%Xe!FQdZ%Q]]V\VU8(3_8gamd#drSr\<;s$'RU2(Fp'#cm'rI+G-<24ne2LW?qtLm79``#cml(uWQW6tS9IW6pct43J$^cBl\-Dj<
%VC':.?U<9X(6"[`'%Y&8K9%"RdVas34=pF`4f79^VCA0]PIm)R;a?0hH^Q;i;$k>Y"h]:A=!1pi/<]1ObqFut2'u%Y[)^Cn=p!tY
%D&2PIk,\]c3U:W.<&8/-eZZl!c3!5/#bFC3ku3m@$]5Is;1h*7OgNa%WQco+WB'9ZP=<fN3GY4PfUU/go<a*ZC<ejubLQ2\SDr,1
%'T*"AdW3-rC/MGj5L!=;$$0,KD8.*uYFKg8RQ&BlVAH24d2BT7/8cZoI5SFaU00CTZBSG.Bc5pE*+C7/c?`603h"K]W]=j_A2@j=
%S#*oh3=BmQ3Vd:58k9f+&u]Cj/1]>fBWAY*cqhl[[<,as/'7`;Y?DnFEoT9*nGD(j.h5@T:Efu#1ln21YE!<3VcQ\NZ-B(eK^IMp
%&SnQ*(Y`XtcMlIq6,^#5cF!MNCuVuC=h(VPeGN/SMa`^B(mT"lSPoh^dUVrRECDf:D.j4^)d3;[.H=_2H94htf[(6Z2Dc,aWPoe%
%l6HYd0u&kf0qjWTo4+9EK%5[3;FJFB_2N%6oPJgKiVN[F>8&E%4lWK=NAqE)#@H22**EC(A()ISf%/Ytl#U&2oS1<lI=Y]8m^!kS
%;)4ml:lQP5U84)e+?@&R,UPUq3@mPR*ucgdlrAUiARb`ik0g<K7Zot!L6U1=IjhlQms0"O,hC)uk+!25-'Ls3O&c=1[Dn87T_F#o
%0ro-2kr%KRn2q+ic+%g5R:ACVBO!k6Y8RXb"F/'"M`44i1)K"A^=_&XOF_8Pik9M$XD1uAeZX[.mG71qKASaAaBLED:>#%%8+K21
%a!F22,>pBO6)R\A6f6CGIS,ds\L[2LgUq4TF+h;HEL'mobcae_a>3Og?umj&1)4^ZT:dHT5g>k13!`BpAZij2L^r0slP0?VQGu[e
%,ngtoS;aJd`p77*=miR<d'87Ur^`O'd,Y_GA4htf5<]3b-N72'5f%@BO1SC$W0sVkdBIQ-Vqs+sJRn@CrtrcDV85p(\MZUb[Dc#V
%a_u&B2qk9e6\M1inN9>!QNmo*#SXBednET0Sj92RM?2mt.nJ_3fQ-2,ZQO*F6pVoRDQ)[o3<h-_#g19A6JmE\4J@%8G%3]1"l4fr
%4J>\Vag^Ndr'STG;5e+Y&A*/%QSk'6:QJ)Ao:M:p2XR#uOp@B.k66:j5nB7!O51eE0QS9pom$IX#"un6Sa>(e(8ViME6dVfVqbTg
%KOacf,p[ucdlNtsTVCL?l0urr*gqP=1EW[!1fJ_o=J/r1VXF0`8$P0gI9SsV,d+*85,HlQnX;].LN%"!4dGo@YBk:j0+RdIEBf6S
%ja'.I1[<G[IfG/9T#IXSUSSm/<a0<B@kGY8U0N_E6+'?P.J_oRi`"kYE6'b"c&T4r\9iV4"rOM);][8b6O[*)8&^t;)"P:"3>#fC
%#&]/&jUM&5,fUU3R%]<l>Z'HB/69%,cP1bMjAUfJ*$2uWcg?0flIc8kQ.>d&-(XFY?1=EU&B!ZCeO"O`_Qfu3n7`#'^q<`tnAi-+
%8sTI^5YcWm:lRMH#ps*6[BN#Ios!)eW0+MmeL_.k"Jf9n(3u:@#X-D1`ZF9i1BE\cRr]=7D($It_SB.r&D-T('1/?*3#CbKf&YM\
%gh8HnA[J9H-h2qu=VG!#ApQh&/-eFDh#YpMLn-j=(lNW9#^sZFe9dE$4El::!Y=k`Yc$4.]L\(%G82R2nGSu\m#HtW*H[3ip>&up
%F<Rfh+nR!BZ'3!Ggt]oFV05mq-K-WRD5;3kLk1/k*P\@`-INji;&=t$`8@foos-!GdCA>/UkEJ\'#HHeU3"c2ognOZadBM![p(jO
%hj"L?4)7-i:fBWFR071^aA\:!)JM"ZKdS5KXc)Y"[<n>m22;s&fh8s#ofBD(+:esYn>hkLKSI&i.I&bW*a=ejPTZ/K1HB->VVr\G
%Su1"#`]S*eN.15<Gqc,:Eg<5;R;@'AR/&%+[SfFD?)`k2`&DOs)7i35@Xag4iS($T1YF$`.8<IX=aIO;qaL=7Fma3]Ja!Ql0V9<L
%81$:14k(^qRq:(oE`iC=5!4Y&=*(ft(Lre-T:>I\MF(eb(Fag.%C@$+G])Ad%mV@_6&N21)mq9B48hA%4s76.gp6s;h=>r><cP*F
%BIJ.W1)a%7LAD@+=0:3=7bT[`XVe`RSfaWSZN2V4lp;qe+JZBL/@DR5UpkoiTP+$ACY9\NCXiYe.V*OiUFshLA4@Z;k#.MknSg!-
%gbNE?o%PeY@$^E`fcA7OOa:k27-FbF<a1/R>$F=Am.%f<[A7CcA[Wma;qp"YP_pPA1SW:W1f(S.\"S"o0rVCVcs`$3[l#L/l#/`"
%/YUS-Q@)e1/2oUdCG]l\92d%B.(:'.#`E++b@PufK=:SZD5XMEBQKio^+D>`T%G\(+7?YXAFOM+ouKOP(ls7@E^![+-nh3!Z4C(Z
%X=8m'F*SQ<M^S+.<3piPnoWa2]]\%C)0KfeTa>hce4*7-Z.s`RPNh&qIVAG<S<<YU8O5:UCA)D=>aN[kC=RV$WJQFAcfEW^-H08!
%Fr9qt?+]@N`!#GmjZUkOSXRmhbbo&+<a7MSRL-B#Z[3R6'-C+eBdKE>RuA-$Us,69lK$Sk'9eI$B2dZIc0j]@ZWQYO8iUFfgmr(9
%$XfXf+fl8PCqE$0E]<:(=LH$U@X37f(96HA_5M4g-c.T(8N8'HpZM4\UU4C$,\7$V+k)u+dtL:6IYoC"'-6]-H4$5Y+bNYW2Kg]`
%&fRm1)0s-VKhO`0*0!4AN$^C`-#AU^'eZ3E$AUS4k<_.fr]!>I!7b?R="sT%C`])@NokN\$XQ+0\6(F6;;"a;"uEA*np2TKr/iYe
%ek6NC4I4Kq**tEQ79uQ-8d'-YNQR@s.&9<Y5-h$kYr*%HFLA]l4]CHBbbIX7]M/+fqECq0,g=9dK]\EkW]\%haV^OE1Bn@?AaLi$
%d4D^dR=[q)0rk(T2_n_t"cqW26F$bB1q.B_#K/\BRI^Mh]B,%V4.;XfQgY.d7E5M]::An69V9MjW=N\u0j8G-M5;XTKCErbmZTYj
%>Wk_o`(-07jod^d;L5PoiE]&#HFYS))V$rf(;'*_]0S<826d81(j:&R65!MFG&c>`0:iBJV]+hMCeJFB$8SunW71[G')gqtRkWF4
%kn$BH*!5aiJ=#r`iK19c3[@[c#?8t#MY09f*ggD\3urKZ,`AsS6-U'jPSO>kU>CrdKLYjIUs;*-gu^l(c("5LHWr27&Hlp0`[V7t
%R65^>iYcGef$o);BaKdD(@1](HU$!Qq%?a2oGLauoFY5Y=p**t)PEd;bGpo'"RBM\X^Z$OIWP)lAu@40>&M0C?Qa(Y"m@1]QgM8]
%9N[b+K^)N3YG<,\lL`gt?@PHPEn(DU3)Xnpc'L\YN5ebbO&2"+M7UsmXKK8_Io\n\"#[,@BZs70Rg4KkLXlT<:Tq54a(?)tI9f+[
%Ts^QQKhAOI=&o*534)TTm'5>%IFk7#H9o?MkJKW?:HsPX6=X`ZkJhh^o02g-@$b@p^;lZE)QDmP/XAV'6KeF:/&NE1ff`?l06%74
%h3M;Cen-n45a*7k"`fZ)6Hu9Z\5N!=Qq%OV<F%/$Zk31`RX1\s*0B8iNZ.G$,q+&G(0!D"Ln3s^1$df1r@%gA3sQ4q'Wgg=+QtJ:
%!Ui[nl_4%?e%u(pO0dc(DXJQPXp8JUK=DrIiC5bQCq+9/$ipas5-9L,:CE<KDLE7l(;;g]le$"ZN"*35E[#r?hD^d%Js&bWU#scq
%K4cZ3l>4nFYTV,h(sed!Pdn)d"b0IGk3;dl=UkW#K&cKR%Mpd))eb@$BCZE*K9ip2?5JH7+bqhQZ6N[g![^+#jA7Zd*fHWc]5F/s
%3J:YELF%+ud3d&1Cs"K#'>K%7hW_hLcC^ofCa1p\YLRYKCt$1<!JM")[Rj1),M:+<GXL5MGcr99A)QlA[U%eT<?/#X@2nj6'b#bM
%2',0)AC;H(+-E!'JK18,PgNF8a2%FVV:@7PH'naINuGm-_O7[TjggpmZiVu/NkHJ01.r`_@(!eL1p!lg)V1jLi8l;e9E/%7QR&k9
%_P$9c_`Q5gOs'.UZED3"&Cg&FgR1VKXiL;rP:V9_B9I6s2GQ,UJ$Na<:F`j]U]uAbZnUQRWQYt#7E80F-@6V]T=<M_-/'-2)'!Il
%#"(\ALgS!IlS9:[8e!;od&M6=CF`@5K<]O"JF7[;*\?sbD:M[MeR_"io<(HDlS<;$^>ahaidG.#6&DA'-![N>5^q)3Wto<WO5;@D
%=lr!5eM/Yq3M"Ma8Z,EpBU=]CQ#rGq,I.YhE)$KeS9nIKJ>Bo9Y=hjAOmSJOnF_baS5/V4,sD!rU4DL@"kR-f^s4lE:?+sd3_r0Y
%lED?<8O$0lfafEGd$.O,rCATWcb;NORqQNJ'([A^#2+*kYU(go2`s9Fgp'MU)EKlJ.Lf@i.LV.!1/jNi;GGKE)3k=(YkeNKTn%dc
%>Sg"+YcQ3<Fcai3H)=C!RU.>uWMWg=R4B!d5,=XeI+]h_Y3A3s+IdNc_M7^0jfn:U,Y$Ht&Vc)O[comcqB3(ACq0+[CEHja2c26d
%S3u&r'oEX81ZO^R$\n<%(C/BBT;r7n&9E+,:*W2\8dfa<F..nC:3dD/[]/GkdJj82]Bq3@s5F]/>D58p1ACCdD0%QbL(Fli<h:B;
%#IeG5LV$PAH>7:A"Jad@ApcOq9[m/!B3?://]MG$D?BL[(56`/"0K2=$7,f:fZ;pf?6GS!#5VFsF#<$dV3:.6,^F0J,A_[%0f?\H
%K:eX_ge@>m$RJVL>>AhrpB?(A+=/9'6:"<VZ,HHj>cpHGKr"DfBLXGO"dMtd#s,GXeHL*aPF&RA8HReQ?HNUT7#tof:T'<K/V_&p
%rQL@FjBr$SH>l1eW4FOUQ5-R&P-,-),cbL1jO%[FK@dCq!p?qE-AU;3$0dWZ\OW3"R;HX-_Q4ic*HS%Blt%rYkX1miZ"VgXs'*lV
%93EDg6E%WbYX-_#DT^SnD7[ZUrGp@68^.p]MP[E&XNW)(ok_a.,OpCjjHurX]7N8M431\@"iuRRnmr9;q-`U5<3PLLp1d2JV@Heo
%5*ckfTl`mBG<`/Q?rN8\X64ra76l)Brg"mB;p[jj^VPP+Ff"J&i2?Cn6X-?dJ,A18b2jMK$LG.NpmVepbOi1Y<p^(e"^:uDI'Ll&
%klEaMN<;;_q@-Yorj[M&Lj->gcYK9Zl5CIV=q"RhN=/U7_Mt-$/uSkEn6cS>()4P8lbVo!n&PB'^ppd@j/Tgm<8kCu(bL`12(ihX
%%sspa>UXp#@qVh]nuaXp^[\8(AR-]<V!@Y4F<eP=X\%Ws:oIV*opOIj[Lf'Z`e;)NWE'sJ(!Bkl_\Ubk%bJ3g_aC)!A\(;fs')?R
%%''G='<E,(EucO2P@du5Y%@#ghtjrX0rr[1i3&322m.*G-tuq;L5p@i!HMM#-KTr(ZC"uh6Cu+DBn2;YnCER8SZC2?dcCdVQmXSr
%4kR%9>o"])\@3H'h@F<Jfb9n;m^L)L%Tm672_]^;]u\#O(emUeIg&X>PV3kdZ&obL?R:DekB75ME!jjkB6=T."[If4YTDGG0HW;I
%)iL=--`O\u&c!Ou"P>$iOG!>1c+Kha,:P3=M]@k,_L#p'9UhGCT!Q$]JbbZ^YS4g1h<-iKilk:\D(_VuOfJdu4Jg;oA8LH)e.NbZ
%.D3cpZ>#]1@AQMR\4AU$bA_!H8'+%51M'LrOXC4HD;HPYG4?kq?p_7WN*4QL(i2]/IaGp<^*Fj>iU;PYCcIS)Sf.BBo-4G&c&2%@
%J_n^+gc*1#O]:3@mM\Nl@BD_\h6J-oO;jC@5ILNNF%aa>JV;1XJ.b!]Lap'VA'gFR><K2RWOi/B.AIeA#=k6=D'U1JiYn!p7$[#A
%J7Z[;9@2HJro'[:+r=gk]"pL>DO?49eD(G2B@_*]7qnc9a>+KYGq:<&Zk2j+SE3j5Ub:1BNUX[d<;i-I/Z'peA%G&7KlW+2-H"H9
%1drYK9Xd_P&?>-($#^u-dt4.]_@'3.k2gQ.03_?r2N_$HFUu-9FYfYOh98_'_&&kPbc=Bn\<\@DUUd&5Xh:1d4>XAP,tGFf;nlG]
%U1`j$"YKXqE(D9u7q1m!BM6pnj6]Bn&#PPc5f%1132o`<FS5,M?8meI8Jc@`0;VuH\qacD>k%8%Nn91.dF[AlBtnr8*ZD!?:W4mM
%(&U)FlOB@U2nhYI&f$M-ECfX<L0Os%9%hMHrU2s%KqL.+reT"*UmEJR?]lK7`(H6`)F"W.>PZA4#5Mc>+7cF9cYi\&<m2S.P9ubA
%JO=,GU8.kMkSqY7VaOi?JCYji\Yb.DX"U1=X\6?dL9c/H"mO7b^"1&SQ"emMm.AAj:sHRE-3Wo^$t1t@g7[1gOWP>A:sNR#Clb?d
%K1.g$mIH=bqO]g4gFbo9l83(e@L9k2H.IpFTA-`,/<??`4_ATfdH+$[dM:,uXT,`N9fP&M[gYZI(&10_MUP,!I=@6l@JfP*0TH%Y
%+,_"!`@LtYk]J&AQ9[<M`AAqreB?r4S_X9g?c7B,<HT^nR&teI*4KNOSgG_F!mpA53&pV)b9@aj)BiCk+DjDmo(='g#fY('e!0A\
%8[c"LI<1^-BU<=ra4:1+PXaLNWYT\k(OPdW:<I[^&(!2,(toei>q*Xbmj;2-1d41<dNbMS\7Fqqhn4J:]$UU"G51Vphkj7Pfg4"J
%#<A>&c-q(=Z/I3"DY)MeOqjB;o-d)$Jhc]aNO12"`9.T1Ab-C<+d#NF3DA1Orn(Y9F`r[=86k-VN,a&Nn-n\Nq42Eh!*_T-@-Pi<
%52,<]Rpf<[df)Y\kFtkn<6F>$3T!E%8oq"VpLTZXmbW];(tdBP3W$DDg_1;:pAjTL%8"+Bn7)Vnb^[5BB:&&0@oFfqr(Ut]?S:[S
%cD3(JT9_t1_aKj11%@TB]XW;XX*smAY7bQG-MCmM`ZKg@7E%&MQni%M9S"2s^3%'/[`9Q=9DG#f6Xhuhn5=IZ1+YW-/tk@EAmsn$
%6?\Dp>!N9E@H#J&Kk:!<qQr>1Z#k;AXI.Fhm<ed4=[.<HMdOoMc*"VrZ%TqSm)$ho-+r%C-X,cNHL4lsono=^C/1^?04,9K<D)26
%:aP<V_N)VFM!>bpfWrqJXVWM4J<c-[,ufMa<DDn?;bG-q@7gQhg)5NS>;LSmFtaI$73BG,PaiTs!ubD76=(Hh&n:]XNrC9pJ(uU1
%!jinb@QI&l=-?b'^#[YM:Fj]O.q)&1qmp14dRg=6:;<asE((KEQ%!__p;?*te)?1NRJW(Y/#j`e'%0hF*Ac!l$Ssq2+551,O(W8&
%6;m&a%FCqqN9grEI^WQ'Z%)3`/=+'u_-PmgZ(qBI#t,S\+[<&nTV=2)[bL9;9aZ!'f?+rJ]$bpd6bh($\cmnd2X*T>0Ck])n)Pb1
%:Wm5S;V']kTS"tpro4gYI?[TA5V?:ceraLLgBhM%I96Y=PNp%Ym[CX,/:)V(GXaL4Q9WsKJPED`+=>\RW.H%t#DC+C"?X?-RrgC$
%5.mV]$$LEhR6jWaSraNM$V8)t+L-9Zf_FHGf7GY0`4.q\m!c$fr;r"!PO%F@0jW*.43$Tn#9h^ho$IChEL&ZQEd`1)XZ]XB$,tc7
%+=>\RW,d;?@.Hj/S_6L"AqiZ/GFJu_p!I'K;n8K]OQuq9>`Z-FJK6mIEd\Wp_t:u3ES]^PZBA;"Nr5Zib^Yq:Q,)#i@i-$-4*Yuo
%<WZ(=_a;V)mV3M"B>_WC%JaF4"\nFXa/0fGGSNYJcu,kD-"/)R[Ht-)SQF17!0TiU/N9X(rRWg,Q7k<ZNQn';*1EpR/Nt&!db]As
%d%Zh91Le9WrGY%c-YAo/,g;YT9fi*pY;IJoOQ0;VEDSdb,n*Kf59p9;70EN4e%]jopf$jhH1Frp/Vj_2"KHEMW`2WsBm1KM,b$D_
%$R;*V\ls!+.@!U6$/)\9PYF\BW]^_1VE$5;86X^_*Fa4^@hh_:)f_;Qdps+Q-u>qU2XOfoaFk5TXj2#a9V$@[Zs0M-HY,pVMQ^=t
%'28d4d=dal_ZUQ?e*aVWPA!95\!A;ge\Njh\gEgX&s=\/P>!]1[X=j"BpGHGk@3Z1@8OCRR?D8e`O?!l.Us=)pT-ljKZ:AE0qZP)
%KLh\P2a\HBER/Vh3ef^>0kq(e^IgiBY6&783F_2Fb'<QESLr_#$5'ccWV:*j"5djKV(1U:H0Hf]p<-sDd0#kJALD]-h$_c<11A'Y
%Vl0AkO?_;jjO(0:_\H=\PX6lmS[TJZbG7?<o:]4#kHlNs!1LDL6i:j'eZj_g8/ZO()i)Pc["#`CXZa$1l]cZqdN!pQjk5A)ccRf)
%17Pt]`MdOW(H)t[jFo17cV7eAr][o%0B?A$J@#2[KB%D_mU.[U3!WK:`B6IH-7%BN!JW*<::oDVjG6O'G[aO=Tm3dT[aJ^.ZC-dr
%p@/P;N/q!!q0,W9';/o4XFnnST7[sD?"KW6;3o=[MbsQK3o^AFm(tQl0Q4N=c"Z8LdUVFtZSr%#GEi?mPpX1:DE[6:IPm!`kqfk+
%nsW)CA8f^pq.[6k)^2?7]Rt?#rPpS<0>i/UF(#"(l2#AqhJ)Wno0r^#K"1qG87D*oN!1YT0Ym/j#2=Eilj!n]/rs"'%pac4Q*54)
%MI=e)mfTSI8)R`)r.)Lene#lWAm]GfnJJ!nUrS5"WF@e5,^*[J50eCSho7aBG%1Sb2dS)*gQqTjJ`9WT7nTGV9jY(e[dAeT;*/Fk
%C`JtDh8*c,2,Dj4PhR+L[M9UCRRI;?Z.pW1B)?9;WQgSb?#Z=RKolOoK<]fPH+lQ4/,Io+p)FNt_K:6[s/ZLTq(X`g\JHDM%q'IM
%F("FY,$d3jm>cjBg3Cp5]lnlV]OD;%=qK^S&(!(8n>bHf14NmKakXOaf2D31cGLlli:^IgiAj\1&YAT(g'5U=_0lfVIl4r>-TZa9
%mlLAZES7TYU$&tS4:H"2?kM.ZIN3Eu_!Y0n$.R+2B:RgQpc6Z8'NTtd83mM1L@($Zctq?E//urpX9uL=9&b,I(37lo_t-:8:44"^
%RjZn:%4Qls.u_77e7?\n=E.PgQ]S6O1%NTmV@dQH/H-AW6XGqhr!E38MnsgmdSKJA2cls;\5$H'8e0U<O6a,V"f$0ETAB8Hdpl"a
%RbhRG*2!]'"W6l3h.ee!#Q;/m<p;EN1\-u)pO93(K,sr2I,^XA<SX3Vl9B`KhM'^p,E;MB>b@]/Vsj$@c]"(`FAkm<=[X_]fB;cf
%Y/M(r<Y6aNT-nH]9;(m%C>+`@T*^AG1Vi5LBiSMHTQDM,:sPjEd+Z&P=*Rg]6opN0QgCuF/g<EB0KRte:^Slpk*,99r=W2AAKg2-
%iEMUWP/Y*LO&OE5c_:HZ(;D5NDq2^6j2(">BRa;QZ#EcD'"QKWA/"%MqG,/WMoVQ)qQ<>$p#:d7+,fdfV`h#&nW,.#Nqt0%hnNU7
%%=L`L0+776kM`6Xc3=/I[(!JmT\0eD%85BaktAdaa<jXs/l%VLoJ.kA\3oW$Ft)1UD`pqoDe$o%j4);fD:u9o5/7k!#-K9uP*.W$
%RH@CWTO_7`)KLc_reJ6/G<768Z.gC9To-l1I-''$P?U$coksjg<?0)'jP'YuINGYRHBF3GXpKT^)bjb)9^t4qOXcsMa;*mA,P:kD
%FTnD&DBXkk0HMNmfU+hTWV&RGRHBAk#N4bk6?G;KY9MZo1R^8KBr)i"6'"ui,>bf<Ze0sNNQIkp2YHJ`)a>emKKW2)/'2gcJLVfA
%/?54$f31L>q\ZA=NaL2dJ,'!0\0+i>9?sQGHp>u0i'*3>A%T9/dkWO(k&uf'j(KHK'PL0k=o;XhC:/k\-N=@85>*#=$dHmQ+>gOB
%N;asZ0?7O5A8MCG,=j+'/g7G_2mF;Q02Y>,A11&8"F=/VLtrEIRJ!2EeOY]FQ%0\mp3'OELp$YoB)bZJSdI_.d-En9I]@\p#c6e2
%U5oHclFoBjHfX56$4p."MR++LjU]YUGl4\=2uQmY!3pmlkO''-Nh3#cXoEk%[0dIW.Ggg$6pS9aKV?jE5^9D2EsV99Vh\KQ$4rY@
%BKcIhf.u\&WrNaYR4:H]C2SSZHEeL'[s:'"Ocjdu!^p_5=ofhLp=i'8>7.qM7Wmn+b`VtiYQ8sF25#^REZ*E[<7>SbRpiHI.Ce<j
%i_2V8^op_\ZL5fH@RmDnb9SLtb6/`H$1GK!YeY;-9L:UR#.4JHem$Pag$?mHPWS%=iYlaT)51HU=F"kb;m6Fog:&AHk6(T5HY.M]
%:JRMg<7;]LmP1@u^b[ur@jV]5K(=PlVLceB!_Grd$+7#7GagA;phX9edCsiZ3oR8hoJZM88=H_Oa?15h=pbBVa602JUp3I*%;9RD
%A6'fb@]V6;PPC-B#h1UZr,&U&/48CmMmk=1M_=eJ*drH8?s5kE`\"3[>j99r<GCFVh%puYO"gqP&V[Z\S=;`*^eVFimAG;g(9T2\
%hVo&Pb2-6EH@jR?%lAG8/k+l'/FW4al;$MJW@U+JV$$WZSI+J]GQ(u-ou4Cd/*V/uK_*7_JeRbHLAeF.>NB&MaZM/:1XG/sTutQc
%SOm4#FPfb7/#E"&2geE1gT2_eSkR(XNcd+ne1Q][^1gut/7r44Z<.6>m`?sc1@4D`Q6k%C.D"p@YC^e<@/p:/pGS#M8#aE/8kUSZ
%(jWctT'%b/?:"tK-$1<r&TBU1P,+EJFJ2mp+Wd_pmc5qBd_4FQ?9j(=k2?[H/%.8p:ht(`U:&bl:e3`M4dNohS.AjU*nR*dr\VLM
%A^rl2<k'g@2scl2h]jj!;B[fq\I]m?[p-Hk6\%kb\eWm07#U`1pJ>mOa0(at9DdKBU5OQRl@M8BS0#'b.1p7Kfka&--\D9jc+LZS
%'S0V0M^':a2%JrD3pm"c5MD1'T%!jDI66b^)3LU`NC[_d5I^pRf+c)lSaK/b+\9_(>5D,db@W[qk!u5%ql/Fne5qa,c\GC;;p;<1
%T9kh)&-"K<RO,46^SON[;nL$B1JNJmV9tBn-]t)nPXq`[%^G<!>9tQ&G?Ptf^)\gnTb!_]Bp%8\G2hiL80;8f9/_XsAs*8rGe&V'
%-1G$hh`V:_akqI>NZ%_@/IR5l%4s)l+7(&t,:87uH^:)3K)Rp[gqJ>qTAS$uSCd55>KF<ao5MTN,'o==B9X*bAs#>Sc?6OTAte^>
%[:6N>C4R>W:9*[LO.!Rb`5]1"c?u:;5J'*3@Ul88>q]YES7hSN*e"07+b)F@RS/OU9T*&LN,(kjj[oNo%KT97+Lek]O&k!"!cN;]
%Dge;agIQ%Zlc[D%W6Ne2Dk81M,\6PgO3LKiV6guKYCY/b-'6K\/7sd5I:0f04cHRK/G]<He4fiIUo]Kd!0Cd;,S.c[I,F`c;]=-N
%$q_Ro"Vn(fHC_VOdV$IMOI?uH7F1m;\'D!q`NRJ&>_#V2a!qNTL,j__LAa%&*\F8?]"NF88@$eie988hKTa*"anPq%13ZG8mp/L$
%dt@Vfd2$M'7bh)^T\8W(DBXOJX2@GO1Cq$u%O&($NZ,1QmF@s^bZL4)A?B'41"RR"e]#7(:"YMQ=.+8DT["(bF))[Wc#ro6P9["#
%HtdNBh-,TMEuU]Qlh6q+Jm2N8+KT^46j)(O2+KJ08OnNj>*i'lefi>k1Ej_@[sM8_L#Jf=3bR$TICM/VXE=hAf"+-&=r2hS-U@;^
%*u0,s.YBoeXcf;\l^$YHSe@FuGePj_)u,sAQ;R;;afp.[Q!r@rPsiVR*t6<sr@AB#nXqZc6dJmQQD&(X)4$D2EFW+bNn#)dZ6;F?
%_f@m&%*R!u<eb2:?F_jC6P"F'.DLIK=C2o2X\11^130R9%*Q_\].kiUoWp5&a+M[AglEDl1>`%==GE.3A6;=iD[agahAMUgq,nQ#
%j14AkGq^eI8UW?F=/3kX>Hh67MC!j""4.T0]oB3?EYk=V"UF0jTdfX>$OGpVRbeg9IJ$+?>R`:)`p%E"L#ek3<h-WP*fR8Tl^kda
%f+Kk&DKF[S,#HL_&>bt//6nK-$q=PZ8GCcg#Jj8U6S#>J.$$haM_]:llXJlFBE[e(2p`X?S[6p2qtmfg=Rl;4e%fHmmkV#<GbOfT
%kp(`h)h^J[mF5Z4*C@dPcD,fQBqScn+#8g.'\T,C_'X4[e^K/&iPjBAP=j8]B%,h:P2nFi%8TknHt2pHAFn_rPdVQ,.S5-M51X%F
%:"Fb"W?_[5Gc[#UC8@#D,/MQ-TlmHoYZ8sP+mgSR/$3mEbSlII6C49%A%2C?SK;Xh2jA=;kP.*WQ$I`fVKJU4mD#Fl%ELQbkO3)%
%=hN].7?>Is.)^oXZjWFNC]f@JEu(,@;N/FP5<,*!6>).D;7<Na=H>S`SVm^XRkj="kLK8P,A)Z*GWca627!!.bJ9Vok14c2k#fsP
%QYF2`,6aC(1%4GFd:G^!aYH?a*R3mO2t6@)<=iSuq[,T;Nq,lXUZi4Aii*gd*DJ+YDg4_"\l_4#(C9%5]<>!h$?\n4EaBR!HXH>r
%L[j0rZFF(_*QQ3;=WF@i@-bk"`V"!mU%Mt_VXlk>Cr861:!Uo`$LLr[Y;F54/0;-H>8Anfke1p/RrUuRL@ZO?@Yil%j8s]pS!G6Q
%k_Is<8!as%c[kS7N9+m_gAT=.U10XN\*XeVT0Bj@4ZPIH+%uQq=$=/F#Mb*7A'[g8TCbKdB]TC7BZT90r>YHgSA+E'k88D'*GAd$
%0],FFdk>CgNsLWlaKsB4PaIW9Rl2=jd1=nN@/>/dR9f569k\9B]\j5m>;9Wn'>#dg[_J9[VWWrkrq:?dYmihKUZ\3#5k)MF"a%`N
%CYUflEaH]ei>_=`L:Y<OJ&)sVNnZaN?YT/o\MU_&&"g1V^FT;s/jW^mJc@=#lcMK4U@!KiKOmOe]a-`KD9RqSVs]b8q;7CQ(RSsZ
%krmn>oYj6EH.t[ONc)DYrTIs=#*@Z@Xht^C.ENOX(n0]I8o#HbOHaVkpK4%U4PSN^oY(G[=-,[Q9D7!5dT]5Z(27NXTrE,0\n?4o
%FDccPp+pVYO=ac7E^+GsAcm>1:#U!Jjk+LEP`7R9(Ha=Ogm/c"V95e?2_?LYA6\F+_\m)]f7mC*)W=N##EsdXU1/WbdS(06ouM3#
%-3Y:g@Qj_eoDd<_/Zj?c7W<;8IlJB7ZFH5=NMOrQ'6=8,"3DaKm)$U5humLNfHqdA5#Y?\F_e]GGiLj]1jZO)<^02iHJOQHKM=ZM
%>3n2#hQ9!gf8I.nm@Z@O+4qOrIbQJaRI8@aOYMPka7D!ECa3Giina/H`!&(&;PjMYPVZ<2*RumK$\3_:he+5#b0-"u7&]1[";'Y"
%XJl_P"ILn)fK/T".Mssd$U!b@NsXr9s6lS[m$e`((-@;b%J`m81@h7C[#KG^Qj:YlNcD,5JaJsK1[Ql'l>_(3iBPfoh]7A9^:RHc
%+^q*'^-iUX+Nq8)R,a@Kc4a^K^VJBVW0,WP8=G?A=$/4!9]T'go7Rj>B&?/THOEI0n<LXlOmu^N(#?59H"gp<\>)YOf54u3)L#WF
%En26)jW9pbEYO*q&<D6Hb1"7Aa,O7Cm]8CknD!dfpg/UMb:]&##&\?&[q&0/]Bn>=b.$b<$I@lJ3V&U@&s"^O=,,3L2_SM$<b8:d
%/K='q%L<eJgG.bZO$(#Iqps;UmF8LD\Xsiu/JpqfgTO=O#"eH34Y^X"i3,'0&f.Md#Zg%X%?@=dR]f7^%6Z_!:tg#)Q3qn]7Qh8&
%1sphR1riPZdqJcE01V:[0(f#1%<T?*KDi:g&Ns4>H5'k@G&Ut7lsViSqlt@.j@V;D>Oo&'-SQ!I@o*jehU0pR>8S]pO*:>V81AqO
%1Ord0"=&'RUYjt7LGo;/=X%u1C>fS=_n_7Df\e<.cP*qW5#/YNoF[5b-MM0X_.I[ONN[M?j&<O8g`I'hY3t;g?8e(c6AE%u>j"".
%mg&a\HG+h3nE^D^(7mU)F<-4/&TeY60UeMY#`Q<N)b<?*!eM8M@E`m+,IEu)!$^mJ5ZUp,fr:`77RrGY8AuLH;*b6fMLE-Lk#8aL
%AWJ5"1;O'>6'*2l=tfc3N!Y>3k:8h]1'=V6;@?2SjF&+&911!aL<EJP#\'_C5EATk%1'%'A$ZOco)2?adRPA;),Ms;:6cZHdJQ+%
%=-`@LL=`Jep$$I!L6D^X/roE8[-$/iN3\p\lKm7UH%Z!#E:h7/h]%^PIHldiM;[umcc**JE!EeD_ZbH-$dVV`5"K0IP;]):Uo[*A
%b,2VKG\h=cqYbDm#smXJ*dt#WQ(m3-F)7QU8M#[FkYl4V.g2ctBr;=1oJg/e0_*m`Y//ZfB`_M")=3=Se7j7$`jFA[14!>eSgr;F
%['jmpO)[G%p*(%qE;.Z;:6k3A;sP@2(F#X?(.^^;gWlf?]6JB[8kBA_T/gUa>JhepnNgl2aeEGLmSkY;8ClLC7+U@+p,[&ZWBa\#
%35#+*f3=-O.^_15O9cI)aJ&*(#Bfg8Y&-i+&-DYY:c*\\kCl];6ZYTX)ID.S[Mf^ae[rb/RlCiCX@O9h/#Z\g,3kg[/;4c2$Jh?1
%8W+oD8HCZm-M9_^.S0qt)HS5aF1b;WaQ+Q4<=s5QAHKJa'<2uI:\^TIUsLY-o'W`R9*]=m2EpaR"nqk-]4sA:qP`]"2p`'>qLBGn
%LfQGT/>Tn3#F[d"La2%"1^KcE+>%5OE(#UbP/rDRS"<oLm_of;>&h>$(hZ/PN"a!<"QQ#.0t3K\`8YUUTIu-hEAeDl_NirVRR%9i
%gVdK7(=8SM3FIK;)(^=Qcp:IAMDrnK1g60QGb#h-o"6>fSVGuR@C0pb+8sA>4>Hcr"H?jk,nYR3-0\6CE%n?=#$@54"bq^Hk\tmI
%HpU6Nm,0VXDRNQ(k/Y!+U!q#CHmn8l'6u,&@Us3%;UtG9#?D#`30m%DN=QbBR:/_d15c&?AlTRMXpY"N`q-#7nTW5oYf=/u71pk.
%lU[n+(Yh&c7dd!Ta:8k0]Q2:sXR_na8U*WKi=8c&.g`I+iSqe7&me,V.g_"2HH7R)glW`>&KF-/_[U?ODdhd='QV-pCf/sEWcE;X
%a?@m3#^L!5AJF^8fKKXfPnqg?Jj>V.?m45&ZK,+9o5,EQGsiq=%T:@U$+_GDoL2J@Nh!UNiAg^JTrX>s7tR*i83,:88Uu4uK:EbE
%WDg&QFkYo(''>+BlXguobQ-?WG9SD2_HD[Kk'H^MiPC`obmK9r*Ydb:aUpbS-Es+a?ILkA_rl,LL.8/(G@jhGd(OF,ihm`<0,_P;
%T:Ag[T-NP8?2aO&\j%n?U1Z^gHcWm'Y2AOO3S>[Kb$u2Gp4SPG`>$IbL.T`n>S\>X=I@1)ZKt1!b:n95]3&)B.nu\7fOQQ26p(2n
%Bt5p0SeVuOg4o(h`1#<aABD34HO@3QJ@G[HTZ.jlD<lKY"U-f76\0qV*%TbRbnM?_dK"k#$`iPt.O-c6lE;'ad_oG>oN):2>oVZA
%]7FEi*OM]lG,mMHEPdHrifP62#br6>h`8,e%GJ<q.aXY2iOj_ji3ZV*2XBoBoB!lN!*4!RN&UuckZ6UaM(:.b[9p&6Es6dM1l;!_
%cM27(@4G<05U-?\JInk!5`7koG)I&YfV/Z5Yih=NTTUbZhA_Td7*P)<K22TJ3)^pA47"<doIOSb=+nXn#8qbiH3cEo4tLI$/rSf3
%CuQatooI(Td4&;DWAclVS;*V[b\9;Q\6!i0WQu^Sh\a^OnmR"2AFFAm2[t2BE7;j6hd"sQNnu,CrMKpiP8^tQD/r=Y@*t'8*FdSS
%&B*K3pB"=T5k#Kkd/;@!PJfm3N)IW,WKd.32*LRb=M`-7?;-hM09D3.jQ8#CYJu7)W(Ko>Fre[U<qT3"X/a!>alW`Q>gcrDVDn3U
%6D0(4R.lD:4nS86$9Ab\/Pk/l5U='MQP@6P0%%96Yd*?lXO1mDb`[D.RLo%^Vb>j$:AJaPoV%ZBqU3!8>`!QZ,<`<N06QF4Y'R.-
%c>B@9m+^<sU2-O7[uhG'FSeG!oX"#-d!2V+-g9E(#B_Nk^tq?N#=[01?Qgc<_:Z@>lp<Y(#:/9kl2",)N><7T7Ot'(bs0(^O/keg
%Do'dCrV?`i8>HOa5bqRs#G?%faoac-JJ3-$.uW*>cR:'GCNoZgq>GM6`7l'M+J^L$5t2-QrcPe=TGd',-`Vl]G,UX$URc"X'0BPP
%5Up+)ph-UM!1/hI%<hA3dHcYCHd?3.],1(G!U^[#IKo1tkh^0+lHJnT,so>gFKAruNo[n-3cR8&Q;&7N-]$[j3s@&FGRGr*3so_h
%#!\FJ5os7f"SP:(;ZldEGT*7$,=oh*6[@A%[+P)+q=,'&(KH(mIokdg$sM(!h>1leAiVn0,RdDU4VmWl`;]T)37Zteo',MtW_X5C
%`S!#OX4nqeObm?u?UT3V?9hQQ@0b.q0XV)/M[]WgQ\:+oeGG8Wi4j0W??p8^NE^kP?2L@7#W"&@0>*?]qQ"O#&sAe]]r4oZUWli%
%J8k8ed$+[:M%ccTKk^3\WKd7rMQWM.e(R?7&:6$k)T'3]K=Bt*IJ61A]C2Agc>+5;VFEuW@b6=%G2W%4pP_8u*p[Z@.IR[\HKa4F
%T$_*JFYs9^gEYQ(S0XYf]?CUNMoO9Ig&k2q<&a<^9Ko2ZdZGN&V^3AR/=-'U"P!p"\,.%UH:CPTg"DFmf#a&bb<aAQ&s])dkTAD3
%>.c0R64;[%Umcie04i]iKP<s*W'2F".RjMsfOYL!Z_c.?3`_:8`cgN\42KXJ7G'*cjDZPR#Eh#kh^j9c`H4<6l0_T(^=Mo7S).hT
%TVECr!^SV]%@u';6`MDmUV7ij#ne.A'BHS*1O'^Zs'f(DXiPDE`JgI[;0f:TFe3Mq\*@sFI(C8,Yu)8#:Np;N'5R&`9lkB_Db4g+
%9<ftDWO4>B@BSd)ff@Qc%_r(5%2+WegZ/>;*IG=X!*bXsK>m[Skg9DJ&2u:<@(/LXWeRK.Hr0O\cn#q&mYlH53]I<D5>>2a?rMSO
%gl";[8*`f4^4@?Wh"gD`qTWrNrq=sQDk;IYp<C5,rNZ;!Qd<E1^\mQnlVBa9^q2hGI!kn9f9_!dlh0Su2]ofJr9*b;jn%Xghd=+4
%rqlWBe&SYqhnFU9qYKjO+(,!T"@(<FhS&gJ:OdWdk5X%,@U9~>
%AI9_PrivateDataEnd
